

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Nov 04 00:27:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001512                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for main@F2555
    68  001512  49                 	db	73
    69  001513  6E                 	db	110
    70  001514  69                 	db	105
    71  001515  74                 	db	116
    72  001516  20                 	db	32
    73  001517  73                 	db	115
    74  001518  75                 	db	117
    75  001519  63                 	db	99
    76  00151A  63                 	db	99
    77  00151B  65                 	db	101
    78  00151C  73                 	db	115
    79  00151D  73                 	db	115
    80  00151E  21                 	db	33
    81  00151F  00                 	db	0
    82                           
    83                           ;initializer for _button2_msg
    84  001520  42                 	db	66
    85  001521  32                 	db	50
    86  001522  3A                 	db	58
    87  001523  20                 	db	32
    88  001524  00                 	db	0
    89                           
    90                           ;initializer for _button1_msg
    91  001525  42                 	db	66
    92  001526  31                 	db	49
    93  001527  3A                 	db	58
    94  001528  20                 	db	32
    95  001529  00                 	db	0
    96                           
    97                           ;initializer for _current_func_set
    98  00152A  30                 	db	48
    99                           
   100                           ;initializer for _current_entry_mode
   101  00152B  06                 	db	6
   102                           
   103                           ;initializer for _disp_16x2
   104  00152C  01                 	db	1
   105                           
   106                           ;initializer for _current_disp_ctrl
   107  00152D  08                 	db	8
   108                           
   109                           	psect	smallconst
   110  001000                     __psmallconst:
   111                           	callstack 0
   112  001000  00                 	db	0
   113  001001                     _spi_rx_invalid_msg:
   114                           	callstack 0
   115  001001  49                 	db	73
   116  001002  4E                 	db	78
   117  001003  56                 	db	86
   118  001004  41                 	db	65
   119  001005  4C                 	db	76
   120  001006  49                 	db	73
   121  001007  44                 	db	68
   122  001008  20                 	db	32
   123  001009  4D                 	db	77
   124  00100A  53                 	db	83
   125  00100B  47                 	db	71
   126  00100C  21                 	db	33
   127  00100D  00                 	db	0
   128  00100E                     __end_of_spi_rx_invalid_msg:
   129                           	callstack 0
   130  0000                     _CCPR2	set	4027
   131  0000                     _INTCONbits	set	4082
   132  0000                     _T3CON	set	4017
   133  0000                     _T1CON	set	4045
   134  0000                     _TRISA	set	3986
   135  0000                     _PIE1bits	set	3997
   136  0000                     _LATDbits	set	3980
   137  0000                     _PIR1bits	set	3998
   138  0000                     _SSPBUF	set	4041
   139  0000                     _TRISDbits	set	3989
   140  0000                     _SSPSTAT	set	4039
   141  0000                     _SSPCON1	set	4038
   142  0000                     _SSPCON1bits	set	4038
   143  0000                     _PORTC	set	3970
   144  0000                     _PORTD	set	3971
   145  0000                     _TRISC	set	3988
   146  0000                     _PORTDbits	set	3971
   147  0000                     _TRISD	set	3989
   148  0000                     _LATCbits	set	3979
   149  0000                     _PIE2bits	set	4000
   150  0000                     _CCP2CON	set	4026
   151  00100E  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  00143E                     __pcinit:
   157                           	callstack 0
   158  00143E                     start_initialization:
   159                           	callstack 0
   160  00143E                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (28 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165  00143E  0E12               	movlw	low __pidataCOMRAM
   166  001440  6EF6               	movwf	tblptrl,c
   167  001442  0E15               	movlw	high __pidataCOMRAM
   168  001444  6EF7               	movwf	tblptrh,c
   169  001446  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170  001448  6EF8               	movwf	tblptru,c
   171  00144A  EE00  F020         	lfsr	0,__pdataCOMRAM
   172  00144E  EE10 F01C          	lfsr	1,28
   173  001452                     copy_data0:
   174  001452  0009               	tblrd		*+
   175  001454  CFF5 FFEE          	movff	tablat,postinc0
   176  001458  50E5               	movf	postdec1,w,c
   177  00145A  50E1               	movf	fsr1l,w,c
   178  00145C  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to COMRAM (12 bytes)
   181  00145E  EE00  F03C         	lfsr	0,__pbssCOMRAM
   182  001462  0E0C               	movlw	12
   183  001464                     clear_0:
   184  001464  6AEE               	clrf	postinc0,c
   185  001466  06E8               	decf	wreg,f,c
   186  001468  E1FD               	bnz	clear_0
   187  00146A                     end_of_initialization:
   188                           	callstack 0
   189  00146A                     __end_of__initialization:
   190                           	callstack 0
   191  00146A  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   192  00146C  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   193  00146E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194  001470  6EF8               	movwf	tblptru,c
   195  001472  0100               	movlb	0
   196  001474  EF08  F008         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199  00003C                     __pbssCOMRAM:
   200                           	callstack 0
   201  00003C                     _button2_state:
   202                           	callstack 0
   203  00003C                     	ds	1
   204  00003D                     _button1_state:
   205                           	callstack 0
   206  00003D                     	ds	1
   207  00003E                     _spi_rx_flag:
   208                           	callstack 0
   209  00003E                     	ds	1
   210  00003F                     _spi_rx_invalid_flag:
   211                           	callstack 0
   212  00003F                     	ds	1
   213  000040                     _spi_rx_message_buf:
   214                           	callstack 0
   215  000040                     	ds	1
   216  000041                     _manual_transfer:
   217                           	callstack 0
   218  000041                     	ds	1
   219  000042                     _transfer_complete_flag:
   220                           	callstack 0
   221  000042                     	ds	1
   222  000043                     _slave_mode:
   223                           	callstack 0
   224  000043                     	ds	1
   225  000044                     _receive_byte:
   226                           	callstack 0
   227  000044                     	ds	1
   228  000045                     _address_counter:
   229                           	callstack 0
   230  000045                     	ds	1
   231  000046                     	ds	1
   232  000047                     _init_complete:
   233                           	callstack 0
   234  000047                     	ds	1
   235                           
   236                           	psect	dataCOMRAM
   237  000020                     __pdataCOMRAM:
   238                           	callstack 0
   239  000020                     main@F2555:
   240                           	callstack 0
   241  000020                     	ds	14
   242  00002E                     _button2_msg:
   243                           	callstack 0
   244  00002E                     	ds	5
   245  000033                     _button1_msg:
   246                           	callstack 0
   247  000033                     	ds	5
   248  000038                     _current_func_set:
   249                           	callstack 0
   250  000038                     	ds	1
   251  000039                     _current_entry_mode:
   252                           	callstack 0
   253  000039                     	ds	1
   254  00003A                     	ds	1
   255  00003B                     _current_disp_ctrl:
   256                           	callstack 0
   257  00003B                     	ds	1
   258                           
   259                           	psect	cstackCOMRAM
   260  000001                     __pcstackCOMRAM:
   261                           	callstack 0
   262  000001                     ??_isr:
   263  000001                     
   264                           ; 1 bytes @ 0x0
   265  000001                     	ds	1
   266  000002                     ??_LCD_write_data_byte_4bit:
   267  000002                     ??_LCD_write_instr_byte_4bit:
   268  000002                     ??_LCD_write_instr_byte_8bit:
   269  000002                     
   270                           ; 1 bytes @ 0x1
   271  000002                     	ds	1
   272  000003                     LCD_write_data_byte_4bit@data:
   273                           	callstack 0
   274  000003                     LCD_write_instr_byte_4bit@instr:
   275                           	callstack 0
   276  000003                     LCD_write_instr_byte_8bit@instr:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x2
   280  000003                     	ds	1
   281  000004                     ??_LCD_Init_ECE376:
   282  000004                     ??_LCD_clear_display:
   283  000004                     LCD_set_cursor_position@pos_on_line:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287  000004                     	ds	1
   288  000005                     ??_LCD_set_cursor_position:
   289                           
   290                           ; 1 bytes @ 0x4
   291  000005                     	ds	1
   292  000006                     LCD_set_cursor_position@ddram_addr:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x5
   296  000006                     	ds	1
   297  000007                     LCD_set_cursor_position@line:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x6
   301  000007                     	ds	1
   302  000008                     ??_main:
   303                           
   304                           ; 1 bytes @ 0x7
   305  000008                     	ds	2
   306  00000A                     main@init_success_msg:
   307                           	callstack 0
   308                           
   309                           ; 14 bytes @ 0x9
   310  00000A                     	ds	14
   311  000018                     _main$633:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x17
   315  000018                     	ds	2
   316  00001A                     _main$634:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x19
   320  00001A                     	ds	2
   321  00001C                     main@i:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x1B
   325  00001C                     	ds	1
   326  00001D                     main@i_632:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x1C
   330  00001D                     	ds	1
   331  00001E                     main@i_635:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x1D
   335  00001E                     	ds	1
   336  00001F                     main@i_636:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x1E
   340  00001F                     	ds	1
   341                           
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 193 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  i               1   30[COMRAM] unsigned char 
   352 ;;  i               1   29[COMRAM] unsigned char 
   353 ;;  i               1   28[COMRAM] unsigned char 
   354 ;;  i               1   27[COMRAM] unsigned char 
   355 ;;  init_success   14    9[COMRAM] unsigned char [14]
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;Total ram usage:       24 bytes
   370 ;; Hardware stack levels required when called:    4
   371 ;; This function calls:
   372 ;;		_LCD_Init_ECE376
   373 ;;		_LCD_clear_display
   374 ;;		_LCD_set_cursor_position
   375 ;;		_LCD_write_data_byte_4bit
   376 ;;		_SPI_Init_Slave_Default
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text0
   383  001010                     __ptext0:
   384                           	callstack 0
   385  001010                     _main:
   386                           	callstack 27
   387  001010                     
   388                           ;main.c: 279:     (INTCONbits.GIE = 0);
   389  001010  9EF2               	bcf	242,7,c	;volatile
   390  001012                     
   391                           ;main.c: 280:     LCD_Init_ECE376();
   392  001012  ECD3  F008         	call	_LCD_Init_ECE376	;wreg free
   393                           
   394                           ;main.c: 281:     SPI_Init_Slave_Default();
   395  001016  EC69  F00A         	call	_SPI_Init_Slave_Default	;wreg free
   396  00101A                     
   397                           ;main.c: 284:     (INTCONbits.PEIE = 1u);
   398  00101A  8CF2               	bsf	242,6,c	;volatile
   399  00101C                     
   400                           ;main.c: 285:     (INTCONbits.GIE = 1);
   401  00101C  8EF2               	bsf	242,7,c	;volatile
   402                           
   403                           ;main.c: 287:     LCD_set_cursor_position(1,1);
   404  00101E  0E01               	movlw	1
   405  001020  6E04               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   406  001022  0E01               	movlw	1
   407  001024  EC41  F009         	call	_LCD_set_cursor_position
   408  001028                     
   409                           ;main.c: 288:     char init_success_msg[] = "Init success!";
   410  001028  EE20  F020         	lfsr	2,main@F2555
   411  00102C  EE10  F00A         	lfsr	1,main@init_success_msg
   412  001030  0E0D               	movlw	13
   413  001032                     u711:
   414  001032  CFDB FFE3          	movff	plusw2,plusw1
   415  001036  06E8               	decf	wreg,f,c
   416  001038  E2FC               	bc	u711
   417  00103A                     
   418                           ;main.c: 289:     for(uint8_t i=0; i<13; i++) LCD_write_data_byte_4bit(init_success_msg[
      +                          i]);
   419  00103A  0E00               	movlw	0
   420  00103C  6E1C               	movwf	main@i^0,c
   421  00103E                     l2105:
   422  00103E  0E0A               	movlw	low main@init_success_msg
   423  001040  241C               	addwf	main@i^0,w,c
   424  001042  6ED9               	movwf	fsr2l,c
   425  001044  6ADA               	clrf	fsr2h,c
   426  001046  0E00               	movlw	high main@init_success_msg
   427  001048  22DA               	addwfc	fsr2h,f,c
   428  00104A  50DF               	movf	indf2,w,c
   429  00104C  ECD3  F009         	call	_LCD_write_data_byte_4bit
   430  001050  2A1C               	incf	main@i^0,f,c
   431  001052  0E0C               	movlw	12
   432  001054  641C               	cpfsgt	main@i^0,c
   433  001056  EF2F  F008         	goto	u721
   434  00105A  EF31  F008         	goto	u720
   435  00105E                     u721:
   436  00105E  EF1F  F008         	goto	l2105
   437  001062                     u720:
   438  001062                     
   439                           ;main.c: 292:     _delay((unsigned long)((2000)*(40000000U/4000.0)));
   440  001062  0E66               	movlw	102
   441  001064  6E09               	movwf	(??_main+1)^0,c
   442  001066  0E76               	movlw	118
   443  001068  6E08               	movwf	??_main^0,c
   444  00106A  0EC1               	movlw	193
   445  00106C                     u807:
   446  00106C  2EE8               	decfsz	wreg,f,c
   447  00106E  D7FE               	bra	u807
   448  001070  2E08               	decfsz	??_main^0,f,c
   449  001072  D7FC               	bra	u807
   450  001074  2E09               	decfsz	(??_main+1)^0,f,c
   451  001076  D7FA               	bra	u807
   452  001078  F000               	nop	
   453  00107A                     
   454                           ;main.c: 293:     LCD_clear_display();
   455  00107A  EC3C  F00A         	call	_LCD_clear_display	;wreg free
   456  00107E                     l2115:
   457                           
   458                           ;main.c: 298:         if(spi_rx_flag) {
   459  00107E  503E               	movf	_spi_rx_flag^0,w,c
   460  001080  B4D8               	btfsc	status,2,c
   461  001082  EF45  F008         	goto	u731
   462  001086  EF47  F008         	goto	u730
   463  00108A                     u731:
   464  00108A  EF3F  F008         	goto	l2115
   465  00108E                     u730:
   466  00108E                     
   467                           ;main.c: 300:             if(spi_rx_invalid_flag) {
   468  00108E  503F               	movf	_spi_rx_invalid_flag^0,w,c
   469  001090  B4D8               	btfsc	status,2,c
   470  001092  EF4D  F008         	goto	u741
   471  001096  EF4F  F008         	goto	u740
   472  00109A                     u741:
   473  00109A  EF71  F008         	goto	l317
   474  00109E                     u740:
   475  00109E                     
   476                           ;main.c: 302:                 LCD_clear_display();
   477  00109E  EC3C  F00A         	call	_LCD_clear_display	;wreg free
   478                           
   479                           ;main.c: 305:                 LCD_set_cursor_position(1,1);
   480  0010A2  0E01               	movlw	1
   481  0010A4  6E04               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   482  0010A6  0E01               	movlw	1
   483  0010A8  EC41  F009         	call	_LCD_set_cursor_position
   484  0010AC                     
   485                           ;main.c: 306:                 for(uint8_t i=0; i<12; i++){
   486  0010AC  0E00               	movlw	0
   487  0010AE  6E1D               	movwf	main@i_632^0,c
   488  0010B0                     l2127:
   489                           
   490                           ;main.c: 307:                     LCD_write_data_byte_4bit(spi_rx_invalid_msg[i]);
   491  0010B0  0E01               	movlw	low _spi_rx_invalid_msg
   492  0010B2  241D               	addwf	main@i_632^0,w,c
   493  0010B4  6EF6               	movwf	tblptrl,c
   494  0010B6  6AF7               	clrf	tblptrh,c
   495  0010B8  0E10               	movlw	high _spi_rx_invalid_msg
   496  0010BA  22F7               	addwfc	tblptrh,f,c
   497  0010BC                     	if	0	;There are less than 3 active tblptr bytes
   498  0010BC                     	endif
   499  0010BC  0008               	tblrd		*
   500  0010BE  50F5               	movf	tablat,w,c
   501  0010C0  ECD3  F009         	call	_LCD_write_data_byte_4bit
   502  0010C4                     
   503                           ;main.c: 308:                 }
   504  0010C4  2A1D               	incf	main@i_632^0,f,c
   505  0010C6  0E0B               	movlw	11
   506  0010C8  641D               	cpfsgt	main@i_632^0,c
   507  0010CA  EF69  F008         	goto	u751
   508  0010CE  EF6B  F008         	goto	u750
   509  0010D2                     u751:
   510  0010D2  EF58  F008         	goto	l2127
   511  0010D6                     u750:
   512  0010D6                     
   513                           ;main.c: 310:                 spi_rx_flag = 0x00;
   514  0010D6  0E00               	movlw	0
   515  0010D8  6E3E               	movwf	_spi_rx_flag^0,c
   516                           
   517                           ;main.c: 311:                 spi_rx_invalid_flag = 0x00u;
   518  0010DA  0E00               	movlw	0
   519  0010DC  6E3F               	movwf	_spi_rx_invalid_flag^0,c
   520                           
   521                           ;main.c: 313:             } else {
   522  0010DE  EF3F  F008         	goto	l2115
   523  0010E2                     l317:
   524                           
   525                           ;main.c: 317:                 button1_state = (spi_rx_message_buf & (1u << 0u)) ? '1' : 
      +                          '0';
   526  0010E2  B040               	btfsc	_spi_rx_message_buf^0,0,c
   527  0010E4  EF76  F008         	goto	u761
   528  0010E8  EF78  F008         	goto	u760
   529  0010EC                     u761:
   530  0010EC  EF7E  F008         	goto	l2137
   531  0010F0                     u760:
   532  0010F0  0E00               	movlw	0
   533  0010F2  6E19               	movwf	(_main$633+1)^0,c
   534  0010F4  0E30               	movlw	48
   535  0010F6  6E18               	movwf	_main$633^0,c
   536  0010F8  EF82  F008         	goto	l2139
   537  0010FC                     l2137:
   538  0010FC  0E00               	movlw	0
   539  0010FE  6E19               	movwf	(_main$633+1)^0,c
   540  001100  0E31               	movlw	49
   541  001102  6E18               	movwf	_main$633^0,c
   542  001104                     l2139:
   543  001104  C018  F03D         	movff	_main$633,_button1_state
   544  001108                     
   545                           ;main.c: 318:                 button2_state = (spi_rx_message_buf & (1u << 1u)) ? '1' : 
      +                          '0';
   546  001108  B240               	btfsc	_spi_rx_message_buf^0,1,c
   547  00110A  EF89  F008         	goto	u771
   548  00110E  EF8B  F008         	goto	u770
   549  001112                     u771:
   550  001112  EF91  F008         	goto	l2145
   551  001116                     u770:
   552  001116  0E00               	movlw	0
   553  001118  6E1B               	movwf	(_main$634+1)^0,c
   554  00111A  0E30               	movlw	48
   555  00111C  6E1A               	movwf	_main$634^0,c
   556  00111E  EF95  F008         	goto	l2147
   557  001122                     l2145:
   558  001122  0E00               	movlw	0
   559  001124  6E1B               	movwf	(_main$634+1)^0,c
   560  001126  0E31               	movlw	49
   561  001128  6E1A               	movwf	_main$634^0,c
   562  00112A                     l2147:
   563  00112A  C01A  F03C         	movff	_main$634,_button2_state
   564  00112E                     
   565                           ;main.c: 321:                 button1_msg[4] = button1_state;
   566  00112E  C03D  F037         	movff	_button1_state,_button1_msg+4
   567  001132                     
   568                           ;main.c: 322:                 button2_msg[4] = button2_state;
   569  001132  C03C  F032         	movff	_button2_state,_button2_msg+4
   570  001136                     
   571                           ;main.c: 326:                 LCD_set_cursor_position(1,1);
   572  001136  0E01               	movlw	1
   573  001138  6E04               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   574  00113A  0E01               	movlw	1
   575  00113C  EC41  F009         	call	_LCD_set_cursor_position
   576  001140                     
   577                           ;main.c: 327:                 for(uint8_t i=0; i<5; i++){
   578  001140  0E00               	movlw	0
   579  001142  6E1E               	movwf	main@i_635^0,c
   580  001144                     l2161:
   581                           
   582                           ;main.c: 328:                     LCD_write_data_byte_4bit(button1_msg[i]);
   583  001144  0E33               	movlw	low _button1_msg
   584  001146  241E               	addwf	main@i_635^0,w,c
   585  001148  6ED9               	movwf	fsr2l,c
   586  00114A  6ADA               	clrf	fsr2h,c
   587  00114C  0E00               	movlw	high _button1_msg
   588  00114E  22DA               	addwfc	fsr2h,f,c
   589  001150  50DF               	movf	indf2,w,c
   590  001152  ECD3  F009         	call	_LCD_write_data_byte_4bit
   591  001156                     
   592                           ;main.c: 329:                 }
   593  001156  2A1E               	incf	main@i_635^0,f,c
   594  001158  0E04               	movlw	4
   595  00115A  641E               	cpfsgt	main@i_635^0,c
   596  00115C  EFB2  F008         	goto	u781
   597  001160  EFB4  F008         	goto	u780
   598  001164                     u781:
   599  001164  EFA2  F008         	goto	l2161
   600  001168                     u780:
   601  001168                     
   602                           ;main.c: 331:                 LCD_set_cursor_position(2,1);
   603  001168  0E01               	movlw	1
   604  00116A  6E04               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   605  00116C  0E02               	movlw	2
   606  00116E  EC41  F009         	call	_LCD_set_cursor_position
   607  001172                     
   608                           ;main.c: 332:                 for(uint8_t i=0; i<5; i++){
   609  001172  0E00               	movlw	0
   610  001174  6E1F               	movwf	main@i_636^0,c
   611  001176                     l2175:
   612                           
   613                           ;main.c: 333:                     LCD_write_data_byte_4bit(button2_msg[i]);
   614  001176  0E2E               	movlw	low _button2_msg
   615  001178  241F               	addwf	main@i_636^0,w,c
   616  00117A  6ED9               	movwf	fsr2l,c
   617  00117C  6ADA               	clrf	fsr2h,c
   618  00117E  0E00               	movlw	high _button2_msg
   619  001180  22DA               	addwfc	fsr2h,f,c
   620  001182  50DF               	movf	indf2,w,c
   621  001184  ECD3  F009         	call	_LCD_write_data_byte_4bit
   622  001188                     
   623                           ;main.c: 334:                 }
   624  001188  2A1F               	incf	main@i_636^0,f,c
   625  00118A  0E04               	movlw	4
   626  00118C  641F               	cpfsgt	main@i_636^0,c
   627  00118E  EFCB  F008         	goto	u791
   628  001192  EFCD  F008         	goto	u790
   629  001196                     u791:
   630  001196  EFBB  F008         	goto	l2175
   631  00119A                     u790:
   632  00119A                     
   633                           ;main.c: 336:                 spi_rx_flag = 0x00;
   634  00119A  0E00               	movlw	0
   635  00119C  6E3E               	movwf	_spi_rx_flag^0,c
   636  00119E  EF3F  F008         	goto	l2115
   637  0011A2  EF07  F000         	goto	start
   638  0011A6                     __end_of_main:
   639                           	callstack 0
   640                           
   641 ;; *************** function _SPI_Init_Slave_Default *****************
   642 ;; Defined at:
   643 ;;		line 69 in file "src/mssp_spi_driver.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text1
   672  0014D2                     __ptext1:
   673                           	callstack 0
   674  0014D2                     _SPI_Init_Slave_Default:
   675                           	callstack 29
   676  0014D2                     
   677                           ;src/mssp_spi_driver.c: 71:     SSPCON1bits.SSPEN = 0;
   678  0014D2  9AC6               	bcf	198,5,c	;volatile
   679  0014D4                     
   680                           ;src/mssp_spi_driver.c: 74:     SSPCON1 |= 0x00 | 0x04;
   681  0014D4  84C6               	bsf	198,2,c	;volatile
   682                           
   683                           ;src/mssp_spi_driver.c: 76:     SSPSTAT |= 0x40 | 0x00;
   684  0014D6  8CC7               	bsf	199,6,c	;volatile
   685  0014D8                     
   686                           ;src/mssp_spi_driver.c: 79:     TRISC |= 0x18; TRISC &= ~(0x20); TRISA |= 0x20;
   687  0014D8  0E18               	movlw	24
   688  0014DA  1294               	iorwf	148,f,c	;volatile
   689  0014DC  9A94               	bcf	148,5,c	;volatile
   690  0014DE  8A92               	bsf	146,5,c	;volatile
   691  0014E0                     
   692                           ;src/mssp_spi_driver.c: 82:     SSPCON1bits.SSPEN = 1;
   693  0014E0  8AC6               	bsf	198,5,c	;volatile
   694  0014E2                     
   695                           ;src/mssp_spi_driver.c: 83:     SSPCON1bits.WCOL = 0;
   696  0014E2  9EC6               	bcf	198,7,c	;volatile
   697  0014E4                     
   698                           ;src/mssp_spi_driver.c: 84:     SSPCON1bits.SSPOV = 0;
   699  0014E4  9CC6               	bcf	198,6,c	;volatile
   700                           
   701                           ;src/mssp_spi_driver.c: 85:     SSPBUF;
   702  0014E6  50C9               	movf	201,w,c	;volatile
   703  0014E8                     
   704                           ;src/mssp_spi_driver.c: 86:     PIR1bits.SSPIF = 0;
   705  0014E8  969E               	bcf	158,3,c	;volatile
   706  0014EA                     
   707                           ;src/mssp_spi_driver.c: 87:     slave_mode = 0x01;
   708  0014EA  0E01               	movlw	1
   709  0014EC  6E43               	movwf	_slave_mode^0,c
   710  0014EE                     
   711                           ;src/mssp_spi_driver.c: 90:     PIE1bits.SSPIE = 1;
   712  0014EE  869D               	bsf	157,3,c	;volatile
   713  0014F0  0012               	return		;funcret
   714  0014F2                     __end_of_SPI_Init_Slave_Default:
   715                           	callstack 0
   716                           
   717 ;; *************** function _LCD_write_data_byte_4bit *****************
   718 ;; Defined at:
   719 ;;		line 45 in file "src/lcd_driver.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  data            1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  data            1    2[COMRAM] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;Total ram usage:        2 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		_LCD_enable_toggle
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text2
   748  0013A6                     __ptext2:
   749                           	callstack 0
   750  0013A6                     _LCD_write_data_byte_4bit:
   751                           	callstack 28
   752                           
   753                           ;incstack = 0
   754                           ;LCD_write_data_byte_4bit@data stored from wreg
   755  0013A6  6E03               	movwf	LCD_write_data_byte_4bit@data^0,c
   756  0013A8                     
   757                           ;src/lcd_driver.c: 47:     (TRISC &= 0xF8);
   758  0013A8  0EF8               	movlw	248
   759  0013AA  1694               	andwf	148,f,c	;volatile
   760                           
   761                           ;src/lcd_driver.c: 48:     (TRISD &= 0x0Fu);
   762  0013AC  0E0F               	movlw	15
   763  0013AE  1695               	andwf	149,f,c	;volatile
   764  0013B0                     
   765                           ;src/lcd_driver.c: 49:     (LATCbits.LATC0 = 1u);
   766  0013B0  808B               	bsf	139,0,c	;volatile
   767  0013B2                     
   768                           ;src/lcd_driver.c: 50:     (LATCbits.LATC1 = 0u);
   769  0013B2  928B               	bcf	139,1,c	;volatile
   770                           
   771                           ;src/lcd_driver.c: 53:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
   772  0013B4  C003  F002         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
   773  0013B8  0EF0               	movlw	240
   774  0013BA  1602               	andwf	??_LCD_write_data_byte_4bit^0,f,c
   775  0013BC  5083               	movf	131,w,c	;volatile
   776  0013BE  0B0F               	andlw	15
   777  0013C0  1002               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
   778  0013C2  6E83               	movwf	131,c	;volatile
   779  0013C4                     
   780                           ;src/lcd_driver.c: 54:     LCD_enable_toggle();
   781  0013C4  EC79  F00A         	call	_LCD_enable_toggle	;wreg free
   782  0013C8                     
   783                           ;src/lcd_driver.c: 55:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
   784  0013C8  C003  F002         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
   785  0013CC  3A02               	swapf	??_LCD_write_data_byte_4bit^0,f,c
   786  0013CE  0EF0               	movlw	240
   787  0013D0  1602               	andwf	??_LCD_write_data_byte_4bit^0,f,c
   788  0013D2  0EF0               	movlw	240
   789  0013D4  1602               	andwf	??_LCD_write_data_byte_4bit^0,f,c
   790  0013D6  5083               	movf	131,w,c	;volatile
   791  0013D8  0B0F               	andlw	15
   792  0013DA  1002               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
   793  0013DC  6E83               	movwf	131,c	;volatile
   794                           
   795                           ;src/lcd_driver.c: 56:     LCD_enable_toggle();
   796  0013DE  EC79  F00A         	call	_LCD_enable_toggle	;wreg free
   797  0013E2                     
   798                           ;src/lcd_driver.c: 58:     _delay((unsigned long)((10)*(40000000u/4000.0)));
   799  0013E2  0E82               	movlw	130
   800  0013E4  6E02               	movwf	??_LCD_write_data_byte_4bit^0,c
   801  0013E6  0EDE               	movlw	222
   802  0013E8                     u817:
   803  0013E8  2EE8               	decfsz	wreg,f,c
   804  0013EA  D7FE               	bra	u817
   805  0013EC  2E02               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
   806  0013EE  D7FC               	bra	u817
   807  0013F0  0012               	return		;funcret
   808  0013F2                     __end_of_LCD_write_data_byte_4bit:
   809                           	callstack 0
   810                           
   811 ;; *************** function _LCD_set_cursor_position *****************
   812 ;; Defined at:
   813 ;;		line 251 in file "src/lcd_driver.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  line            1    wreg     unsigned char 
   816 ;;  pos_on_line     1    3[COMRAM] unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  line            1    6[COMRAM] unsigned char 
   819 ;;  ddram_addr      1    5[COMRAM] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      unsigned char 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        4 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    3
   836 ;; This function calls:
   837 ;;		_LCD_write_instr_byte_4bit
   838 ;;		_LCD_write_instr_byte_8bit
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text3
   845  001282                     __ptext3:
   846                           	callstack 0
   847  001282                     _LCD_set_cursor_position:
   848                           	callstack 27
   849                           
   850                           ;incstack = 0
   851                           ;LCD_set_cursor_position@line stored from wreg
   852  001282  6E07               	movwf	LCD_set_cursor_position@line^0,c
   853  001284                     
   854                           ;src/lcd_driver.c: 253:     if(line > 2u || pos_on_line > 2u * 16u){
   855  001284  0E03               	movlw	3
   856  001286  6007               	cpfslt	LCD_set_cursor_position@line^0,c
   857  001288  EF48  F009         	goto	u551
   858  00128C  EF4A  F009         	goto	u550
   859  001290                     u551:
   860  001290  EFA7  F009         	goto	l90
   861  001294                     u550:
   862  001294  0E20               	movlw	32
   863  001296  6404               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
   864  001298  EF50  F009         	goto	u561
   865  00129C  EF52  F009         	goto	u560
   866  0012A0                     u561:
   867  0012A0  EF54  F009         	goto	l1873
   868  0012A4                     u560:
   869  0012A4  EFA7  F009         	goto	l90
   870  0012A8                     l1873:
   871                           
   872                           ;src/lcd_driver.c: 262:         if(line == 1u && pos_on_line < 16u){
   873  0012A8  0407               	decf	LCD_set_cursor_position@line^0,w,c
   874  0012AA  A4D8               	btfss	status,2,c
   875  0012AC  EF5A  F009         	goto	u571
   876  0012B0  EF5C  F009         	goto	u570
   877  0012B4                     u571:
   878  0012B4  EF68  F009         	goto	l1879
   879  0012B8                     u570:
   880  0012B8  0E10               	movlw	16
   881  0012BA  6004               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
   882  0012BC  EF62  F009         	goto	u581
   883  0012C0  EF64  F009         	goto	u580
   884  0012C4                     u581:
   885  0012C4  EF68  F009         	goto	l1879
   886  0012C8                     u580:
   887  0012C8                     
   888                           ;src/lcd_driver.c: 263:             ddram_addr = 0x00u + pos_on_line - 1;
   889  0012C8  0404               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
   890  0012CA  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
   891                           
   892                           ;src/lcd_driver.c: 265:         } else if(line == 2u && pos_on_line < 16u){
   893  0012CC  EF91  F009         	goto	l1891
   894  0012D0                     l1879:
   895  0012D0  0E02               	movlw	2
   896  0012D2  1807               	xorwf	LCD_set_cursor_position@line^0,w,c
   897  0012D4  A4D8               	btfss	status,2,c
   898  0012D6  EF6F  F009         	goto	u591
   899  0012DA  EF71  F009         	goto	u590
   900  0012DE                     u591:
   901  0012DE  EF7E  F009         	goto	l1885
   902  0012E2                     u590:
   903  0012E2  0E10               	movlw	16
   904  0012E4  6004               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
   905  0012E6  EF77  F009         	goto	u601
   906  0012EA  EF79  F009         	goto	u600
   907  0012EE                     u601:
   908  0012EE  EF7E  F009         	goto	l1885
   909  0012F2                     u600:
   910  0012F2                     
   911                           ;src/lcd_driver.c: 266:             ddram_addr = 0x40u + pos_on_line - 1;
   912  0012F2  5004               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
   913  0012F4  0F3F               	addlw	63
   914  0012F6  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
   915                           
   916                           ;src/lcd_driver.c: 268:         } else if(line == 1u && pos_on_line > 16u){
   917  0012F8  EF91  F009         	goto	l1891
   918  0012FC                     l1885:
   919  0012FC  0407               	decf	LCD_set_cursor_position@line^0,w,c
   920  0012FE  A4D8               	btfss	status,2,c
   921  001300  EF84  F009         	goto	u611
   922  001304  EF86  F009         	goto	u610
   923  001308                     u611:
   924  001308  EFA7  F009         	goto	l90
   925  00130C                     u610:
   926  00130C  0E10               	movlw	16
   927  00130E  6404               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
   928  001310  EF8C  F009         	goto	u621
   929  001314  EF8E  F009         	goto	u620
   930  001318                     u621:
   931  001318  EFA7  F009         	goto	l90
   932  00131C                     u620:
   933  00131C                     
   934                           ;src/lcd_driver.c: 269:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
   935  00131C  5004               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
   936  00131E  0F2F               	addlw	47
   937  001320  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
   938  001322                     l1891:
   939                           
   940                           ;src/lcd_driver.c: 276:     if((~current_entry_mode & (1u << 4u))){
   941  001322  5039               	movf	_current_entry_mode^0,w,c
   942  001324  0AFF               	xorlw	255
   943  001326  6E05               	movwf	??_LCD_set_cursor_position^0,c
   944  001328  A805               	btfss	??_LCD_set_cursor_position^0,4,c
   945  00132A  EF99  F009         	goto	u631
   946  00132E  EF9B  F009         	goto	u630
   947  001332                     u631:
   948  001332  EFA1  F009         	goto	l1895
   949  001336                     u630:
   950  001336                     
   951                           ;src/lcd_driver.c: 277:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
   952  001336  5006               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
   953  001338  0980               	iorlw	128
   954  00133A  ECF9  F009         	call	_LCD_write_instr_byte_4bit
   955                           
   956                           ;src/lcd_driver.c: 278:     } else{
   957  00133E  EFA5  F009         	goto	l1897
   958  001342                     l1895:
   959                           
   960                           ;src/lcd_driver.c: 279:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
   961  001342  5006               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
   962  001344  0980               	iorlw	128
   963  001346  EC56  F00A         	call	_LCD_write_instr_byte_8bit
   964  00134A                     l1897:
   965                           
   966                           ;src/lcd_driver.c: 282:     address_counter = ddram_addr;
   967  00134A  C006  F045         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
   968  00134E                     l90:
   969  00134E  0012               	return		;funcret
   970  001350                     __end_of_LCD_set_cursor_position:
   971                           	callstack 0
   972                           
   973 ;; *************** function _LCD_clear_display *****************
   974 ;; Defined at:
   975 ;;		line 211 in file "src/lcd_driver.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      unsigned char 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        1 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    3
   996 ;; This function calls:
   997 ;;		_LCD_write_instr_byte_4bit
   998 ;;		_LCD_write_instr_byte_8bit
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text4
  1005  001478                     __ptext4:
  1006                           	callstack 0
  1007  001478                     _LCD_clear_display:
  1008                           	callstack 27
  1009  001478                     
  1010                           ;src/lcd_driver.c: 212:     if((~current_entry_mode & (1u << 4u))){
  1011  001478  5039               	movf	_current_entry_mode^0,w,c
  1012  00147A  0AFF               	xorlw	255
  1013  00147C  6E04               	movwf	??_LCD_clear_display^0,c
  1014  00147E  A804               	btfss	??_LCD_clear_display^0,4,c
  1015  001480  EF44  F00A         	goto	u541
  1016  001484  EF46  F00A         	goto	u540
  1017  001488                     u541:
  1018  001488  EF4B  F00A         	goto	l1863
  1019  00148C                     u540:
  1020  00148C                     
  1021                           ;src/lcd_driver.c: 213:         LCD_write_instr_byte_4bit(0x01u);
  1022  00148C  0E01               	movlw	1
  1023  00148E  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1024                           
  1025                           ;src/lcd_driver.c: 214:     } else{
  1026  001492  EF4E  F00A         	goto	l1865
  1027  001496                     l1863:
  1028                           
  1029                           ;src/lcd_driver.c: 215:         LCD_write_instr_byte_8bit(0x01u);
  1030  001496  0E01               	movlw	1
  1031  001498  EC56  F00A         	call	_LCD_write_instr_byte_8bit
  1032  00149C                     l1865:
  1033                           
  1034                           ;src/lcd_driver.c: 218:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1035  00149C  0E82               	movlw	130
  1036  00149E  6E04               	movwf	??_LCD_clear_display^0,c
  1037  0014A0  0EDE               	movlw	222
  1038  0014A2                     u827:
  1039  0014A2  2EE8               	decfsz	wreg,f,c
  1040  0014A4  D7FE               	bra	u827
  1041  0014A6  2E04               	decfsz	??_LCD_clear_display^0,f,c
  1042  0014A8  D7FC               	bra	u827
  1043  0014AA  0012               	return		;funcret
  1044  0014AC                     __end_of_LCD_clear_display:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _LCD_write_instr_byte_8bit *****************
  1048 ;; Defined at:
  1049 ;;		line 92 in file "src/lcd_driver.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  instr           1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  instr           1    2[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		_LCD_enable_toggle
  1072 ;; This function is called by:
  1073 ;;		_LCD_clear_display
  1074 ;;		_LCD_set_cursor_position
  1075 ;;		_LCD_return_home
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text5
  1080  0014AC                     __ptext5:
  1081                           	callstack 0
  1082  0014AC                     _LCD_write_instr_byte_8bit:
  1083                           	callstack 27
  1084                           
  1085                           ;incstack = 0
  1086                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  1087  0014AC  6E03               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  1088  0014AE                     
  1089                           ;src/lcd_driver.c: 94:     (TRISC &= 0xF8);
  1090  0014AE  0EF8               	movlw	248
  1091  0014B0  1694               	andwf	148,f,c	;volatile
  1092  0014B2                     
  1093                           ;src/lcd_driver.c: 95:     (TRISD = 0x00u);
  1094  0014B2  0E00               	movlw	0
  1095  0014B4  6E95               	movwf	149,c	;volatile
  1096  0014B6                     
  1097                           ;src/lcd_driver.c: 96:     (LATCbits.LATC0 = 0u);
  1098  0014B6  908B               	bcf	139,0,c	;volatile
  1099  0014B8                     
  1100                           ;src/lcd_driver.c: 97:     (LATCbits.LATC1 = 0u);
  1101  0014B8  928B               	bcf	139,1,c	;volatile
  1102  0014BA                     
  1103                           ;src/lcd_driver.c: 100:     PORTD = instr;
  1104  0014BA  C003  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  1105  0014BE                     
  1106                           ;src/lcd_driver.c: 101:     LCD_enable_toggle();
  1107  0014BE  EC79  F00A         	call	_LCD_enable_toggle	;wreg free
  1108  0014C2                     
  1109                           ;src/lcd_driver.c: 103:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1110  0014C2  0E82               	movlw	130
  1111  0014C4  6E02               	movwf	??_LCD_write_instr_byte_8bit^0,c
  1112  0014C6  0EDE               	movlw	222
  1113  0014C8                     u837:
  1114  0014C8  2EE8               	decfsz	wreg,f,c
  1115  0014CA  D7FE               	bra	u837
  1116  0014CC  2E02               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  1117  0014CE  D7FC               	bra	u837
  1118  0014D0  0012               	return		;funcret
  1119  0014D2                     __end_of_LCD_write_instr_byte_8bit:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _LCD_Init_ECE376 *****************
  1123 ;; Defined at:
  1124 ;;		line 106 in file "src/lcd_driver.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    3
  1145 ;; This function calls:
  1146 ;;		_LCD_write_instr_byte_4bit
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text6
  1153  0011A6                     __ptext6:
  1154                           	callstack 0
  1155  0011A6                     _LCD_Init_ECE376:
  1156                           	callstack 27
  1157  0011A6                     
  1158                           ;src/lcd_driver.c: 109:     PORTC = 0x00; PORTD = 0x00;
  1159  0011A6  0E00               	movlw	0
  1160  0011A8  6E82               	movwf	130,c	;volatile
  1161  0011AA  0E00               	movlw	0
  1162  0011AC  6E83               	movwf	131,c	;volatile
  1163  0011AE                     
  1164                           ;src/lcd_driver.c: 111:     (TRISC &= 0xF8);
  1165  0011AE  0EF8               	movlw	248
  1166  0011B0  1694               	andwf	148,f,c	;volatile
  1167  0011B2                     
  1168                           ;src/lcd_driver.c: 112:     (TRISD |= 0xF0u);
  1169  0011B2  0EF0               	movlw	240
  1170  0011B4  1295               	iorwf	149,f,c	;volatile
  1171  0011B6                     
  1172                           ;src/lcd_driver.c: 116:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  1173  0011B6  0ECB               	movlw	203
  1174  0011B8  6E05               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1175  0011BA  0EEC               	movlw	236
  1176  0011BC  6E04               	movwf	??_LCD_Init_ECE376^0,c
  1177  0011BE  0E84               	movlw	132
  1178  0011C0                     u847:
  1179  0011C0  2EE8               	decfsz	wreg,f,c
  1180  0011C2  D7FE               	bra	u847
  1181  0011C4  2E04               	decfsz	??_LCD_Init_ECE376^0,f,c
  1182  0011C6  D7FC               	bra	u847
  1183  0011C8  2E05               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1184  0011CA  D7FA               	bra	u847
  1185  0011CC  D000               	nop2	
  1186  0011CE                     
  1187                           ;src/lcd_driver.c: 117:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  1188  0011CE  0ECB               	movlw	203
  1189  0011D0  6E05               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1190  0011D2  0EEC               	movlw	236
  1191  0011D4  6E04               	movwf	??_LCD_Init_ECE376^0,c
  1192  0011D6  0E84               	movlw	132
  1193  0011D8                     u857:
  1194  0011D8  2EE8               	decfsz	wreg,f,c
  1195  0011DA  D7FE               	bra	u857
  1196  0011DC  2E04               	decfsz	??_LCD_Init_ECE376^0,f,c
  1197  0011DE  D7FC               	bra	u857
  1198  0011E0  2E05               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1199  0011E2  D7FA               	bra	u857
  1200  0011E4  D000               	nop2	
  1201  0011E6                     
  1202                           ;src/lcd_driver.c: 118:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  1203  0011E6  0E66               	movlw	102
  1204  0011E8  6E05               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1205  0011EA  0E76               	movlw	118
  1206  0011EC  6E04               	movwf	??_LCD_Init_ECE376^0,c
  1207  0011EE  0EC1               	movlw	193
  1208  0011F0                     u867:
  1209  0011F0  2EE8               	decfsz	wreg,f,c
  1210  0011F2  D7FE               	bra	u867
  1211  0011F4  2E04               	decfsz	??_LCD_Init_ECE376^0,f,c
  1212  0011F6  D7FC               	bra	u867
  1213  0011F8  2E05               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1214  0011FA  D7FA               	bra	u867
  1215  0011FC  F000               	nop	
  1216  0011FE                     
  1217                           ;src/lcd_driver.c: 123:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  1218  0011FE  0E06               	movlw	6
  1219  001200  6E05               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1220  001202  0E13               	movlw	19
  1221  001204  6E04               	movwf	??_LCD_Init_ECE376^0,c
  1222  001206  0EAE               	movlw	174
  1223  001208                     u877:
  1224  001208  2EE8               	decfsz	wreg,f,c
  1225  00120A  D7FE               	bra	u877
  1226  00120C  2E04               	decfsz	??_LCD_Init_ECE376^0,f,c
  1227  00120E  D7FC               	bra	u877
  1228  001210  2E05               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1229  001212  D7FA               	bra	u877
  1230  001214                     
  1231                           ;src/lcd_driver.c: 124:     LCD_write_instr_byte_4bit(0x30u);
  1232  001214  0E30               	movlw	48
  1233  001216  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1234  00121A                     
  1235                           ;src/lcd_driver.c: 125:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  1236  00121A  0E41               	movlw	65
  1237  00121C  6E04               	movwf	??_LCD_Init_ECE376^0,c
  1238  00121E  0EEE               	movlw	238
  1239  001220                     u887:
  1240  001220  2EE8               	decfsz	wreg,f,c
  1241  001222  D7FE               	bra	u887
  1242  001224  2E04               	decfsz	??_LCD_Init_ECE376^0,f,c
  1243  001226  D7FC               	bra	u887
  1244  001228  D000               	nop2	
  1245  00122A                     
  1246                           ;src/lcd_driver.c: 126:     LCD_write_instr_byte_4bit(0x30u);
  1247  00122A  0E30               	movlw	48
  1248  00122C  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1249  001230                     
  1250                           ;src/lcd_driver.c: 127:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  1251  001230  0ED6               	movlw	214
  1252  001232                     u897:
  1253  001232  D000               	nop2	
  1254  001234  D000               	nop2	
  1255  001236  2EE8               	decfsz	wreg,f,c
  1256  001238  D7FC               	bra	u897
  1257  00123A  D000               	nop2	
  1258  00123C                     
  1259                           ;src/lcd_driver.c: 128:     LCD_write_instr_byte_4bit(0x30u);
  1260  00123C  0E30               	movlw	48
  1261  00123E  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1262  001242                     
  1263                           ;src/lcd_driver.c: 130:     LCD_write_instr_byte_4bit(0x28u);
  1264  001242  0E28               	movlw	40
  1265  001244  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1266  001248                     
  1267                           ;src/lcd_driver.c: 131:     LCD_write_instr_byte_4bit(0x0Eu);
  1268  001248  0E0E               	movlw	14
  1269  00124A  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1270  00124E                     
  1271                           ;src/lcd_driver.c: 132:     LCD_write_instr_byte_4bit(0x01u);
  1272  00124E  0E01               	movlw	1
  1273  001250  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1274  001254                     
  1275                           ;src/lcd_driver.c: 133:     LCD_write_instr_byte_4bit(0x06u);
  1276  001254  0E06               	movlw	6
  1277  001256  ECF9  F009         	call	_LCD_write_instr_byte_4bit
  1278  00125A                     
  1279                           ;src/lcd_driver.c: 135:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  1280  00125A  0E06               	movlw	6
  1281  00125C  6E05               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1282  00125E  0E13               	movlw	19
  1283  001260  6E04               	movwf	??_LCD_Init_ECE376^0,c
  1284  001262  0EAE               	movlw	174
  1285  001264                     u907:
  1286  001264  2EE8               	decfsz	wreg,f,c
  1287  001266  D7FE               	bra	u907
  1288  001268  2E04               	decfsz	??_LCD_Init_ECE376^0,f,c
  1289  00126A  D7FC               	bra	u907
  1290  00126C  2E05               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1291  00126E  D7FA               	bra	u907
  1292  001270                     
  1293                           ;src/lcd_driver.c: 138:     init_complete = 0x01u;
  1294  001270  0E01               	movlw	1
  1295  001272  6E47               	movwf	_init_complete^0,c
  1296  001274                     
  1297                           ;src/lcd_driver.c: 139:     current_entry_mode = 0x06u;
  1298  001274  0E06               	movlw	6
  1299  001276  6E39               	movwf	_current_entry_mode^0,c
  1300  001278                     
  1301                           ;src/lcd_driver.c: 140:     current_disp_ctrl = 0x0Eu;
  1302  001278  0E0E               	movlw	14
  1303  00127A  6E3B               	movwf	_current_disp_ctrl^0,c
  1304  00127C                     
  1305                           ;src/lcd_driver.c: 141:     current_func_set = 0x28u;
  1306  00127C  0E28               	movlw	40
  1307  00127E  6E38               	movwf	_current_func_set^0,c
  1308  001280  0012               	return		;funcret
  1309  001282                     __end_of_LCD_Init_ECE376:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _LCD_write_instr_byte_4bit *****************
  1313 ;; Defined at:
  1314 ;;		line 76 in file "src/lcd_driver.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  instr           1    wreg     unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  instr           1    2[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        2 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		_LCD_enable_toggle
  1337 ;; This function is called by:
  1338 ;;		_LCD_Init_ECE376
  1339 ;;		_LCD_clear_display
  1340 ;;		_LCD_set_cursor_position
  1341 ;;		_LCD_return_home
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text7
  1346  0013F2                     __ptext7:
  1347                           	callstack 0
  1348  0013F2                     _LCD_write_instr_byte_4bit:
  1349                           	callstack 27
  1350                           
  1351                           ;incstack = 0
  1352                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  1353  0013F2  6E03               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  1354  0013F4                     
  1355                           ;src/lcd_driver.c: 78:     (TRISC &= 0xF8);
  1356  0013F4  0EF8               	movlw	248
  1357  0013F6  1694               	andwf	148,f,c	;volatile
  1358                           
  1359                           ;src/lcd_driver.c: 79:     (TRISD &= 0x0Fu);
  1360  0013F8  0E0F               	movlw	15
  1361  0013FA  1695               	andwf	149,f,c	;volatile
  1362  0013FC                     
  1363                           ;src/lcd_driver.c: 80:     (LATCbits.LATC0 = 0u);
  1364  0013FC  908B               	bcf	139,0,c	;volatile
  1365  0013FE                     
  1366                           ;src/lcd_driver.c: 81:     (LATCbits.LATC1 = 0u);
  1367  0013FE  928B               	bcf	139,1,c	;volatile
  1368                           
  1369                           ;src/lcd_driver.c: 84:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  1370  001400  C003  F002         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  1371  001404  0EF0               	movlw	240
  1372  001406  1602               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1373  001408  5083               	movf	131,w,c	;volatile
  1374  00140A  0B0F               	andlw	15
  1375  00140C  1002               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  1376  00140E  6E83               	movwf	131,c	;volatile
  1377  001410                     
  1378                           ;src/lcd_driver.c: 85:     LCD_enable_toggle();
  1379  001410  EC79  F00A         	call	_LCD_enable_toggle	;wreg free
  1380  001414                     
  1381                           ;src/lcd_driver.c: 86:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  1382  001414  C003  F002         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  1383  001418  3A02               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  1384  00141A  0EF0               	movlw	240
  1385  00141C  1602               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1386  00141E  0EF0               	movlw	240
  1387  001420  1602               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1388  001422  5083               	movf	131,w,c	;volatile
  1389  001424  0B0F               	andlw	15
  1390  001426  1002               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  1391  001428  6E83               	movwf	131,c	;volatile
  1392                           
  1393                           ;src/lcd_driver.c: 87:     LCD_enable_toggle();
  1394  00142A  EC79  F00A         	call	_LCD_enable_toggle	;wreg free
  1395  00142E                     
  1396                           ;src/lcd_driver.c: 89:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1397  00142E  0E82               	movlw	130
  1398  001430  6E02               	movwf	??_LCD_write_instr_byte_4bit^0,c
  1399  001432  0EDE               	movlw	222
  1400  001434                     u917:
  1401  001434  2EE8               	decfsz	wreg,f,c
  1402  001436  D7FE               	bra	u917
  1403  001438  2E02               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  1404  00143A  D7FC               	bra	u917
  1405  00143C  0012               	return		;funcret
  1406  00143E                     __end_of_LCD_write_instr_byte_4bit:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _LCD_enable_toggle *****************
  1410 ;; Defined at:
  1411 ;;		line 25 in file "src/lcd_driver.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_LCD_write_data_byte_4bit
  1436 ;;		_LCD_write_instr_byte_4bit
  1437 ;;		_LCD_write_instr_byte_8bit
  1438 ;;		_LCD_wait_for_BF
  1439 ;;		_LCD_write_data_byte_8bit
  1440 ;;		_LCD_Init
  1441 ;;		_LCD_read_current_address_counter
  1442 ;;		_LCD_write_characters
  1443 ;;		_LCD_turn_off_cursor
  1444 ;;		_LCD_turn_on_cursor
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text8
  1449  0014F2                     __ptext8:
  1450                           	callstack 0
  1451  0014F2                     _LCD_enable_toggle:
  1452                           	callstack 28
  1453  0014F2                     
  1454                           ;src/lcd_driver.c: 26:     (LATCbits.LATC2 = 0u);
  1455  0014F2  948B               	bcf	139,2,c	;volatile
  1456  0014F4                     
  1457                           ;src/lcd_driver.c: 27:     _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1458  0014F4  0E06               	movlw	6
  1459  0014F6                     u927:
  1460  0014F6  2EE8               	decfsz	wreg,f,c
  1461  0014F8  D7FE               	bra	u927
  1462  0014FA  D000               	nop2	
  1463  0014FC                     
  1464                           ;src/lcd_driver.c: 28:     (LATCbits.LATC2 = 1u);
  1465  0014FC  848B               	bsf	139,2,c	;volatile
  1466                           
  1467                           ;src/lcd_driver.c: 29:     _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1468  0014FE  0E06               	movlw	6
  1469  001500                     u937:
  1470  001500  2EE8               	decfsz	wreg,f,c
  1471  001502  D7FE               	bra	u937
  1472  001504  D000               	nop2	
  1473  001506                     
  1474                           ;src/lcd_driver.c: 30:     (LATCbits.LATC2 = 0u);
  1475  001506  948B               	bcf	139,2,c	;volatile
  1476                           
  1477                           ;src/lcd_driver.c: 31:     _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1478  001508  0E06               	movlw	6
  1479  00150A                     u947:
  1480  00150A  2EE8               	decfsz	wreg,f,c
  1481  00150C  D7FE               	bra	u947
  1482  00150E  D000               	nop2	
  1483  001510  0012               	return		;funcret
  1484  001512                     __end_of_LCD_enable_toggle:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _isr *****************
  1488 ;; Defined at:
  1489 ;;		line 126 in file "main.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:        1 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		Interrupt level 2
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	intcode
  1517  000008                     __pintcode:
  1518                           	callstack 0
  1519  000008                     _isr:
  1520                           	callstack 27
  1521                           
  1522                           ;incstack = 0
  1523  000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1524  00000A  EDA8  F009         	call	int_func,f	;refresh shadow registers
  1525                           
  1526                           	psect	intcode_body
  1527  001350                     __pintcode_body:
  1528                           	callstack 27
  1529  001350                     int_func:
  1530                           	callstack 27
  1531  001350  0006               	pop		; remove dummy address from shadow register refresh
  1532  001352                     
  1533                           ;main.c: 134:     if(PIR1bits.SSPIF && PIE1bits.SSPIE) {
  1534  001352  A69E               	btfss	158,3,c	;volatile
  1535  001354  EFAE  F009         	goto	i2u41_41
  1536  001358  EFB0  F009         	goto	i2u41_40
  1537  00135C                     i2u41_41:
  1538  00135C  EFD1  F009         	goto	i2l306
  1539  001360                     i2u41_40:
  1540  001360  A69D               	btfss	157,3,c	;volatile
  1541  001362  EFB5  F009         	goto	i2u42_41
  1542  001366  EFB7  F009         	goto	i2u42_40
  1543  00136A                     i2u42_41:
  1544  00136A  EFD1  F009         	goto	i2l306
  1545  00136E                     i2u42_40:
  1546  00136E                     
  1547                           ;main.c: 136:         transfer_complete_flag = 0x01;
  1548  00136E  0E01               	movlw	1
  1549  001370  6E42               	movwf	_transfer_complete_flag^0,c
  1550  001372                     
  1551                           ;main.c: 139:         spi_rx_message_buf = SSPBUF;
  1552  001372  CFC9 F040          	movff	4041,_spi_rx_message_buf	;volatile
  1553                           
  1554                           ;main.c: 140:         spi_rx_flag = 0x01;
  1555  001376  0E01               	movlw	1
  1556  001378  6E3E               	movwf	_spi_rx_flag^0,c
  1557  00137A                     
  1558                           ;main.c: 143:         if((spi_rx_message_buf & 0xC0u) != 0x00u){
  1559  00137A  C040  F001         	movff	_spi_rx_message_buf,??_isr
  1560  00137E  0EC0               	movlw	192
  1561  001380  1601               	andwf	??_isr^0,f,c
  1562  001382  B4D8               	btfsc	status,2,c
  1563  001384  EFC6  F009         	goto	i2u43_41
  1564  001388  EFC8  F009         	goto	i2u43_40
  1565  00138C                     i2u43_41:
  1566  00138C  EFCE  F009         	goto	i2l1667
  1567  001390                     i2u43_40:
  1568  001390                     
  1569                           ;main.c: 145:             SSPBUF = (0x40u | 0x2Au);
  1570  001390  0E6A               	movlw	106
  1571  001392  6EC9               	movwf	201,c	;volatile
  1572                           
  1573                           ;main.c: 146:             spi_rx_invalid_flag = 0x01;
  1574  001394  0E01               	movlw	1
  1575  001396  6E3F               	movwf	_spi_rx_invalid_flag^0,c
  1576                           
  1577                           ;main.c: 148:         } else{
  1578  001398  EFD0  F009         	goto	i2l1669
  1579  00139C                     i2l1667:
  1580                           
  1581                           ;main.c: 150:             SSPBUF = 0x3Fu;
  1582  00139C  0E3F               	movlw	63
  1583  00139E  6EC9               	movwf	201,c	;volatile
  1584  0013A0                     i2l1669:
  1585                           
  1586                           ;main.c: 154:         PIR1bits.SSPIF = 0;
  1587  0013A0  969E               	bcf	158,3,c	;volatile
  1588  0013A2                     i2l306:
  1589  0013A2  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1590  0013A4  0011               	retfie		f
  1591  0013A6                     __end_of_isr:
  1592                           	callstack 0
  1593                           
  1594                           	psect	rparam
  1595  0000                     
  1596                           	psect	temp
  1597  000048                     btemp:
  1598                           	callstack 0
  1599  000048                     	ds	1
  1600  0000                     int$flags	set	btemp
  1601  0000                     wtemp8	set	btemp+1
  1602  0000                     ttemp5	set	btemp+1
  1603  0000                     ttemp6	set	btemp+4
  1604  0000                     ttemp7	set	btemp+8
  1605                           
  1606                           	psect	idloc
  1607                           
  1608                           ;Config register IDLOC0 @ 0x200000
  1609                           ;	unspecified, using default values
  1610  200000                     	org	2097152
  1611  200000  FF                 	db	255
  1612                           
  1613                           ;Config register IDLOC1 @ 0x200001
  1614                           ;	unspecified, using default values
  1615  200001                     	org	2097153
  1616  200001  FF                 	db	255
  1617                           
  1618                           ;Config register IDLOC2 @ 0x200002
  1619                           ;	unspecified, using default values
  1620  200002                     	org	2097154
  1621  200002  FF                 	db	255
  1622                           
  1623                           ;Config register IDLOC3 @ 0x200003
  1624                           ;	unspecified, using default values
  1625  200003                     	org	2097155
  1626  200003  FF                 	db	255
  1627                           
  1628                           ;Config register IDLOC4 @ 0x200004
  1629                           ;	unspecified, using default values
  1630  200004                     	org	2097156
  1631  200004  FF                 	db	255
  1632                           
  1633                           ;Config register IDLOC5 @ 0x200005
  1634                           ;	unspecified, using default values
  1635  200005                     	org	2097157
  1636  200005  FF                 	db	255
  1637                           
  1638                           ;Config register IDLOC6 @ 0x200006
  1639                           ;	unspecified, using default values
  1640  200006                     	org	2097158
  1641  200006  FF                 	db	255
  1642                           
  1643                           ;Config register IDLOC7 @ 0x200007
  1644                           ;	unspecified, using default values
  1645  200007                     	org	2097159
  1646  200007  FF                 	db	255
  1647                           
  1648                           	psect	config
  1649                           
  1650                           ; Padding undefined space
  1651  300000                     	org	3145728
  1652  300000  FF                 	db	255
  1653                           
  1654                           ;Config register CONFIG1H @ 0x300001
  1655                           ;	Oscillator Selection bits
  1656                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1657                           ;	Fail-Safe Clock Monitor Enable bit
  1658                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1659                           ;	Internal/External Oscillator Switchover bit
  1660                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1661  300001                     	org	3145729
  1662  300001  06                 	db	6
  1663                           
  1664                           ;Config register CONFIG2L @ 0x300002
  1665                           ;	Power-up Timer Enable bit
  1666                           ;	PWRT = OFF, PWRT disabled
  1667                           ;	Brown-out Reset Enable bits
  1668                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1669                           ;	Brown Out Reset Voltage bits
  1670                           ;	BORV = 3, Minimum setting
  1671  300002                     	org	3145730
  1672  300002  1F                 	db	31
  1673                           
  1674                           ;Config register CONFIG2H @ 0x300003
  1675                           ;	Watchdog Timer Enable bit
  1676                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1677                           ;	Watchdog Timer Postscale Select bits
  1678                           ;	WDTPS = 32768, 1:32768
  1679  300003                     	org	3145731
  1680  300003  1E                 	db	30
  1681                           
  1682                           ; Padding undefined space
  1683  300004                     	org	3145732
  1684  300004  FF                 	db	255
  1685                           
  1686                           ;Config register CONFIG3H @ 0x300005
  1687                           ;	CCP2 MUX bit
  1688                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
  1689                           ;	PORTB A/D Enable bit
  1690                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1691                           ;	Low-Power Timer1 Oscillator Enable bit
  1692                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1693                           ;	MCLR Pin Enable bit
  1694                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1695  300005                     	org	3145733
  1696  300005  80                 	db	128
  1697                           
  1698                           ;Config register CONFIG4L @ 0x300006
  1699                           ;	Stack Full/Underflow Reset Enable bit
  1700                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1701                           ;	Single-Supply ICSP Enable bit
  1702                           ;	LVP = OFF, Single-Supply ICSP disabled
  1703                           ;	Extended Instruction Set Enable bit
  1704                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1705                           ;	Background Debugger Enable bit
  1706                           ;	DEBUG = 0x1, unprogrammed default
  1707  300006                     	org	3145734
  1708  300006  81                 	db	129
  1709                           
  1710                           ; Padding undefined space
  1711  300007                     	org	3145735
  1712  300007  FF                 	db	255
  1713                           
  1714                           ;Config register CONFIG5L @ 0x300008
  1715                           ;	Code Protection bit
  1716                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1717                           ;	Code Protection bit
  1718                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1719                           ;	Code Protection bit
  1720                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1721                           ;	Code Protection bit
  1722                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1723  300008                     	org	3145736
  1724  300008  0F                 	db	15
  1725                           
  1726                           ;Config register CONFIG5H @ 0x300009
  1727                           ;	Boot Block Code Protection bit
  1728                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1729                           ;	Data EEPROM Code Protection bit
  1730                           ;	CPD = OFF, Data EEPROM not code-protected
  1731  300009                     	org	3145737
  1732  300009  C0                 	db	192
  1733                           
  1734                           ;Config register CONFIG6L @ 0x30000A
  1735                           ;	Write Protection bit
  1736                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1737                           ;	Write Protection bit
  1738                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1739                           ;	Write Protection bit
  1740                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1741                           ;	Write Protection bit
  1742                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1743  30000A                     	org	3145738
  1744  30000A  0F                 	db	15
  1745                           
  1746                           ;Config register CONFIG6H @ 0x30000B
  1747                           ;	Configuration Register Write Protection bit
  1748                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1749                           ;	Boot Block Write Protection bit
  1750                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1751                           ;	Data EEPROM Write Protection bit
  1752                           ;	WRTD = OFF, Data EEPROM not write-protected
  1753  30000B                     	org	3145739
  1754  30000B  E0                 	db	224
  1755                           
  1756                           ;Config register CONFIG7L @ 0x30000C
  1757                           ;	Table Read Protection bit
  1758                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1759                           ;	Table Read Protection bit
  1760                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1761                           ;	Table Read Protection bit
  1762                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1763                           ;	Table Read Protection bit
  1764                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1765  30000C                     	org	3145740
  1766  30000C  0F                 	db	15
  1767                           
  1768                           ;Config register CONFIG7H @ 0x30000D
  1769                           ;	Boot Block Table Read Protection bit
  1770                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1771  30000D                     	org	3145741
  1772  30000D  40                 	db	64
  1773                           tosu	equ	0xFFF
  1774                           tosh	equ	0xFFE
  1775                           tosl	equ	0xFFD
  1776                           stkptr	equ	0xFFC
  1777                           pclatu	equ	0xFFB
  1778                           pclath	equ	0xFFA
  1779                           pcl	equ	0xFF9
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           prodh	equ	0xFF4
  1785                           prodl	equ	0xFF3
  1786                           indf0	equ	0xFEF
  1787                           postinc0	equ	0xFEE
  1788                           postdec0	equ	0xFED
  1789                           preinc0	equ	0xFEC
  1790                           plusw0	equ	0xFEB
  1791                           fsr0h	equ	0xFEA
  1792                           fsr0l	equ	0xFE9
  1793                           wreg	equ	0xFE8
  1794                           indf1	equ	0xFE7
  1795                           postinc1	equ	0xFE6
  1796                           postdec1	equ	0xFE5
  1797                           preinc1	equ	0xFE4
  1798                           plusw1	equ	0xFE3
  1799                           fsr1h	equ	0xFE2
  1800                           fsr1l	equ	0xFE1
  1801                           bsr	equ	0xFE0
  1802                           indf2	equ	0xFDF
  1803                           postinc2	equ	0xFDE
  1804                           postdec2	equ	0xFDD
  1805                           preinc2	equ	0xFDC
  1806                           plusw2	equ	0xFDB
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    13
    Data        28
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     31      71
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_set_cursor_position
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    1179
                                              7 COMRAM    24    24      0
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
             _SPI_Init_Slave_Default
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Slave_Default                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      44
                                              1 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              4     3      1     681
                                              3 COMRAM     4     3      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      66
                                              3 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      22
                                              1 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      44
                                              3 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      44
                                              1 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _SPI_Init_Slave_Default

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1F      47       1       56.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      34        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Nov 04 00:27:55 2021

                                l43 1510                                  l52 13F0  
                                l61 14D0                                  l64 1280  
                                l58 143C                                  l90 134E  
                                l75 14AA              _transfer_complete_flag 0042  
                               l317 10E2                                 l192 14F0  
                               u600 12F2                                 u601 12EE  
                               u610 130C                                 u611 1308  
                               u540 148C                                 u620 131C  
                               u541 1488                                 u621 1318  
                               u630 1336                                 u550 1294  
                               u631 1332                                 u551 1290  
                               u711 1032                                 u560 12A4  
                               u720 1062                                 u561 12A0  
                               u721 105E                                 u570 12B8  
                               u730 108E                                 u571 12B4  
                               u731 108A                                 u580 12C8  
                               u740 109E                                 u581 12C4  
                               u741 109A                                 u590 12E2  
                               u750 10D6                                 u591 12DE  
                               u751 10D2                                 u807 106C  
                               u760 10F0                                 u817 13E8  
                               u761 10EC                                 u770 1116  
                               u907 1264                                 u827 14A2  
                               u771 1112                                 u780 1168  
                               u917 1434                                 u837 14C8  
                               u781 1164                                 u790 119A  
                               u927 14F6                                 u847 11C0  
                               u791 1196                                 u937 1500  
                               u857 11D8                                 u947 150A  
                               u867 11F0                                 u877 1208  
                               u887 1220                                 u897 1232  
                               _isr 0008                                 wreg 000FE8  
                _current_entry_mode 0039                                l2111 1062  
                              l2121 10AC                                l2113 107A  
                              l2105 103E                                l2131 10C6  
                              l2115 107E                                l2107 1050  
                              l2141 1108                                l2133 10D6  
                              l2117 108E                                l2109 1052  
                              l2151 1132                                l2143 1116  
                              l2135 10F0                                l2127 10B0  
                              l2119 109E                                l2161 1144  
                              l2153 1136                                l2145 1122  
                              l2137 10FC                                l2129 10C4  
                              l2163 1156                                l2155 1140  
                              l2147 112A                                l2139 1104  
                              l2091 1012                                l2181 119A  
                              l2165 1158                                l2149 112E  
                              l2093 101A                                l2175 1176  
                              l2167 1168                                l2095 101C  
                              l2177 1188                                l2169 1172  
                              l2097 1028                                l2089 1010  
                              l1811 13C4                                l2179 118A  
                              l2099 103A                                l1821 11B2  
                              l1813 13C8                                l1805 13A8  
                              l1901 14D2                                l1831 1214  
                              l1823 11B6                                l1815 13E2  
                              l1807 13B0                                l1911 14E0  
                              l1903 14D4                                l1841 1242  
                              l1833 121A                                l1825 11CE  
                              l1817 11A6                                l1809 13B2  
                              l1921 14EE                                l1913 14E2  
                              l1905 14D8                                l1771 14FC  
                              l1851 1270                                l1843 1248  
                              l1835 122A                                l1827 11E6  
                              l1819 11AE                                l1915 14E4  
                              l1907 14DC                                l1773 1506  
                              l1781 1410                                l1853 1274  
                              l1845 124E                                l1837 1230  
                              l1829 11FE                                l1861 148C  
                              l1917 14E8                                l1909 14DE  
                              l1767 14F2                                l1783 1414  
                              l1775 13F4                                l1855 1278  
                              l1847 1254                                l1839 123C  
                              l1791 14B6                                l1863 1496  
                              l1871 1294                                l1919 14EA  
                              l1769 14F4                                l1785 142E  
                              l1777 13FC                                l1857 127C  
                              l1849 125A                                l1793 14B8  
                              l1865 149C                                l1881 12E2  
                              l1873 12A8                                l1779 13FE  
                              l1795 14BA                                l1787 14AE  
                              l1859 1478                                l1883 12F2  
                              l1891 1322                                l1875 12B8  
                              l1797 14BE                                l1789 14B2  
                              l1893 1336                                l1885 12FC  
                              l1877 12C8                                l1869 1284  
                              l1799 14C2                                l1895 1342  
                              l1887 130C                                l1879 12D0  
                              l1897 134A                                l1889 131C  
                              ?_isr 0001                                _main 1010  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0048  
                              start 000E                        ___param_bank 000000  
                             ??_isr 0001             __end_of_LCD_Init_ECE376 1282  
                             ?_main 0001                               _CCPR2 000FBB  
                             _T1CON 000FCD                               _T3CON 000FB1  
                             i2l306 13A2                               _PORTC 000F82  
                             _PORTD 000F83                               _TRISA 000F92  
                             _TRISC 000F94                               _TRISD 000F95  
 LCD_set_cursor_position@ddram_addr 0006                               main@i 001C  
  __size_of_LCD_set_cursor_position 00CE                               tablat 000FF5  
      LCD_write_data_byte_4bit@data 0003                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 0049  
                             ttemp6 004C                               ttemp7 0050  
                             status 000FD8                               wtemp8 0049  
       LCD_set_cursor_position@line 0007                     __initialization 143E  
                      __end_of_main 11A6                              ??_main 0008  
       ??_LCD_write_instr_byte_4bit 0002         ??_LCD_write_instr_byte_8bit 0002  
                     __activetblptr 000002                              i2l1661 1372  
                            i2l1663 137A                              i2l1655 1352  
                            i2l1665 1390                              i2l1657 1360  
                            i2l1667 139C                              i2l1659 136E  
                            i2l1669 13A0                              _SSPBUF 000FC9  
                _spi_rx_invalid_msg 1001                              clear_0 1464  
                _spi_rx_message_buf 0040                    ?_LCD_Init_ECE376 0001  
  __end_of_LCD_write_data_byte_4bit 13F2                        __pdataCOMRAM 0020  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                        __accesstop 0080             __end_of__initialization 146A  
         _LCD_write_instr_byte_4bit 13F2           _LCD_write_instr_byte_8bit 14AC  
                     ___rparam_used 000001                      __pcstackCOMRAM 0001  
                     _button1_state 003D                       _button2_state 003C  
                     _init_complete 0047             _LCD_set_cursor_position 1282  
          ??_SPI_Init_Slave_Default 0002                             _CCP2CON 000FBA  
                           i2u41_40 1360                             i2u41_41 135C  
                           i2u42_40 136E                             i2u42_41 136A  
                           i2u43_40 1390                             i2u43_41 138C  
          _LCD_write_data_byte_4bit 13A6                             _SSPCON1 000FC6  
                           _SSPSTAT 000FC7                             __Hparam 0000  
                           __Lparam 0000                        __psmallconst 1000  
                           __pcinit 143E                             __ramtop 1000  
                           __ptext0 1010                             __ptext1 14D2  
                           __ptext2 13A6                             __ptext3 1282  
                           __ptext4 1478                             __ptext5 14AC  
                           __ptext6 11A6                             __ptext7 13F2  
                           __ptext8 14F2                 _spi_rx_invalid_flag 003F  
                      __size_of_isr 139E           ??_LCD_set_cursor_position 0005  
                    __pintcode_body 1350                end_of_initialization 146A  
                     __Lmediumconst 0000                             int_func 1350  
                        _shift_mode 0046                             postdec1 000FE5  
                           postinc0 000FEE                          _slave_mode 0043  
   __size_of_SPI_Init_Slave_Default 0020                           _PORTDbits 000F83  
LCD_set_cursor_position@pos_on_line 0004                     _address_counter 0045  
                         _TRISDbits 000F95                    _current_func_set 0038  
              main@init_success_msg 000A                   _LCD_clear_display 1478  
                     __pidataCOMRAM 1512                  ?_LCD_clear_display 0001  
               start_initialization 143E                 ??_LCD_clear_display 0004  
                       __end_of_isr 13A6            __size_of_LCD_Init_ECE376 00DC  
            _SPI_Init_Slave_Default 14D2           __end_of_LCD_clear_display 14AC  
        ??_LCD_write_data_byte_4bit 0002                         __pbssCOMRAM 003C  
                         __pintcode 0008                           _disp_16x2 003A  
                 _LCD_enable_toggle 14F2                  ?_LCD_enable_toggle 0001  
                       __smallconst 1000                 ??_LCD_enable_toggle 0002  
                      _receive_byte 0044                            _LATCbits 000F8B  
                          _LATDbits 000F8C                   ??_LCD_Init_ECE376 0004  
                          _PIE1bits 000F9D                            _PIE2bits 000FA0  
         __end_of_LCD_enable_toggle 1512                            _PIR1bits 000F9E  
        __size_of_LCD_clear_display 0034                           main@F2555 0020  
                         main@i_632 001D                           main@i_635 001E  
                         main@i_636 001F      LCD_write_instr_byte_4bit@instr 0003  
                         copy_data0 1452      LCD_write_instr_byte_8bit@instr 0003  
                          __Hrparam 0000                            __Lrparam 0000  
          ?_LCD_set_cursor_position 0004                         _button1_msg 0033  
                       _button2_msg 002E             ?_SPI_Init_Slave_Default 0001  
                          _main$633 0018                            _main$634 001A  
                     __size_of_main 0196          __size_of_LCD_enable_toggle 0020  
                          int$flags 0048  __size_of_LCD_write_instr_byte_4bit 004C  
__size_of_LCD_write_instr_byte_8bit 0026          ?_LCD_write_instr_byte_4bit 0001  
        ?_LCD_write_instr_byte_8bit 0001      __end_of_SPI_Init_Slave_Default 14F2  
                        _INTCONbits 000FF2                            intlevel2 0000  
        __end_of_spi_rx_invalid_msg 100E     __end_of_LCD_set_cursor_position 1350  
 __end_of_LCD_write_instr_byte_4bit 143E   __end_of_LCD_write_instr_byte_8bit 14D2  
                   _manual_transfer 0041                     _LCD_Init_ECE376 11A6  
                       _SSPCON1bits 000FC6   __size_of_LCD_write_data_byte_4bit 004C  
         ?_LCD_write_data_byte_4bit 0001                         _spi_rx_flag 003E  
                 _current_disp_ctrl 003B  
