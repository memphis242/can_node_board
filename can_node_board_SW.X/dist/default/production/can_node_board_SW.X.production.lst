

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Nov 08 21:13:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001508                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _debug_msg_2
    68  001508  52                 	db	82
    69  001509  78                 	db	120
    70  00150A  3A                 	db	58
    71  00150B  20                 	db	32
    72  00150C  30                 	db	48
    73  00150D  78                 	db	120
    74  00150E  00                 	db	0
    75  00150F  00                 	db	0
    76  001510  00                 	db	0
    77  001511  00                 	db	0
    78  001512  00                 	db	0
    79  001513  00                 	db	0
    80  001514  00                 	db	0
    81  001515  00                 	db	0
    82  001516  00                 	db	0
    83  001517  00                 	db	0
    84                           
    85                           ;initializer for _debug_msg_1
    86  001518  52                 	db	82
    87  001519  78                 	db	120
    88  00151A  3A                 	db	58
    89  00151B  20                 	db	32
    90  00151C  00                 	db	0
    91  00151D  00                 	db	0
    92  00151E  00                 	db	0
    93  00151F  00                 	db	0
    94  001520  00                 	db	0
    95  001521  00                 	db	0
    96  001522  00                 	db	0
    97  001523  00                 	db	0
    98  001524  00                 	db	0
    99  001525  00                 	db	0
   100  001526  00                 	db	0
   101  001527  00                 	db	0
   102                           
   103                           ;initializer for main@F2562
   104  001528  49                 	db	73
   105  001529  6E                 	db	110
   106  00152A  69                 	db	105
   107  00152B  74                 	db	116
   108  00152C  20                 	db	32
   109  00152D  73                 	db	115
   110  00152E  75                 	db	117
   111  00152F  63                 	db	99
   112  001530  63                 	db	99
   113  001531  65                 	db	101
   114  001532  73                 	db	115
   115  001533  73                 	db	115
   116  001534  21                 	db	33
   117  001535  00                 	db	0
   118                           
   119                           ;initializer for _button2_msg
   120  001536  42                 	db	66
   121  001537  32                 	db	50
   122  001538  3A                 	db	58
   123  001539  20                 	db	32
   124  00153A  00                 	db	0
   125                           
   126                           ;initializer for _button1_msg
   127  00153B  42                 	db	66
   128  00153C  31                 	db	49
   129  00153D  3A                 	db	58
   130  00153E  20                 	db	32
   131  00153F  00                 	db	0
   132                           
   133                           ;initializer for _current_func_set
   134  001540  30                 	db	48
   135                           
   136                           ;initializer for _current_entry_mode
   137  001541  06                 	db	6
   138                           
   139                           ;initializer for _disp_16x2
   140  001542  01                 	db	1
   141                           
   142                           ;initializer for _current_disp_ctrl
   143  001543  08                 	db	8
   144                           
   145                           	psect	smallconst
   146  001000                     __psmallconst:
   147                           	callstack 0
   148  001000  00                 	db	0
   149  001001                     _spi_rx_invalid_msg:
   150                           	callstack 0
   151  001001  49                 	db	73
   152  001002  4E                 	db	78
   153  001003  56                 	db	86
   154  001004  41                 	db	65
   155  001005  4C                 	db	76
   156  001006  49                 	db	73
   157  001007  44                 	db	68
   158  001008  20                 	db	32
   159  001009  4D                 	db	77
   160  00100A  53                 	db	83
   161  00100B  47                 	db	71
   162  00100C  21                 	db	33
   163  00100D  00                 	db	0
   164  00100E                     __end_of_spi_rx_invalid_msg:
   165                           	callstack 0
   166  0000                     _CCPR2	set	4027
   167  0000                     _CCPR1	set	4030
   168  0000                     _INTCONbits	set	4082
   169  0000                     _T3CON	set	4017
   170  0000                     _T1CON	set	4045
   171  0000                     _TRISA	set	3986
   172  0000                     _LATDbits	set	3980
   173  0000                     _PIR1bits	set	3998
   174  0000                     _SSPBUF	set	4041
   175  0000                     _TRISDbits	set	3989
   176  0000                     _SSPSTAT	set	4039
   177  0000                     _SSPCON1	set	4038
   178  0000                     _SSPCON1bits	set	4038
   179  0000                     _PORTC	set	3970
   180  0000                     _PORTD	set	3971
   181  0000                     _TRISC	set	3988
   182  0000                     _PORTDbits	set	3971
   183  0000                     _TRISD	set	3989
   184  0000                     _LATCbits	set	3979
   185  0000                     _PIE2bits	set	4000
   186  0000                     _CCP2CON	set	4026
   187  0000                     _PIE1bits	set	3997
   188  0000                     _CCP1CON	set	4029
   189  00100E  00                 	db	0	; dummy byte at the end
   190  0000                     
   191                           ; #config settings
   192                           
   193                           	psect	cinit
   194  001544                     __pcinit:
   195                           	callstack 0
   196  001544                     start_initialization:
   197                           	callstack 0
   198  001544                     __initialization:
   199                           	callstack 0
   200                           
   201                           ; Initialize objects allocated to COMRAM (60 bytes)
   202                           ; load TBLPTR registers with __pidataCOMRAM
   203  001544  0E08               	movlw	low __pidataCOMRAM
   204  001546  6EF6               	movwf	tblptrl,c
   205  001548  0E15               	movlw	high __pidataCOMRAM
   206  00154A  6EF7               	movwf	tblptrh,c
   207  00154C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   208  00154E  6EF8               	movwf	tblptru,c
   209  001550  EE00  F001         	lfsr	0,__pdataCOMRAM
   210  001554  EE10 F03C          	lfsr	1,60
   211  001558                     copy_data0:
   212  001558  0009               	tblrd		*+
   213  00155A  CFF5 FFEE          	movff	tablat,postinc0
   214  00155E  50E5               	movf	postdec1,w,c
   215  001560  50E1               	movf	fsr1l,w,c
   216  001562  E1FA               	bnz	copy_data0
   217                           
   218                           ; Clear objects allocated to COMRAM (15 bytes)
   219  001564  EE00  F05D         	lfsr	0,__pbssCOMRAM
   220  001568  0E0F               	movlw	15
   221  00156A                     clear_0:
   222  00156A  6AEE               	clrf	postinc0,c
   223  00156C  06E8               	decf	wreg,f,c
   224  00156E  E1FD               	bnz	clear_0
   225  001570                     end_of_initialization:
   226                           	callstack 0
   227  001570                     __end_of__initialization:
   228                           	callstack 0
   229  001570  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230  001572  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231  001574  0E00               	movlw	low (__Lmediumconst shr (0+16))
   232  001576  6EF8               	movwf	tblptru,c
   233  001578  0100               	movlb	0
   234  00157A  EF08  F008         	goto	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMRAM
   237  00005D                     __pbssCOMRAM:
   238                           	callstack 0
   239  00005D                     _button2_state:
   240                           	callstack 0
   241  00005D                     	ds	1
   242  00005E                     _button1_state:
   243                           	callstack 0
   244  00005E                     	ds	1
   245  00005F                     _spi_rx_flag:
   246                           	callstack 0
   247  00005F                     	ds	1
   248  000060                     _spi_rx_invalid_flag:
   249                           	callstack 0
   250  000060                     	ds	1
   251  000061                     _spi_rx_msg_buf:
   252                           	callstack 0
   253  000061                     	ds	1
   254  000062                     _manual_transfer:
   255                           	callstack 0
   256  000062                     	ds	1
   257  000063                     _transfer_complete_flag:
   258                           	callstack 0
   259  000063                     	ds	1
   260  000064                     	ds	1
   261  000065                     _spi_actor:
   262                           	callstack 0
   263  000065                     	ds	1
   264  000066                     _receive_byte:
   265                           	callstack 0
   266  000066                     	ds	1
   267  000067                     _address_counter:
   268                           	callstack 0
   269  000067                     	ds	1
   270  000068                     	ds	1
   271  000069                     _init_complete:
   272                           	callstack 0
   273  000069                     	ds	1
   274  00006A                     _DISP_BIT_MODE:
   275                           	callstack 0
   276  00006A                     	ds	1
   277  00006B                     _CURRENT_DISP:
   278                           	callstack 0
   279  00006B                     	ds	1
   280                           
   281                           	psect	dataCOMRAM
   282  000001                     __pdataCOMRAM:
   283                           	callstack 0
   284  000001                     	ds	16
   285  000011                     	ds	16
   286  000021                     main@F2562:
   287                           	callstack 0
   288  000021                     	ds	14
   289  00002F                     _button2_msg:
   290                           	callstack 0
   291  00002F                     	ds	5
   292  000034                     _button1_msg:
   293                           	callstack 0
   294  000034                     	ds	5
   295  000039                     _current_func_set:
   296                           	callstack 0
   297  000039                     	ds	1
   298  00003A                     _current_entry_mode:
   299                           	callstack 0
   300  00003A                     	ds	1
   301  00003B                     	ds	1
   302  00003C                     _current_disp_ctrl:
   303                           	callstack 0
   304  00003C                     	ds	1
   305                           
   306                           	psect	cstackCOMRAM
   307  00003D                     __pcstackCOMRAM:
   308                           	callstack 0
   309  00003D                     ??_isr:
   310  00003D                     
   311                           ; 1 bytes @ 0x0
   312  00003D                     	ds	1
   313  00003E                     ??_LCD_enable_toggle:
   314  00003E                     
   315                           ; 1 bytes @ 0x1
   316  00003E                     	ds	2
   317  000040                     ??_LCD_write_data_byte_4bit:
   318  000040                     ??_LCD_write_instr_byte_4bit:
   319  000040                     ??_LCD_write_instr_byte_8bit:
   320                           
   321                           ; 1 bytes @ 0x3
   322  000040                     	ds	1
   323  000041                     LCD_write_data_byte_4bit@data:
   324                           	callstack 0
   325  000041                     LCD_write_instr_byte_4bit@instr:
   326                           	callstack 0
   327  000041                     LCD_write_instr_byte_8bit@instr:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x4
   331  000041                     	ds	1
   332  000042                     ??_LCD_clear_display:
   333  000042                     ??_LCD_Init_ECE376:
   334  000042                     LCD_set_cursor_position@pos_on_line:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x5
   338  000042                     	ds	1
   339  000043                     LCD_set_cursor_position@ddram_addr:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x6
   343  000043                     	ds	1
   344  000044                     LCD_set_cursor_position@line:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x7
   348  000044                     	ds	1
   349  000045                     ??_main:
   350                           
   351                           ; 1 bytes @ 0x8
   352  000045                     	ds	2
   353  000047                     main@init_success_msg:
   354                           	callstack 0
   355                           
   356                           ; 14 bytes @ 0xA
   357  000047                     	ds	14
   358  000055                     _main$651:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x18
   362  000055                     	ds	2
   363  000057                     _main$652:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x1A
   367  000057                     	ds	2
   368  000059                     main@i:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x1C
   372  000059                     	ds	1
   373  00005A                     main@i_650:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x1D
   377  00005A                     	ds	1
   378  00005B                     main@i_653:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x1E
   382  00005B                     	ds	1
   383  00005C                     main@i_654:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x1F
   387  00005C                     	ds	1
   388                           
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 199 in file "spi_test.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  i               1   31[COMRAM] unsigned char 
   399 ;;  i               1   30[COMRAM] unsigned char 
   400 ;;  i               1   29[COMRAM] unsigned char 
   401 ;;  i               1   28[COMRAM] unsigned char 
   402 ;;  init_success   14   10[COMRAM] unsigned char [14]
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;Total ram usage:       24 bytes
   417 ;; Hardware stack levels required when called:    4
   418 ;; This function calls:
   419 ;;		_LCD_Init_ECE376
   420 ;;		_LCD_clear_display
   421 ;;		_LCD_set_cursor_position
   422 ;;		_LCD_write_data_byte_4bit
   423 ;;		_SPI_Init_Slave_Default
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text0
   430  001010                     __ptext0:
   431                           	callstack 0
   432  001010                     _main:
   433                           	callstack 27
   434  001010                     
   435                           ;spi_test.c: 288:     LCD_Init_ECE376();
   436  001010  ECD2  F008         	call	_LCD_Init_ECE376	;wreg free
   437                           
   438                           ;spi_test.c: 289:     SPI_Init_Slave_Default();
   439  001014  ECEA  F00A         	call	_SPI_Init_Slave_Default	;wreg free
   440  001018                     
   441                           ;spi_test.c: 292:     (INTCONbits.PEIE = 1u);
   442  001018  8CF2               	bsf	242,6,c	;volatile
   443  00101A                     
   444                           ;spi_test.c: 293:     (INTCONbits.GIE = 1);
   445  00101A  8EF2               	bsf	242,7,c	;volatile
   446                           
   447                           ;spi_test.c: 295:     LCD_set_cursor_position(1,1);
   448  00101C  0E01               	movlw	1
   449  00101E  6E42               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   450  001020  0E01               	movlw	1
   451  001022  EC44  F009         	call	_LCD_set_cursor_position
   452  001026                     
   453                           ;spi_test.c: 296:     char init_success_msg[] = "Init success!";
   454  001026  EE20  F021         	lfsr	2,main@F2562
   455  00102A  EE10  F047         	lfsr	1,main@init_success_msg
   456  00102E  0E0D               	movlw	13
   457  001030                     u701:
   458  001030  CFDB FFE3          	movff	plusw2,plusw1
   459  001034  06E8               	decf	wreg,f,c
   460  001036  E2FC               	bc	u701
   461  001038                     
   462                           ;spi_test.c: 297:     for(uint8_t i=0; i<13; i++) LCD_write_data_byte_4bit(init_success_
      +                          msg[i]);
   463  001038  0E00               	movlw	0
   464  00103A  6E59               	movwf	main@i^0,c
   465  00103C                     l2157:
   466  00103C  0E47               	movlw	low main@init_success_msg
   467  00103E  2459               	addwf	main@i^0,w,c
   468  001040  6ED9               	movwf	fsr2l,c
   469  001042  6ADA               	clrf	fsr2h,c
   470  001044  0E00               	movlw	high main@init_success_msg
   471  001046  22DA               	addwfc	fsr2h,f,c
   472  001048  50DF               	movf	indf2,w,c
   473  00104A  EC38  F00A         	call	_LCD_write_data_byte_4bit
   474  00104E  2A59               	incf	main@i^0,f,c
   475  001050  0E0C               	movlw	12
   476  001052  6459               	cpfsgt	main@i^0,c
   477  001054  EF2E  F008         	goto	u711
   478  001058  EF30  F008         	goto	u710
   479  00105C                     u711:
   480  00105C  EF1E  F008         	goto	l2157
   481  001060                     u710:
   482  001060                     
   483                           ;spi_test.c: 300:     _delay((unsigned long)((2000)*(40000000U/4000.0)));
   484  001060  0E66               	movlw	102
   485  001062  6E46               	movwf	(??_main+1)^0,c
   486  001064  0E76               	movlw	118
   487  001066  6E45               	movwf	??_main^0,c
   488  001068  0EC1               	movlw	193
   489  00106A                     u797:
   490  00106A  2EE8               	decfsz	wreg,f,c
   491  00106C  D7FE               	bra	u797
   492  00106E  2E45               	decfsz	??_main^0,f,c
   493  001070  D7FC               	bra	u797
   494  001072  2E46               	decfsz	(??_main+1)^0,f,c
   495  001074  D7FA               	bra	u797
   496  001076  F000               	nop	
   497  001078                     
   498                           ;spi_test.c: 301:     LCD_clear_display();
   499  001078  ECBF  F00A         	call	_LCD_clear_display	;wreg free
   500  00107C                     l2167:
   501                           
   502                           ;spi_test.c: 306:         if(spi_rx_flag) {
   503  00107C  505F               	movf	_spi_rx_flag^0,w,c
   504  00107E  B4D8               	btfsc	status,2,c
   505  001080  EF44  F008         	goto	u721
   506  001084  EF46  F008         	goto	u720
   507  001088                     u721:
   508  001088  EF3E  F008         	goto	l2167
   509  00108C                     u720:
   510  00108C                     
   511                           ;spi_test.c: 338:             if(spi_rx_invalid_flag) {
   512  00108C  5060               	movf	_spi_rx_invalid_flag^0,w,c
   513  00108E  B4D8               	btfsc	status,2,c
   514  001090  EF4C  F008         	goto	u731
   515  001094  EF4E  F008         	goto	u730
   516  001098                     u731:
   517  001098  EF70  F008         	goto	l311
   518  00109C                     u730:
   519  00109C                     
   520                           ;spi_test.c: 340:                 LCD_clear_display();
   521  00109C  ECBF  F00A         	call	_LCD_clear_display	;wreg free
   522                           
   523                           ;spi_test.c: 343:                 LCD_set_cursor_position(1,1);
   524  0010A0  0E01               	movlw	1
   525  0010A2  6E42               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   526  0010A4  0E01               	movlw	1
   527  0010A6  EC44  F009         	call	_LCD_set_cursor_position
   528  0010AA                     
   529                           ;spi_test.c: 344:                 for(uint8_t i=0; i<12; i++){
   530  0010AA  0E00               	movlw	0
   531  0010AC  6E5A               	movwf	main@i_650^0,c
   532  0010AE                     l2179:
   533                           
   534                           ;spi_test.c: 345:                     LCD_write_data_byte_4bit(spi_rx_invalid_msg[i]);
   535  0010AE  0E01               	movlw	low _spi_rx_invalid_msg
   536  0010B0  245A               	addwf	main@i_650^0,w,c
   537  0010B2  6EF6               	movwf	tblptrl,c
   538  0010B4  6AF7               	clrf	tblptrh,c
   539  0010B6  0E10               	movlw	high _spi_rx_invalid_msg
   540  0010B8  22F7               	addwfc	tblptrh,f,c
   541  0010BA                     	if	0	;There are less than 3 active tblptr bytes
   542  0010BA                     	endif
   543  0010BA  0008               	tblrd		*
   544  0010BC  50F5               	movf	tablat,w,c
   545  0010BE  EC38  F00A         	call	_LCD_write_data_byte_4bit
   546  0010C2                     
   547                           ;spi_test.c: 346:                 }
   548  0010C2  2A5A               	incf	main@i_650^0,f,c
   549  0010C4  0E0B               	movlw	11
   550  0010C6  645A               	cpfsgt	main@i_650^0,c
   551  0010C8  EF68  F008         	goto	u741
   552  0010CC  EF6A  F008         	goto	u740
   553  0010D0                     u741:
   554  0010D0  EF57  F008         	goto	l2179
   555  0010D4                     u740:
   556  0010D4                     
   557                           ;spi_test.c: 348:                 spi_rx_flag = 0x00;
   558  0010D4  0E00               	movlw	0
   559  0010D6  6E5F               	movwf	_spi_rx_flag^0,c
   560                           
   561                           ;spi_test.c: 349:                 spi_rx_invalid_flag = 0x00u;
   562  0010D8  0E00               	movlw	0
   563  0010DA  6E60               	movwf	_spi_rx_invalid_flag^0,c
   564                           
   565                           ;spi_test.c: 351:             } else {
   566  0010DC  EF3E  F008         	goto	l2167
   567  0010E0                     l311:
   568                           
   569                           ;spi_test.c: 354:                 button1_state = (spi_rx_msg_buf & (1u << 0u)) ? '1' : 
      +                          '0';
   570  0010E0  B061               	btfsc	_spi_rx_msg_buf^0,0,c
   571  0010E2  EF75  F008         	goto	u751
   572  0010E6  EF77  F008         	goto	u750
   573  0010EA                     u751:
   574  0010EA  EF7D  F008         	goto	l2189
   575  0010EE                     u750:
   576  0010EE  0E00               	movlw	0
   577  0010F0  6E56               	movwf	(_main$651+1)^0,c
   578  0010F2  0E30               	movlw	48
   579  0010F4  6E55               	movwf	_main$651^0,c
   580  0010F6  EF81  F008         	goto	l2191
   581  0010FA                     l2189:
   582  0010FA  0E00               	movlw	0
   583  0010FC  6E56               	movwf	(_main$651+1)^0,c
   584  0010FE  0E31               	movlw	49
   585  001100  6E55               	movwf	_main$651^0,c
   586  001102                     l2191:
   587  001102  C055  F05E         	movff	_main$651,_button1_state
   588  001106                     
   589                           ;spi_test.c: 355:                 button2_state = (spi_rx_msg_buf & (1u << 1u)) ? '1' : 
      +                          '0';
   590  001106  B261               	btfsc	_spi_rx_msg_buf^0,1,c
   591  001108  EF88  F008         	goto	u761
   592  00110C  EF8A  F008         	goto	u760
   593  001110                     u761:
   594  001110  EF90  F008         	goto	l2197
   595  001114                     u760:
   596  001114  0E00               	movlw	0
   597  001116  6E58               	movwf	(_main$652+1)^0,c
   598  001118  0E30               	movlw	48
   599  00111A  6E57               	movwf	_main$652^0,c
   600  00111C  EF94  F008         	goto	l2199
   601  001120                     l2197:
   602  001120  0E00               	movlw	0
   603  001122  6E58               	movwf	(_main$652+1)^0,c
   604  001124  0E31               	movlw	49
   605  001126  6E57               	movwf	_main$652^0,c
   606  001128                     l2199:
   607  001128  C057  F05D         	movff	_main$652,_button2_state
   608  00112C                     
   609                           ;spi_test.c: 356:                 button1_msg[4] = button1_state;
   610  00112C  C05E  F038         	movff	_button1_state,_button1_msg+4
   611  001130                     
   612                           ;spi_test.c: 357:                 button2_msg[4] = button2_state;
   613  001130  C05D  F033         	movff	_button2_state,_button2_msg+4
   614  001134                     
   615                           ;spi_test.c: 361:                 LCD_set_cursor_position(1,1);
   616  001134  0E01               	movlw	1
   617  001136  6E42               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   618  001138  0E01               	movlw	1
   619  00113A  EC44  F009         	call	_LCD_set_cursor_position
   620  00113E                     
   621                           ;spi_test.c: 362:                 for(uint8_t i=0; i<5; i++){
   622  00113E  0E00               	movlw	0
   623  001140  6E5B               	movwf	main@i_653^0,c
   624  001142                     l2213:
   625                           
   626                           ;spi_test.c: 363:                     LCD_write_data_byte_4bit(button1_msg[i]);
   627  001142  0E34               	movlw	low _button1_msg
   628  001144  245B               	addwf	main@i_653^0,w,c
   629  001146  6ED9               	movwf	fsr2l,c
   630  001148  6ADA               	clrf	fsr2h,c
   631  00114A  0E00               	movlw	high _button1_msg
   632  00114C  22DA               	addwfc	fsr2h,f,c
   633  00114E  50DF               	movf	indf2,w,c
   634  001150  EC38  F00A         	call	_LCD_write_data_byte_4bit
   635  001154                     
   636                           ;spi_test.c: 364:                 }
   637  001154  2A5B               	incf	main@i_653^0,f,c
   638  001156  0E04               	movlw	4
   639  001158  645B               	cpfsgt	main@i_653^0,c
   640  00115A  EFB1  F008         	goto	u771
   641  00115E  EFB3  F008         	goto	u770
   642  001162                     u771:
   643  001162  EFA1  F008         	goto	l2213
   644  001166                     u770:
   645  001166                     
   646                           ;spi_test.c: 366:                 LCD_set_cursor_position(2,1);
   647  001166  0E01               	movlw	1
   648  001168  6E42               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   649  00116A  0E02               	movlw	2
   650  00116C  EC44  F009         	call	_LCD_set_cursor_position
   651  001170                     
   652                           ;spi_test.c: 367:                 for(uint8_t i=0; i<5; i++){
   653  001170  0E00               	movlw	0
   654  001172  6E5C               	movwf	main@i_654^0,c
   655  001174                     l2227:
   656                           
   657                           ;spi_test.c: 368:                     LCD_write_data_byte_4bit(button2_msg[i]);
   658  001174  0E2F               	movlw	low _button2_msg
   659  001176  245C               	addwf	main@i_654^0,w,c
   660  001178  6ED9               	movwf	fsr2l,c
   661  00117A  6ADA               	clrf	fsr2h,c
   662  00117C  0E00               	movlw	high _button2_msg
   663  00117E  22DA               	addwfc	fsr2h,f,c
   664  001180  50DF               	movf	indf2,w,c
   665  001182  EC38  F00A         	call	_LCD_write_data_byte_4bit
   666  001186                     
   667                           ;spi_test.c: 369:                 }
   668  001186  2A5C               	incf	main@i_654^0,f,c
   669  001188  0E04               	movlw	4
   670  00118A  645C               	cpfsgt	main@i_654^0,c
   671  00118C  EFCA  F008         	goto	u781
   672  001190  EFCC  F008         	goto	u780
   673  001194                     u781:
   674  001194  EFBA  F008         	goto	l2227
   675  001198                     u780:
   676  001198                     
   677                           ;spi_test.c: 371:                 spi_rx_flag = 0x00;
   678  001198  0E00               	movlw	0
   679  00119A  6E5F               	movwf	_spi_rx_flag^0,c
   680  00119C  EF3E  F008         	goto	l2167
   681  0011A0  EF07  F000         	goto	start
   682  0011A4                     __end_of_main:
   683                           	callstack 0
   684                           
   685 ;; *************** function _SPI_Init_Slave_Default *****************
   686 ;; Defined at:
   687 ;;		line 70 in file "src/mssp_spi_driver.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text1
   716  0015D4                     __ptext1:
   717                           	callstack 0
   718  0015D4                     _SPI_Init_Slave_Default:
   719                           	callstack 29
   720  0015D4                     
   721                           ;src/mssp_spi_driver.c: 72:     SSPCON1bits.SSPEN = 0;
   722  0015D4  9AC6               	bcf	198,5,c	;volatile
   723  0015D6                     
   724                           ;src/mssp_spi_driver.c: 75:     SSPCON1 |= 0x00 | 0x04;
   725  0015D6  84C6               	bsf	198,2,c	;volatile
   726                           
   727                           ;src/mssp_spi_driver.c: 77:     SSPSTAT |= 0x40 | 0x00;
   728  0015D8  8CC7               	bsf	199,6,c	;volatile
   729  0015DA                     
   730                           ;src/mssp_spi_driver.c: 80:     TRISC |= 0x18; TRISC &= ~(0x20); TRISA |= 0x20;
   731  0015DA  0E18               	movlw	24
   732  0015DC  1294               	iorwf	148,f,c	;volatile
   733  0015DE  9A94               	bcf	148,5,c	;volatile
   734  0015E0  8A92               	bsf	146,5,c	;volatile
   735  0015E2                     
   736                           ;src/mssp_spi_driver.c: 83:     SSPCON1bits.SSPEN = 1;
   737  0015E2  8AC6               	bsf	198,5,c	;volatile
   738  0015E4                     
   739                           ;src/mssp_spi_driver.c: 84:     SSPCON1bits.WCOL = 0;
   740  0015E4  9EC6               	bcf	198,7,c	;volatile
   741  0015E6                     
   742                           ;src/mssp_spi_driver.c: 85:     SSPCON1bits.SSPOV = 0;
   743  0015E6  9CC6               	bcf	198,6,c	;volatile
   744                           
   745                           ;src/mssp_spi_driver.c: 86:     SSPBUF;
   746  0015E8  50C9               	movf	201,w,c	;volatile
   747  0015EA                     
   748                           ;src/mssp_spi_driver.c: 87:     PIR1bits.SSPIF = 0;
   749  0015EA  969E               	bcf	158,3,c	;volatile
   750  0015EC                     
   751                           ;src/mssp_spi_driver.c: 88:     spi_actor = SPI_SLAVE;
   752  0015EC  0E01               	movlw	1
   753  0015EE  6E65               	movwf	_spi_actor^0,c
   754  0015F0                     
   755                           ;src/mssp_spi_driver.c: 91:     PIE1bits.SSPIE = 1;
   756  0015F0  869D               	bsf	157,3,c	;volatile
   757  0015F2  0012               	return		;funcret
   758  0015F4                     __end_of_SPI_Init_Slave_Default:
   759                           	callstack 0
   760                           
   761 ;; *************** function _LCD_write_data_byte_4bit *****************
   762 ;; Defined at:
   763 ;;		line 126 in file "src/lcd_driver.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  data            1    wreg     unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  data            1    4[COMRAM] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    2
   784 ;; This function calls:
   785 ;;		_LCD_enable_toggle
   786 ;; This function is called by:
   787 ;;		_main
   788 ;;		_LCD_write_characters
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text2
   793  001470                     __ptext2:
   794                           	callstack 0
   795  001470                     _LCD_write_data_byte_4bit:
   796                           	callstack 28
   797                           
   798                           ;incstack = 0
   799                           ;LCD_write_data_byte_4bit@data stored from wreg
   800  001470  6E41               	movwf	LCD_write_data_byte_4bit@data^0,c
   801  001472                     
   802                           ;src/lcd_driver.c: 128:     (TRISC &= 0xF8);
   803  001472  0EF8               	movlw	248
   804  001474  1694               	andwf	148,f,c	;volatile
   805                           
   806                           ;src/lcd_driver.c: 129:     (TRISD &= 0x0Fu);
   807  001476  0E0F               	movlw	15
   808  001478  1695               	andwf	149,f,c	;volatile
   809  00147A                     
   810                           ;src/lcd_driver.c: 130:     (LATCbits.LATC0 = 1u);
   811  00147A  808B               	bsf	139,0,c	;volatile
   812  00147C                     
   813                           ;src/lcd_driver.c: 131:     (LATCbits.LATC1 = 0u);
   814  00147C  928B               	bcf	139,1,c	;volatile
   815                           
   816                           ;src/lcd_driver.c: 134:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
   817  00147E  C041  F040         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
   818  001482  0EF0               	movlw	240
   819  001484  1640               	andwf	??_LCD_write_data_byte_4bit^0,f,c
   820  001486  5083               	movf	131,w,c	;volatile
   821  001488  0B0F               	andlw	15
   822  00148A  1040               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
   823  00148C  6E83               	movwf	131,c	;volatile
   824  00148E                     
   825                           ;src/lcd_driver.c: 135:     LCD_enable_toggle();
   826  00148E  ECA9  F009         	call	_LCD_enable_toggle	;wreg free
   827  001492                     
   828                           ;src/lcd_driver.c: 136:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
   829  001492  C041  F040         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
   830  001496  3A40               	swapf	??_LCD_write_data_byte_4bit^0,f,c
   831  001498  0EF0               	movlw	240
   832  00149A  1640               	andwf	??_LCD_write_data_byte_4bit^0,f,c
   833  00149C  0EF0               	movlw	240
   834  00149E  1640               	andwf	??_LCD_write_data_byte_4bit^0,f,c
   835  0014A0  5083               	movf	131,w,c	;volatile
   836  0014A2  0B0F               	andlw	15
   837  0014A4  1040               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
   838  0014A6  6E83               	movwf	131,c	;volatile
   839                           
   840                           ;src/lcd_driver.c: 137:     LCD_enable_toggle();
   841  0014A8  ECA9  F009         	call	_LCD_enable_toggle	;wreg free
   842  0014AC                     
   843                           ;src/lcd_driver.c: 139:     _delay((unsigned long)((10)*(40000000u/4000.0)));
   844  0014AC  0E82               	movlw	130
   845  0014AE  6E40               	movwf	??_LCD_write_data_byte_4bit^0,c
   846  0014B0  0EDE               	movlw	222
   847  0014B2                     u807:
   848  0014B2  2EE8               	decfsz	wreg,f,c
   849  0014B4  D7FE               	bra	u807
   850  0014B6  2E40               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
   851  0014B8  D7FC               	bra	u807
   852  0014BA  0012               	return		;funcret
   853  0014BC                     __end_of_LCD_write_data_byte_4bit:
   854                           	callstack 0
   855                           
   856 ;; *************** function _LCD_set_cursor_position *****************
   857 ;; Defined at:
   858 ;;		line 500 in file "src/lcd_driver.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  line            1    wreg     unsigned char 
   861 ;;  pos_on_line     1    5[COMRAM] unsigned char 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  line            1    7[COMRAM] unsigned char 
   864 ;;  ddram_addr      1    6[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      unsigned char 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:        3 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    3
   881 ;; This function calls:
   882 ;;		_LCD_write_instr_byte_4bit
   883 ;;		_LCD_write_instr_byte_8bit
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text3
   890  001288                     __ptext3:
   891                           	callstack 0
   892  001288                     _LCD_set_cursor_position:
   893                           	callstack 27
   894                           
   895                           ;incstack = 0
   896                           ;LCD_set_cursor_position@line stored from wreg
   897  001288  6E44               	movwf	LCD_set_cursor_position@line^0,c
   898  00128A                     
   899                           ;src/lcd_driver.c: 502:     if(line > 2u || pos_on_line > 2u * 16u){
   900  00128A  0E03               	movlw	3
   901  00128C  6044               	cpfslt	LCD_set_cursor_position@line^0,c
   902  00128E  EF4B  F009         	goto	u471
   903  001292  EF4D  F009         	goto	u470
   904  001296                     u471:
   905  001296  EFA8  F009         	goto	l115
   906  00129A                     u470:
   907  00129A  0E20               	movlw	32
   908  00129C  6442               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
   909  00129E  EF53  F009         	goto	u481
   910  0012A2  EF55  F009         	goto	u480
   911  0012A6                     u481:
   912  0012A6  EF57  F009         	goto	l1871
   913  0012AA                     u480:
   914  0012AA  EFA8  F009         	goto	l115
   915  0012AE                     l1871:
   916                           
   917                           ;src/lcd_driver.c: 511:         if(line == 1u && pos_on_line < 16u){
   918  0012AE  0444               	decf	LCD_set_cursor_position@line^0,w,c
   919  0012B0  A4D8               	btfss	status,2,c
   920  0012B2  EF5D  F009         	goto	u491
   921  0012B6  EF5F  F009         	goto	u490
   922  0012BA                     u491:
   923  0012BA  EF6B  F009         	goto	l1877
   924  0012BE                     u490:
   925  0012BE  0E10               	movlw	16
   926  0012C0  6042               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
   927  0012C2  EF65  F009         	goto	u501
   928  0012C6  EF67  F009         	goto	u500
   929  0012CA                     u501:
   930  0012CA  EF6B  F009         	goto	l1877
   931  0012CE                     u500:
   932  0012CE                     
   933                           ;src/lcd_driver.c: 512:             ddram_addr = 0x00u + pos_on_line - 1;
   934  0012CE  0442               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
   935  0012D0  6E43               	movwf	LCD_set_cursor_position@ddram_addr^0,c
   936                           
   937                           ;src/lcd_driver.c: 514:         } else if(line == 2u && pos_on_line < 16u){
   938  0012D2  EF94  F009         	goto	l1889
   939  0012D6                     l1877:
   940  0012D6  0E02               	movlw	2
   941  0012D8  1844               	xorwf	LCD_set_cursor_position@line^0,w,c
   942  0012DA  A4D8               	btfss	status,2,c
   943  0012DC  EF72  F009         	goto	u511
   944  0012E0  EF74  F009         	goto	u510
   945  0012E4                     u511:
   946  0012E4  EF81  F009         	goto	l1883
   947  0012E8                     u510:
   948  0012E8  0E10               	movlw	16
   949  0012EA  6042               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
   950  0012EC  EF7A  F009         	goto	u521
   951  0012F0  EF7C  F009         	goto	u520
   952  0012F4                     u521:
   953  0012F4  EF81  F009         	goto	l1883
   954  0012F8                     u520:
   955  0012F8                     
   956                           ;src/lcd_driver.c: 515:             ddram_addr = 0x40u + pos_on_line - 1;
   957  0012F8  5042               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
   958  0012FA  0F3F               	addlw	63
   959  0012FC  6E43               	movwf	LCD_set_cursor_position@ddram_addr^0,c
   960                           
   961                           ;src/lcd_driver.c: 517:         } else if(line == 1u && pos_on_line > 16u){
   962  0012FE  EF94  F009         	goto	l1889
   963  001302                     l1883:
   964  001302  0444               	decf	LCD_set_cursor_position@line^0,w,c
   965  001304  A4D8               	btfss	status,2,c
   966  001306  EF87  F009         	goto	u531
   967  00130A  EF89  F009         	goto	u530
   968  00130E                     u531:
   969  00130E  EFA8  F009         	goto	l115
   970  001312                     u530:
   971  001312  0E10               	movlw	16
   972  001314  6442               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
   973  001316  EF8F  F009         	goto	u541
   974  00131A  EF91  F009         	goto	u540
   975  00131E                     u541:
   976  00131E  EFA8  F009         	goto	l115
   977  001322                     u540:
   978  001322                     
   979                           ;src/lcd_driver.c: 518:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
   980  001322  5042               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
   981  001324  0F2F               	addlw	47
   982  001326  6E43               	movwf	LCD_set_cursor_position@ddram_addr^0,c
   983  001328                     l1889:
   984                           
   985                           ;src/lcd_driver.c: 525:     if(DISP_BIT_MODE == MODE_4BIT){
   986  001328  506A               	movf	_DISP_BIT_MODE^0,w,c
   987  00132A  A4D8               	btfss	status,2,c
   988  00132C  EF9A  F009         	goto	u551
   989  001330  EF9C  F009         	goto	u550
   990  001334                     u551:
   991  001334  EFA2  F009         	goto	l1893
   992  001338                     u550:
   993  001338                     
   994                           ;src/lcd_driver.c: 526:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
   995  001338  5043               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
   996  00133A  0980               	iorlw	128
   997  00133C  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
   998                           
   999                           ;src/lcd_driver.c: 527:     } else{
  1000  001340  EFA6  F009         	goto	l1895
  1001  001344                     l1893:
  1002                           
  1003                           ;src/lcd_driver.c: 528:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
  1004  001344  5043               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  1005  001346  0980               	iorlw	128
  1006  001348  ECD7  F00A         	call	_LCD_write_instr_byte_8bit
  1007  00134C                     l1895:
  1008                           
  1009                           ;src/lcd_driver.c: 531:     address_counter = ddram_addr;
  1010  00134C  C043  F067         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
  1011  001350                     l115:
  1012  001350  0012               	return		;funcret
  1013  001352                     __end_of_LCD_set_cursor_position:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _LCD_clear_display *****************
  1017 ;; Defined at:
  1018 ;;		line 427 in file "src/lcd_driver.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      unsigned char 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        1 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    3
  1039 ;; This function calls:
  1040 ;;		_LCD_write_instr_byte_4bit
  1041 ;;		_LCD_write_instr_byte_8bit
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;;		_LCD_Init_amazonLCD
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text4
  1049  00157E                     __ptext4:
  1050                           	callstack 0
  1051  00157E                     _LCD_clear_display:
  1052                           	callstack 27
  1053  00157E                     
  1054                           ;src/lcd_driver.c: 428:     if(DISP_BIT_MODE == MODE_4BIT){
  1055  00157E  506A               	movf	_DISP_BIT_MODE^0,w,c
  1056  001580  A4D8               	btfss	status,2,c
  1057  001582  EFC5  F00A         	goto	u461
  1058  001586  EFC7  F00A         	goto	u460
  1059  00158A                     u461:
  1060  00158A  EFCC  F00A         	goto	l1861
  1061  00158E                     u460:
  1062  00158E                     
  1063                           ;src/lcd_driver.c: 429:         LCD_write_instr_byte_4bit(0x01u);
  1064  00158E  0E01               	movlw	1
  1065  001590  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1066                           
  1067                           ;src/lcd_driver.c: 430:     } else{
  1068  001594  EFCF  F00A         	goto	l1863
  1069  001598                     l1861:
  1070                           
  1071                           ;src/lcd_driver.c: 431:         LCD_write_instr_byte_8bit(0x01u);
  1072  001598  0E01               	movlw	1
  1073  00159A  ECD7  F00A         	call	_LCD_write_instr_byte_8bit
  1074  00159E                     l1863:
  1075                           
  1076                           ;src/lcd_driver.c: 434:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1077  00159E  0E82               	movlw	130
  1078  0015A0  6E42               	movwf	??_LCD_clear_display^0,c
  1079  0015A2  0EDE               	movlw	222
  1080  0015A4                     u817:
  1081  0015A4  2EE8               	decfsz	wreg,f,c
  1082  0015A6  D7FE               	bra	u817
  1083  0015A8  2E42               	decfsz	??_LCD_clear_display^0,f,c
  1084  0015AA  D7FC               	bra	u817
  1085  0015AC  0012               	return		;funcret
  1086  0015AE                     __end_of_LCD_clear_display:
  1087                           	callstack 0
  1088                           
  1089 ;; *************** function _LCD_write_instr_byte_8bit *****************
  1090 ;; Defined at:
  1091 ;;		line 200 in file "src/lcd_driver.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  instr           1    wreg     unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  instr           1    4[COMRAM] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;Total ram usage:        2 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    2
  1112 ;; This function calls:
  1113 ;;		_LCD_enable_toggle
  1114 ;; This function is called by:
  1115 ;;		_LCD_clear_display
  1116 ;;		_LCD_set_cursor_position
  1117 ;;		_LCD_Init_amazonLCD
  1118 ;;		_LCD_return_home
  1119 ;;		_LCD_write_characters
  1120 ;;		_LCD_turn_off_cursor
  1121 ;;		_LCD_turn_on_cursor
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text5
  1126  0015AE                     __ptext5:
  1127                           	callstack 0
  1128  0015AE                     _LCD_write_instr_byte_8bit:
  1129                           	callstack 27
  1130                           
  1131                           ;incstack = 0
  1132                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  1133  0015AE  6E41               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  1134  0015B0                     
  1135                           ;src/lcd_driver.c: 202:     (TRISC &= 0xF8);
  1136  0015B0  0EF8               	movlw	248
  1137  0015B2  1694               	andwf	148,f,c	;volatile
  1138  0015B4                     
  1139                           ;src/lcd_driver.c: 203:     (TRISD = 0x00u);
  1140  0015B4  0E00               	movlw	0
  1141  0015B6  6E95               	movwf	149,c	;volatile
  1142  0015B8                     
  1143                           ;src/lcd_driver.c: 204:     (LATCbits.LATC0 = 0u);
  1144  0015B8  908B               	bcf	139,0,c	;volatile
  1145  0015BA                     
  1146                           ;src/lcd_driver.c: 205:     (LATCbits.LATC1 = 0u);
  1147  0015BA  928B               	bcf	139,1,c	;volatile
  1148  0015BC                     
  1149                           ;src/lcd_driver.c: 208:     PORTD = instr;
  1150  0015BC  C041  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  1151  0015C0                     
  1152                           ;src/lcd_driver.c: 209:     LCD_enable_toggle();
  1153  0015C0  ECA9  F009         	call	_LCD_enable_toggle	;wreg free
  1154  0015C4                     
  1155                           ;src/lcd_driver.c: 211:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1156  0015C4  0E82               	movlw	130
  1157  0015C6  6E40               	movwf	??_LCD_write_instr_byte_8bit^0,c
  1158  0015C8  0EDE               	movlw	222
  1159  0015CA                     u827:
  1160  0015CA  2EE8               	decfsz	wreg,f,c
  1161  0015CC  D7FE               	bra	u827
  1162  0015CE  2E40               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  1163  0015D0  D7FC               	bra	u827
  1164  0015D2  0012               	return		;funcret
  1165  0015D4                     __end_of_LCD_write_instr_byte_8bit:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _LCD_Init_ECE376 *****************
  1169 ;; Defined at:
  1170 ;;		line 224 in file "src/lcd_driver.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        2 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    3
  1191 ;; This function calls:
  1192 ;;		_LCD_write_instr_byte_4bit
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text6
  1199  0011A4                     __ptext6:
  1200                           	callstack 0
  1201  0011A4                     _LCD_Init_ECE376:
  1202                           	callstack 27
  1203  0011A4                     
  1204                           ;src/lcd_driver.c: 227:     PORTC = 0x00; PORTD = 0x00;
  1205  0011A4  0E00               	movlw	0
  1206  0011A6  6E82               	movwf	130,c	;volatile
  1207  0011A8  0E00               	movlw	0
  1208  0011AA  6E83               	movwf	131,c	;volatile
  1209  0011AC                     
  1210                           ;src/lcd_driver.c: 229:     (TRISC &= 0xF8);
  1211  0011AC  0EF8               	movlw	248
  1212  0011AE  1694               	andwf	148,f,c	;volatile
  1213  0011B0                     
  1214                           ;src/lcd_driver.c: 230:     (TRISD |= 0xF0u);
  1215  0011B0  0EF0               	movlw	240
  1216  0011B2  1295               	iorwf	149,f,c	;volatile
  1217  0011B4                     
  1218                           ;src/lcd_driver.c: 234:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  1219  0011B4  0ECB               	movlw	203
  1220  0011B6  6E43               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1221  0011B8  0EEC               	movlw	236
  1222  0011BA  6E42               	movwf	??_LCD_Init_ECE376^0,c
  1223  0011BC  0E84               	movlw	132
  1224  0011BE                     u837:
  1225  0011BE  2EE8               	decfsz	wreg,f,c
  1226  0011C0  D7FE               	bra	u837
  1227  0011C2  2E42               	decfsz	??_LCD_Init_ECE376^0,f,c
  1228  0011C4  D7FC               	bra	u837
  1229  0011C6  2E43               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1230  0011C8  D7FA               	bra	u837
  1231  0011CA  D000               	nop2	
  1232  0011CC                     
  1233                           ;src/lcd_driver.c: 235:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  1234  0011CC  0ECB               	movlw	203
  1235  0011CE  6E43               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1236  0011D0  0EEC               	movlw	236
  1237  0011D2  6E42               	movwf	??_LCD_Init_ECE376^0,c
  1238  0011D4  0E84               	movlw	132
  1239  0011D6                     u847:
  1240  0011D6  2EE8               	decfsz	wreg,f,c
  1241  0011D8  D7FE               	bra	u847
  1242  0011DA  2E42               	decfsz	??_LCD_Init_ECE376^0,f,c
  1243  0011DC  D7FC               	bra	u847
  1244  0011DE  2E43               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1245  0011E0  D7FA               	bra	u847
  1246  0011E2  D000               	nop2	
  1247  0011E4                     
  1248                           ;src/lcd_driver.c: 236:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  1249  0011E4  0E66               	movlw	102
  1250  0011E6  6E43               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1251  0011E8  0E76               	movlw	118
  1252  0011EA  6E42               	movwf	??_LCD_Init_ECE376^0,c
  1253  0011EC  0EC1               	movlw	193
  1254  0011EE                     u857:
  1255  0011EE  2EE8               	decfsz	wreg,f,c
  1256  0011F0  D7FE               	bra	u857
  1257  0011F2  2E42               	decfsz	??_LCD_Init_ECE376^0,f,c
  1258  0011F4  D7FC               	bra	u857
  1259  0011F6  2E43               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1260  0011F8  D7FA               	bra	u857
  1261  0011FA  F000               	nop	
  1262  0011FC                     
  1263                           ;src/lcd_driver.c: 241:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  1264  0011FC  0E06               	movlw	6
  1265  0011FE  6E43               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1266  001200  0E13               	movlw	19
  1267  001202  6E42               	movwf	??_LCD_Init_ECE376^0,c
  1268  001204  0EAE               	movlw	174
  1269  001206                     u867:
  1270  001206  2EE8               	decfsz	wreg,f,c
  1271  001208  D7FE               	bra	u867
  1272  00120A  2E42               	decfsz	??_LCD_Init_ECE376^0,f,c
  1273  00120C  D7FC               	bra	u867
  1274  00120E  2E43               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1275  001210  D7FA               	bra	u867
  1276  001212                     
  1277                           ;src/lcd_driver.c: 242:     LCD_write_instr_byte_4bit(0x30u);
  1278  001212  0E30               	movlw	48
  1279  001214  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1280  001218                     
  1281                           ;src/lcd_driver.c: 243:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  1282  001218  0E41               	movlw	65
  1283  00121A  6E42               	movwf	??_LCD_Init_ECE376^0,c
  1284  00121C  0EEE               	movlw	238
  1285  00121E                     u877:
  1286  00121E  2EE8               	decfsz	wreg,f,c
  1287  001220  D7FE               	bra	u877
  1288  001222  2E42               	decfsz	??_LCD_Init_ECE376^0,f,c
  1289  001224  D7FC               	bra	u877
  1290  001226  D000               	nop2	
  1291  001228                     
  1292                           ;src/lcd_driver.c: 244:     LCD_write_instr_byte_4bit(0x30u);
  1293  001228  0E30               	movlw	48
  1294  00122A  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1295  00122E                     
  1296                           ;src/lcd_driver.c: 245:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  1297  00122E  0ED6               	movlw	214
  1298  001230                     u887:
  1299  001230  D000               	nop2	
  1300  001232  D000               	nop2	
  1301  001234  2EE8               	decfsz	wreg,f,c
  1302  001236  D7FC               	bra	u887
  1303  001238  D000               	nop2	
  1304  00123A                     
  1305                           ;src/lcd_driver.c: 246:     LCD_write_instr_byte_4bit(0x30u);
  1306  00123A  0E30               	movlw	48
  1307  00123C  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1308  001240                     
  1309                           ;src/lcd_driver.c: 248:     LCD_write_instr_byte_4bit(0x28u);
  1310  001240  0E28               	movlw	40
  1311  001242  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1312  001246                     
  1313                           ;src/lcd_driver.c: 249:     LCD_write_instr_byte_4bit(0x0Eu);
  1314  001246  0E0E               	movlw	14
  1315  001248  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1316  00124C                     
  1317                           ;src/lcd_driver.c: 250:     LCD_write_instr_byte_4bit(0x01u);
  1318  00124C  0E01               	movlw	1
  1319  00124E  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1320  001252                     
  1321                           ;src/lcd_driver.c: 251:     LCD_write_instr_byte_4bit(0x06u);
  1322  001252  0E06               	movlw	6
  1323  001254  EC5E  F00A         	call	_LCD_write_instr_byte_4bit
  1324  001258                     
  1325                           ;src/lcd_driver.c: 253:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  1326  001258  0E06               	movlw	6
  1327  00125A  6E43               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1328  00125C  0E13               	movlw	19
  1329  00125E  6E42               	movwf	??_LCD_Init_ECE376^0,c
  1330  001260  0EAE               	movlw	174
  1331  001262                     u897:
  1332  001262  2EE8               	decfsz	wreg,f,c
  1333  001264  D7FE               	bra	u897
  1334  001266  2E42               	decfsz	??_LCD_Init_ECE376^0,f,c
  1335  001268  D7FC               	bra	u897
  1336  00126A  2E43               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1337  00126C  D7FA               	bra	u897
  1338  00126E                     
  1339                           ;src/lcd_driver.c: 256:     CURRENT_DISP = QAPASS_EBAY;
  1340  00126E  0E00               	movlw	0
  1341  001270  6E6B               	movwf	_CURRENT_DISP^0,c
  1342  001272                     
  1343                           ;src/lcd_driver.c: 257:     DISP_BIT_MODE = MODE_4BIT;
  1344  001272  0E00               	movlw	0
  1345  001274  6E6A               	movwf	_DISP_BIT_MODE^0,c
  1346  001276                     
  1347                           ;src/lcd_driver.c: 258:     init_complete = 0x01u;
  1348  001276  0E01               	movlw	1
  1349  001278  6E69               	movwf	_init_complete^0,c
  1350  00127A                     
  1351                           ;src/lcd_driver.c: 259:     current_entry_mode = 0x06u;
  1352  00127A  0E06               	movlw	6
  1353  00127C  6E3A               	movwf	_current_entry_mode^0,c
  1354  00127E                     
  1355                           ;src/lcd_driver.c: 260:     current_disp_ctrl = 0x0Eu;
  1356  00127E  0E0E               	movlw	14
  1357  001280  6E3C               	movwf	_current_disp_ctrl^0,c
  1358  001282                     
  1359                           ;src/lcd_driver.c: 261:     current_func_set = 0x28u;
  1360  001282  0E28               	movlw	40
  1361  001284  6E39               	movwf	_current_func_set^0,c
  1362  001286  0012               	return		;funcret
  1363  001288                     __end_of_LCD_Init_ECE376:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _LCD_write_instr_byte_4bit *****************
  1367 ;; Defined at:
  1368 ;;		line 175 in file "src/lcd_driver.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  instr           1    wreg     unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  instr           1    4[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    2
  1389 ;; This function calls:
  1390 ;;		_LCD_enable_toggle
  1391 ;; This function is called by:
  1392 ;;		_LCD_Init_ECE376
  1393 ;;		_LCD_clear_display
  1394 ;;		_LCD_set_cursor_position
  1395 ;;		_LCD_Init_amazonLCD
  1396 ;;		_LCD_return_home
  1397 ;;		_LCD_write_characters
  1398 ;;		_LCD_turn_off_cursor
  1399 ;;		_LCD_turn_on_cursor
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text7
  1404  0014BC                     __ptext7:
  1405                           	callstack 0
  1406  0014BC                     _LCD_write_instr_byte_4bit:
  1407                           	callstack 27
  1408                           
  1409                           ;incstack = 0
  1410                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  1411  0014BC  6E41               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  1412  0014BE                     
  1413                           ;src/lcd_driver.c: 177:     (TRISC &= 0xF8);
  1414  0014BE  0EF8               	movlw	248
  1415  0014C0  1694               	andwf	148,f,c	;volatile
  1416                           
  1417                           ;src/lcd_driver.c: 178:     (TRISD &= 0x0Fu);
  1418  0014C2  0E0F               	movlw	15
  1419  0014C4  1695               	andwf	149,f,c	;volatile
  1420  0014C6                     
  1421                           ;src/lcd_driver.c: 179:     (LATCbits.LATC0 = 0u);
  1422  0014C6  908B               	bcf	139,0,c	;volatile
  1423  0014C8                     
  1424                           ;src/lcd_driver.c: 180:     (LATCbits.LATC1 = 0u);
  1425  0014C8  928B               	bcf	139,1,c	;volatile
  1426                           
  1427                           ;src/lcd_driver.c: 183:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  1428  0014CA  C041  F040         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  1429  0014CE  0EF0               	movlw	240
  1430  0014D0  1640               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1431  0014D2  5083               	movf	131,w,c	;volatile
  1432  0014D4  0B0F               	andlw	15
  1433  0014D6  1040               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  1434  0014D8  6E83               	movwf	131,c	;volatile
  1435  0014DA                     
  1436                           ;src/lcd_driver.c: 184:     LCD_enable_toggle();
  1437  0014DA  ECA9  F009         	call	_LCD_enable_toggle	;wreg free
  1438  0014DE                     
  1439                           ;src/lcd_driver.c: 185:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  1440  0014DE  C041  F040         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  1441  0014E2  3A40               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  1442  0014E4  0EF0               	movlw	240
  1443  0014E6  1640               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1444  0014E8  0EF0               	movlw	240
  1445  0014EA  1640               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1446  0014EC  5083               	movf	131,w,c	;volatile
  1447  0014EE  0B0F               	andlw	15
  1448  0014F0  1040               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  1449  0014F2  6E83               	movwf	131,c	;volatile
  1450                           
  1451                           ;src/lcd_driver.c: 186:     LCD_enable_toggle();
  1452  0014F4  ECA9  F009         	call	_LCD_enable_toggle	;wreg free
  1453  0014F8                     
  1454                           ;src/lcd_driver.c: 188:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1455  0014F8  0E82               	movlw	130
  1456  0014FA  6E40               	movwf	??_LCD_write_instr_byte_4bit^0,c
  1457  0014FC  0EDE               	movlw	222
  1458  0014FE                     u907:
  1459  0014FE  2EE8               	decfsz	wreg,f,c
  1460  001500  D7FE               	bra	u907
  1461  001502  2E40               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  1462  001504  D7FC               	bra	u907
  1463  001506  0012               	return		;funcret
  1464  001508                     __end_of_LCD_write_instr_byte_4bit:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _LCD_enable_toggle *****************
  1468 ;; Defined at:
  1469 ;;		line 45 in file "src/lcd_driver.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_LCD_write_data_byte_4bit
  1494 ;;		_LCD_write_instr_byte_4bit
  1495 ;;		_LCD_write_instr_byte_8bit
  1496 ;;		_LCD_wait_for_BF
  1497 ;;		_LCD_write_data_byte_8bit
  1498 ;;		_LCD_Init
  1499 ;;		_LCD_read_current_address_counter
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text8
  1504  001352                     __ptext8:
  1505                           	callstack 0
  1506  001352                     _LCD_enable_toggle:
  1507                           	callstack 28
  1508  001352                     
  1509                           ;src/lcd_driver.c: 46:     switch(CURRENT_DISP){
  1510  001352  EFEF  F009         	goto	l1753
  1511  001356                     l56:
  1512                           
  1513                           ;src/lcd_driver.c: 49:             (LATCbits.LATC2 = 0u);
  1514  001356  948B               	bcf	139,2,c	;volatile
  1515  001358                     
  1516                           ;src/lcd_driver.c: 50:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1517  001358  0E06               	movlw	6
  1518  00135A                     u917:
  1519  00135A  2EE8               	decfsz	wreg,f,c
  1520  00135C  D7FE               	bra	u917
  1521  00135E  D000               	nop2	
  1522  001360                     
  1523                           ;src/lcd_driver.c: 51:             (LATCbits.LATC2 = 1u);
  1524  001360  848B               	bsf	139,2,c	;volatile
  1525                           
  1526                           ;src/lcd_driver.c: 52:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1527  001362  0E06               	movlw	6
  1528  001364                     u927:
  1529  001364  2EE8               	decfsz	wreg,f,c
  1530  001366  D7FE               	bra	u927
  1531  001368  D000               	nop2	
  1532  00136A                     
  1533                           ;src/lcd_driver.c: 53:             (LATCbits.LATC2 = 0u);
  1534  00136A  948B               	bcf	139,2,c	;volatile
  1535                           
  1536                           ;src/lcd_driver.c: 54:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1537  00136C  0E06               	movlw	6
  1538  00136E                     u937:
  1539  00136E  2EE8               	decfsz	wreg,f,c
  1540  001370  D7FE               	bra	u937
  1541  001372  D000               	nop2	
  1542                           
  1543                           ;src/lcd_driver.c: 55:             break;
  1544  001374  EF0C  F00A         	goto	l61
  1545  001378                     l58:
  1546                           
  1547                           ;src/lcd_driver.c: 58:             (LATCbits.LATC2 = 0u);
  1548  001378  948B               	bcf	139,2,c	;volatile
  1549  00137A                     
  1550                           ;src/lcd_driver.c: 59:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  1551  00137A  0E03               	movlw	3
  1552  00137C                     u947:
  1553  00137C  2EE8               	decfsz	wreg,f,c
  1554  00137E  D7FE               	bra	u947
  1555  001380  F000               	nop	
  1556  001382                     
  1557                           ;src/lcd_driver.c: 60:             (LATCbits.LATC2 = 1u);
  1558  001382  848B               	bsf	139,2,c	;volatile
  1559                           
  1560                           ;src/lcd_driver.c: 61:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  1561  001384  0E03               	movlw	3
  1562  001386                     u957:
  1563  001386  2EE8               	decfsz	wreg,f,c
  1564  001388  D7FE               	bra	u957
  1565  00138A  F000               	nop	
  1566  00138C                     
  1567                           ;src/lcd_driver.c: 62:             (LATCbits.LATC2 = 0u);
  1568  00138C  948B               	bcf	139,2,c	;volatile
  1569                           
  1570                           ;src/lcd_driver.c: 63:             _delay((unsigned long)((100u)*(40000000u/4000000.0)))
      +                          ;
  1571  00138E  0EC8               	movlw	200
  1572  001390                     u967:
  1573  001390  D000               	nop2	
  1574  001392  2EE8               	decfsz	wreg,f,c
  1575  001394  D7FD               	bra	u967
  1576                           
  1577                           ;src/lcd_driver.c: 64:             break;
  1578  001396  EF0C  F00A         	goto	l61
  1579  00139A                     l59:
  1580                           
  1581                           ;src/lcd_driver.c: 67:             (LATCbits.LATC2 = 0u);
  1582  00139A  948B               	bcf	139,2,c	;volatile
  1583  00139C                     
  1584                           ;src/lcd_driver.c: 68:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1585  00139C  0E06               	movlw	6
  1586  00139E                     u977:
  1587  00139E  2EE8               	decfsz	wreg,f,c
  1588  0013A0  D7FE               	bra	u977
  1589  0013A2  D000               	nop2	
  1590  0013A4                     
  1591                           ;src/lcd_driver.c: 69:             (LATCbits.LATC2 = 1u);
  1592  0013A4  848B               	bsf	139,2,c	;volatile
  1593                           
  1594                           ;src/lcd_driver.c: 70:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1595  0013A6  0E06               	movlw	6
  1596  0013A8                     u987:
  1597  0013A8  2EE8               	decfsz	wreg,f,c
  1598  0013AA  D7FE               	bra	u987
  1599  0013AC  D000               	nop2	
  1600  0013AE                     
  1601                           ;src/lcd_driver.c: 71:             (LATCbits.LATC2 = 0u);
  1602  0013AE  948B               	bcf	139,2,c	;volatile
  1603                           
  1604                           ;src/lcd_driver.c: 72:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1605  0013B0  0E06               	movlw	6
  1606  0013B2                     u997:
  1607  0013B2  2EE8               	decfsz	wreg,f,c
  1608  0013B4  D7FE               	bra	u997
  1609  0013B6  D000               	nop2	
  1610                           
  1611                           ;src/lcd_driver.c: 73:             break;
  1612  0013B8  EF0C  F00A         	goto	l61
  1613  0013BC                     l60:
  1614                           
  1615                           ;src/lcd_driver.c: 76:             (LATCbits.LATC2 = 0u);
  1616  0013BC  948B               	bcf	139,2,c	;volatile
  1617  0013BE                     
  1618                           ;src/lcd_driver.c: 77:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1619  0013BE  0E06               	movlw	6
  1620  0013C0                     u1007:
  1621  0013C0  2EE8               	decfsz	wreg,f,c
  1622  0013C2  D7FE               	bra	u1007
  1623  0013C4  D000               	nop2	
  1624  0013C6                     
  1625                           ;src/lcd_driver.c: 78:             (LATCbits.LATC2 = 1u);
  1626  0013C6  848B               	bsf	139,2,c	;volatile
  1627                           
  1628                           ;src/lcd_driver.c: 79:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1629  0013C8  0E06               	movlw	6
  1630  0013CA                     u1017:
  1631  0013CA  2EE8               	decfsz	wreg,f,c
  1632  0013CC  D7FE               	bra	u1017
  1633  0013CE  D000               	nop2	
  1634  0013D0                     
  1635                           ;src/lcd_driver.c: 80:             (LATCbits.LATC2 = 0u);
  1636  0013D0  948B               	bcf	139,2,c	;volatile
  1637                           
  1638                           ;src/lcd_driver.c: 81:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1639  0013D2  0E06               	movlw	6
  1640  0013D4                     u1027:
  1641  0013D4  2EE8               	decfsz	wreg,f,c
  1642  0013D6  D7FE               	bra	u1027
  1643  0013D8  D000               	nop2	
  1644                           
  1645                           ;src/lcd_driver.c: 82:             break;
  1646  0013DA  EF0C  F00A         	goto	l61
  1647  0013DE                     l1753:
  1648  0013DE  506B               	movf	_CURRENT_DISP^0,w,c
  1649  0013E0  6E3E               	movwf	??_LCD_enable_toggle^0,c
  1650  0013E2  6A3F               	clrf	(??_LCD_enable_toggle+1)^0,c
  1651                           
  1652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 1, Range of values is 0 to 0
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte            4     3 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659  0013E4  503F               	movf	(??_LCD_enable_toggle+1)^0,w,c
  1660  0013E6  0A00               	xorlw	0	; case 0
  1661  0013E8  B4D8               	btfsc	status,2,c
  1662  0013EA  EFF9  F009         	goto	l2239
  1663  0013EE  EF0C  F00A         	goto	l61
  1664  0013F2                     l2239:
  1665                           
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 4, Range of values is 0 to 3
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte           13     7 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672  0013F2  503E               	movf	??_LCD_enable_toggle^0,w,c
  1673  0013F4  0A00               	xorlw	0	; case 0
  1674  0013F6  B4D8               	btfsc	status,2,c
  1675  0013F8  EFAB  F009         	goto	l56
  1676  0013FC  0A01               	xorlw	1	; case 1
  1677  0013FE  B4D8               	btfsc	status,2,c
  1678  001400  EFBC  F009         	goto	l58
  1679  001404  0A03               	xorlw	3	; case 2
  1680  001406  B4D8               	btfsc	status,2,c
  1681  001408  EFCD  F009         	goto	l59
  1682  00140C  0A01               	xorlw	1	; case 3
  1683  00140E  B4D8               	btfsc	status,2,c
  1684  001410  EFDE  F009         	goto	l60
  1685  001414  EF0C  F00A         	goto	l61
  1686  001418                     l61:
  1687  001418  0012               	return		;funcret
  1688  00141A                     __end_of_LCD_enable_toggle:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _isr *****************
  1692 ;; Defined at:
  1693 ;;		line 134 in file "spi_test.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        1 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		Interrupt level 2
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	intcode
  1721  000008                     __pintcode:
  1722                           	callstack 0
  1723  000008                     _isr:
  1724                           	callstack 27
  1725                           
  1726                           ;incstack = 0
  1727  000008  826C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1728  00000A  ED0D  F00A         	call	int_func,f	;refresh shadow registers
  1729                           
  1730                           	psect	intcode_body
  1731  00141A                     __pintcode_body:
  1732                           	callstack 27
  1733  00141A                     int_func:
  1734                           	callstack 27
  1735  00141A  0006               	pop		; remove dummy address from shadow register refresh
  1736  00141C                     
  1737                           ;spi_test.c: 142:     if(PIR1bits.SSPIF && PIE1bits.SSPIE) {
  1738  00141C  A69E               	btfss	158,3,c	;volatile
  1739  00141E  EF13  F00A         	goto	i2u34_41
  1740  001422  EF15  F00A         	goto	i2u34_40
  1741  001426                     i2u34_41:
  1742  001426  EF36  F00A         	goto	i2l300
  1743  00142A                     i2u34_40:
  1744  00142A  A69D               	btfss	157,3,c	;volatile
  1745  00142C  EF1A  F00A         	goto	i2u35_41
  1746  001430  EF1C  F00A         	goto	i2u35_40
  1747  001434                     i2u35_41:
  1748  001434  EF36  F00A         	goto	i2l300
  1749  001438                     i2u35_40:
  1750  001438                     
  1751                           ;spi_test.c: 144:         transfer_complete_flag = 0x01;
  1752  001438  0E01               	movlw	1
  1753  00143A  6E63               	movwf	_transfer_complete_flag^0,c
  1754  00143C                     
  1755                           ;spi_test.c: 147:         spi_rx_msg_buf = SSPBUF;
  1756  00143C  CFC9 F061          	movff	4041,_spi_rx_msg_buf	;volatile
  1757                           
  1758                           ;spi_test.c: 148:         spi_rx_flag = 0x01;
  1759  001440  0E01               	movlw	1
  1760  001442  6E5F               	movwf	_spi_rx_flag^0,c
  1761  001444                     
  1762                           ;spi_test.c: 151:         if((spi_rx_msg_buf & 0xC0u) != 0x00u){
  1763  001444  C061  F03D         	movff	_spi_rx_msg_buf,??_isr
  1764  001448  0EC0               	movlw	192
  1765  00144A  163D               	andwf	??_isr^0,f,c
  1766  00144C  B4D8               	btfsc	status,2,c
  1767  00144E  EF2B  F00A         	goto	i2u36_41
  1768  001452  EF2D  F00A         	goto	i2u36_40
  1769  001456                     i2u36_41:
  1770  001456  EF33  F00A         	goto	i2l1613
  1771  00145A                     i2u36_40:
  1772  00145A                     
  1773                           ;spi_test.c: 152:             SSPBUF = (0x40u | 0x2Au);
  1774  00145A  0E6A               	movlw	106
  1775  00145C  6EC9               	movwf	201,c	;volatile
  1776                           
  1777                           ;spi_test.c: 153:             spi_rx_invalid_flag = 0x01;
  1778  00145E  0E01               	movlw	1
  1779  001460  6E60               	movwf	_spi_rx_invalid_flag^0,c
  1780                           
  1781                           ;spi_test.c: 154:         } else {
  1782  001462  EF35  F00A         	goto	i2l1615
  1783  001466                     i2l1613:
  1784                           
  1785                           ;spi_test.c: 155:             SSPBUF = 0x3Bu;
  1786  001466  0E3B               	movlw	59
  1787  001468  6EC9               	movwf	201,c	;volatile
  1788  00146A                     i2l1615:
  1789                           
  1790                           ;spi_test.c: 160:         PIR1bits.SSPIF = 0;
  1791  00146A  969E               	bcf	158,3,c	;volatile
  1792  00146C                     i2l300:
  1793  00146C  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1794  00146E  0011               	retfie		f
  1795  001470                     __end_of_isr:
  1796                           	callstack 0
  1797                           
  1798                           	psect	rparam
  1799  0000                     
  1800                           	psect	temp
  1801  00006C                     btemp:
  1802                           	callstack 0
  1803  00006C                     	ds	1
  1804  0000                     int$flags	set	btemp
  1805  0000                     wtemp8	set	btemp+1
  1806  0000                     ttemp5	set	btemp+1
  1807  0000                     ttemp6	set	btemp+4
  1808  0000                     ttemp7	set	btemp+8
  1809                           
  1810                           	psect	idloc
  1811                           
  1812                           ;Config register IDLOC0 @ 0x200000
  1813                           ;	unspecified, using default values
  1814  200000                     	org	2097152
  1815  200000  FF                 	db	255
  1816                           
  1817                           ;Config register IDLOC1 @ 0x200001
  1818                           ;	unspecified, using default values
  1819  200001                     	org	2097153
  1820  200001  FF                 	db	255
  1821                           
  1822                           ;Config register IDLOC2 @ 0x200002
  1823                           ;	unspecified, using default values
  1824  200002                     	org	2097154
  1825  200002  FF                 	db	255
  1826                           
  1827                           ;Config register IDLOC3 @ 0x200003
  1828                           ;	unspecified, using default values
  1829  200003                     	org	2097155
  1830  200003  FF                 	db	255
  1831                           
  1832                           ;Config register IDLOC4 @ 0x200004
  1833                           ;	unspecified, using default values
  1834  200004                     	org	2097156
  1835  200004  FF                 	db	255
  1836                           
  1837                           ;Config register IDLOC5 @ 0x200005
  1838                           ;	unspecified, using default values
  1839  200005                     	org	2097157
  1840  200005  FF                 	db	255
  1841                           
  1842                           ;Config register IDLOC6 @ 0x200006
  1843                           ;	unspecified, using default values
  1844  200006                     	org	2097158
  1845  200006  FF                 	db	255
  1846                           
  1847                           ;Config register IDLOC7 @ 0x200007
  1848                           ;	unspecified, using default values
  1849  200007                     	org	2097159
  1850  200007  FF                 	db	255
  1851                           
  1852                           	psect	config
  1853                           
  1854                           ; Padding undefined space
  1855  300000                     	org	3145728
  1856  300000  FF                 	db	255
  1857                           
  1858                           ;Config register CONFIG1H @ 0x300001
  1859                           ;	Oscillator Selection bits
  1860                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1861                           ;	Fail-Safe Clock Monitor Enable bit
  1862                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1863                           ;	Internal/External Oscillator Switchover bit
  1864                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1865  300001                     	org	3145729
  1866  300001  06                 	db	6
  1867                           
  1868                           ;Config register CONFIG2L @ 0x300002
  1869                           ;	Power-up Timer Enable bit
  1870                           ;	PWRT = OFF, PWRT disabled
  1871                           ;	Brown-out Reset Enable bits
  1872                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1873                           ;	Brown Out Reset Voltage bits
  1874                           ;	BORV = 3, Minimum setting
  1875  300002                     	org	3145730
  1876  300002  1F                 	db	31
  1877                           
  1878                           ;Config register CONFIG2H @ 0x300003
  1879                           ;	Watchdog Timer Enable bit
  1880                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1881                           ;	Watchdog Timer Postscale Select bits
  1882                           ;	WDTPS = 32768, 1:32768
  1883  300003                     	org	3145731
  1884  300003  1E                 	db	30
  1885                           
  1886                           ; Padding undefined space
  1887  300004                     	org	3145732
  1888  300004  FF                 	db	255
  1889                           
  1890                           ;Config register CONFIG3H @ 0x300005
  1891                           ;	CCP2 MUX bit
  1892                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
  1893                           ;	PORTB A/D Enable bit
  1894                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1895                           ;	Low-Power Timer1 Oscillator Enable bit
  1896                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1897                           ;	MCLR Pin Enable bit
  1898                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1899  300005                     	org	3145733
  1900  300005  80                 	db	128
  1901                           
  1902                           ;Config register CONFIG4L @ 0x300006
  1903                           ;	Stack Full/Underflow Reset Enable bit
  1904                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1905                           ;	Single-Supply ICSP Enable bit
  1906                           ;	LVP = OFF, Single-Supply ICSP disabled
  1907                           ;	Extended Instruction Set Enable bit
  1908                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1909                           ;	Background Debugger Enable bit
  1910                           ;	DEBUG = 0x1, unprogrammed default
  1911  300006                     	org	3145734
  1912  300006  81                 	db	129
  1913                           
  1914                           ; Padding undefined space
  1915  300007                     	org	3145735
  1916  300007  FF                 	db	255
  1917                           
  1918                           ;Config register CONFIG5L @ 0x300008
  1919                           ;	Code Protection bit
  1920                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1921                           ;	Code Protection bit
  1922                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1923                           ;	Code Protection bit
  1924                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1925                           ;	Code Protection bit
  1926                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1927  300008                     	org	3145736
  1928  300008  0F                 	db	15
  1929                           
  1930                           ;Config register CONFIG5H @ 0x300009
  1931                           ;	Boot Block Code Protection bit
  1932                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1933                           ;	Data EEPROM Code Protection bit
  1934                           ;	CPD = OFF, Data EEPROM not code-protected
  1935  300009                     	org	3145737
  1936  300009  C0                 	db	192
  1937                           
  1938                           ;Config register CONFIG6L @ 0x30000A
  1939                           ;	Write Protection bit
  1940                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1941                           ;	Write Protection bit
  1942                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1943                           ;	Write Protection bit
  1944                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1945                           ;	Write Protection bit
  1946                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1947  30000A                     	org	3145738
  1948  30000A  0F                 	db	15
  1949                           
  1950                           ;Config register CONFIG6H @ 0x30000B
  1951                           ;	Configuration Register Write Protection bit
  1952                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1953                           ;	Boot Block Write Protection bit
  1954                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1955                           ;	Data EEPROM Write Protection bit
  1956                           ;	WRTD = OFF, Data EEPROM not write-protected
  1957  30000B                     	org	3145739
  1958  30000B  E0                 	db	224
  1959                           
  1960                           ;Config register CONFIG7L @ 0x30000C
  1961                           ;	Table Read Protection bit
  1962                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1963                           ;	Table Read Protection bit
  1964                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1965                           ;	Table Read Protection bit
  1966                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1967                           ;	Table Read Protection bit
  1968                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1969  30000C                     	org	3145740
  1970  30000C  0F                 	db	15
  1971                           
  1972                           ;Config register CONFIG7H @ 0x30000D
  1973                           ;	Boot Block Table Read Protection bit
  1974                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1975  30000D                     	org	3145741
  1976  30000D  40                 	db	64
  1977                           tosu	equ	0xFFF
  1978                           tosh	equ	0xFFE
  1979                           tosl	equ	0xFFD
  1980                           stkptr	equ	0xFFC
  1981                           pclatu	equ	0xFFB
  1982                           pclath	equ	0xFFA
  1983                           pcl	equ	0xFF9
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           prodh	equ	0xFF4
  1989                           prodl	equ	0xFF3
  1990                           indf0	equ	0xFEF
  1991                           postinc0	equ	0xFEE
  1992                           postdec0	equ	0xFED
  1993                           preinc0	equ	0xFEC
  1994                           plusw0	equ	0xFEB
  1995                           fsr0h	equ	0xFEA
  1996                           fsr0l	equ	0xFE9
  1997                           wreg	equ	0xFE8
  1998                           indf1	equ	0xFE7
  1999                           postinc1	equ	0xFE6
  2000                           postdec1	equ	0xFE5
  2001                           preinc1	equ	0xFE4
  2002                           plusw1	equ	0xFE3
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           bsr	equ	0xFE0
  2006                           indf2	equ	0xFDF
  2007                           postinc2	equ	0xFDE
  2008                           postdec2	equ	0xFDD
  2009                           preinc2	equ	0xFDC
  2010                           plusw2	equ	0xFDB
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    13
    Data        60
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32     107
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_set_cursor_position
    _LCD_write_data_byte_4bit->_LCD_enable_toggle
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_write_instr_byte_8bit->_LCD_enable_toggle
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit
    _LCD_write_instr_byte_4bit->_LCD_enable_toggle

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    1179
                                              8 COMRAM    24    24      0
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
             _SPI_Init_Slave_Default
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Slave_Default                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      44
                                              3 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              3     2      1     681
                                              5 COMRAM     3     2      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      66
                                              5 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      22
                                              3 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      44
                                              5 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      44
                                              3 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _SPI_Init_Slave_Default

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      6B       1       84.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B      34        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Nov 08 21:13:49 2021

                                l60 13BC                                  l61 1418  
                                l70 14BA                                  l56 1356  
                                l58 1378                                  l82 1286  
                                l59 139A                                  l76 1506  
                                l79 15D2              _transfer_complete_flag 0063  
                               l100 15AC                                 l115 1350  
                               l311 10E0                                 l184 15F2  
                               u500 12CE                                 u501 12CA  
                               u510 12E8                                 u511 12E4  
                               u520 12F8                                 u521 12F4  
                               u530 1312                                 u531 130E  
                               u460 158E                                 u540 1322  
                               u461 158A                                 u541 131E  
                               u701 1030                                 u550 1338  
                               u470 129A                                 u710 1060  
                               u551 1334                                 u471 1296  
                               u711 105C                                 u480 12AA  
                               u720 108C                                 u481 12A6  
                               u721 1088                                 u490 12BE  
                               u730 109C                                 u491 12BA  
                               u731 1098                                 u740 10D4  
                               u741 10D0                                 u750 10EE  
                               u807 14B2                                 u751 10EA  
                               u760 1114                                 u817 15A4  
                               u761 1110                                 u770 1166  
                               u907 14FE                                 u827 15CA  
                               u771 1162                                 u780 1198  
                               u917 135A                                 u837 11BE  
                               u781 1194                                 u927 1364  
                               u847 11D6                                 u937 136E  
                               u857 11EE                                 u947 137C  
                               u867 1206                                 u957 1386  
                               u877 121E                                 u797 106A  
                               u967 1390                                 u887 1230  
                               u977 139E                                 u897 1262  
                               u987 13A8                                 u997 13B2  
                               _isr 0008                                 wreg 000FE8  
                _current_entry_mode 003A                                l2201 112C  
                              l2203 1130                                l2221 1170  
                              l2213 1142                                l2205 1134  
                              l2231 1188                                l2215 1154  
                              l2207 113E                                l2151 1038  
                              l2143 1010                                l2233 1198  
                              l2217 1156                                l2161 1050  
                              l2145 1018                                l2227 1174  
                              l2219 1166                                l2171 109C  
                              l2163 1060                                l2147 101A  
                              l2229 1186                                l2181 10C2  
                              l2173 10AA                                l2165 1078  
                              l2157 103C                                l2149 1026  
                              l2239 13F2                                l2191 1102  
                              l2183 10C4                                l2167 107C  
                              l2159 104E                                l2193 1106  
                              l2185 10D4                                l2169 108C  
                              l1731 136A                                l1811 11A4  
                              l2195 1114                                l2187 10EE  
                              l2179 10AE                                l1741 13A4  
                              l1733 137A                                l1725 1352  
                              l1821 11E4                                l1813 11AC  
                              l1901 15D6                                l2197 1120  
                              l2189 10FA                                l1743 13AE  
                              l1735 1382                                l1727 1358  
                              l1831 122E                                l1823 11FC  
                              l1815 11B0                                l1911 15E4  
                              l1903 15DA                                l2199 1128  
                              l1745 13BE                                l1737 138C  
                              l1729 1360                                l1753 13DE  
                              l1761 14C6                                l1841 1252  
                              l1833 123A                                l1825 1212  
                              l1817 11B4                                l1913 15E6  
                              l1905 15DE                                l1747 13C6  
                              l1739 139C                                l1763 14C8  
                              l1851 127A                                l1843 1258  
                              l1835 1240                                l1827 1218  
                              l1819 11CC                                l1771 15B0  
                              l1915 15EA                                l1907 15E0  
                              l1749 13D0                                l1765 14DA  
                              l1853 127E                                l1845 126E  
                              l1837 1246                                l1829 1228  
                              l1781 15C0                                l1773 15B4  
                              l1861 1598                                l1917 15EC  
                              l1909 15E2                                l1767 14DE  
                              l1759 14BE                                l1855 1282  
                              l1847 1272                                l1839 124C  
                              l1783 15C4                                l1775 15B8  
                              l1863 159E                                l1871 12AE  
                              l1791 148E                                l1919 15F0  
                              l1769 14F8                                l1849 1276  
                              l1777 15BA                                l1857 157E  
                              l1881 12F8                                l1873 12BE  
                              l1793 1492                                l1785 1472  
                              l1779 15BC                                l1859 158E  
                              l1891 1338                                l1883 1302  
                              l1875 12CE                                l1867 128A  
                              l1795 14AC                                l1787 147A  
                              l1893 1344                                l1885 1312  
                              l1877 12D6                                l1869 129A  
                              l1789 147C                                l1895 134C  
                              l1887 1322                                l1879 12E8  
                              l1889 1328                                l1899 15D4  
                              ?_isr 003D                                u1007 13C0  
                              u1017 13CA                                u1027 13D4  
                              _main 1010                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 006C                                start 000E  
                      ___param_bank 000000                               ??_isr 003D  
           __end_of_LCD_Init_ECE376 1288                               ?_main 003D  
                             _CCPR1 000FBE                               _CCPR2 000FBB  
                             _T1CON 000FCD                               _T3CON 000FB1  
                             i2l300 146C                               _PORTC 000F82  
                             _PORTD 000F83                               _TRISA 000F92  
                             _TRISC 000F94                               _TRISD 000F95  
 LCD_set_cursor_position@ddram_addr 0043                               main@i 0059  
  __size_of_LCD_set_cursor_position 00CA                               tablat 000FF5  
      LCD_write_data_byte_4bit@data 0041                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 006D  
                             ttemp6 0070                               ttemp7 0074  
                             status 000FD8                               wtemp8 006D  
       LCD_set_cursor_position@line 0044                     __initialization 1544  
                      __end_of_main 11A4                              ??_main 0045  
       ??_LCD_write_instr_byte_4bit 0040         ??_LCD_write_instr_byte_8bit 0040  
                     __activetblptr 000002                              i2l1601 141C  
                            i2l1611 145A                              i2l1603 142A  
                            i2l1613 1466                              i2l1605 1438  
                            i2l1615 146A                              i2l1607 143C  
                            i2l1609 1444                              _SSPBUF 000FC9  
                _spi_rx_invalid_msg 1001                              clear_0 156A  
                  ?_LCD_Init_ECE376 003D    __end_of_LCD_write_data_byte_4bit 14BC  
                      __pdataCOMRAM 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                          __accesstop 0080  
           __end_of__initialization 1570           _LCD_write_instr_byte_4bit 14BC  
         _LCD_write_instr_byte_8bit 15AE                       ___rparam_used 000001  
                    __pcstackCOMRAM 003D                       _button1_state 005E  
                     _button2_state 005D                       _init_complete 0069  
           _LCD_set_cursor_position 1288            ??_SPI_Init_Slave_Default 003E  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
                           i2u34_40 142A                             i2u34_41 1426  
                           i2u35_40 1438                             i2u35_41 1434  
                           i2u36_40 145A                             i2u36_41 1456  
          _LCD_write_data_byte_4bit 1470                             _SSPCON1 000FC6  
                           _SSPSTAT 000FC7                             __Hparam 0000  
                           __Lparam 0000                        __psmallconst 1000  
                           __pcinit 1544                             __ramtop 1000  
                           __ptext0 1010                             __ptext1 15D4  
                           __ptext2 1470                             __ptext3 1288  
                           __ptext4 157E                             __ptext5 15AE  
                           __ptext6 11A4                             __ptext7 14BC  
                           __ptext8 1352                 _spi_rx_invalid_flag 0060  
                      __size_of_isr 1468           ??_LCD_set_cursor_position 0043  
                    __pintcode_body 141A                end_of_initialization 1570  
                     __Lmediumconst 0000                             int_func 141A  
                        _shift_mode 0068                             postdec1 000FE5  
                           postinc0 000FEE                          _slave_mode 0064  
   __size_of_SPI_Init_Slave_Default 0020                           _PORTDbits 000F83  
LCD_set_cursor_position@pos_on_line 0042                     _address_counter 0067  
                      _CURRENT_DISP 006B                           _TRISDbits 000F95  
                  _current_func_set 0039                main@init_success_msg 0047  
                 _LCD_clear_display 157E                       __pidataCOMRAM 1508  
                ?_LCD_clear_display 003D                 start_initialization 1544  
               ??_LCD_clear_display 0042                         __end_of_isr 1470  
          __size_of_LCD_Init_ECE376 00E4              _SPI_Init_Slave_Default 15D4  
         __end_of_LCD_clear_display 15AE          ??_LCD_write_data_byte_4bit 0040  
                       __pbssCOMRAM 005D                         _debug_msg_1 0011  
                       _debug_msg_2 0001                           __pintcode 0008  
                         _disp_16x2 003B                   _LCD_enable_toggle 1352  
                ?_LCD_enable_toggle 003D                         __smallconst 1000  
               ??_LCD_enable_toggle 003E                        _receive_byte 0066  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                 ??_LCD_Init_ECE376 0042                            _PIE1bits 000F9D  
                          _PIE2bits 000FA0                       _DISP_BIT_MODE 006A  
         __end_of_LCD_enable_toggle 141A                            _PIR1bits 000F9E  
        __size_of_LCD_clear_display 0030                           main@F2562 0021  
                         _spi_actor 0065                           main@i_650 005A  
                         main@i_653 005B                           main@i_654 005C  
    LCD_write_instr_byte_4bit@instr 0041                           copy_data0 1558  
    LCD_write_instr_byte_8bit@instr 0041                            __Hrparam 0000  
                          __Lrparam 0000            ?_LCD_set_cursor_position 0042  
                       _button1_msg 0034                         _button2_msg 002F  
           ?_SPI_Init_Slave_Default 003D                            _main$651 0055  
                          _main$652 0057                       __size_of_main 0194  
        __size_of_LCD_enable_toggle 00C8                            int$flags 006C  
__size_of_LCD_write_instr_byte_4bit 004C  __size_of_LCD_write_instr_byte_8bit 0026  
        ?_LCD_write_instr_byte_4bit 003D          ?_LCD_write_instr_byte_8bit 003D  
    __end_of_SPI_Init_Slave_Default 15F4                          _INTCONbits 000FF2  
                          intlevel2 0000          __end_of_spi_rx_invalid_msg 100E  
   __end_of_LCD_set_cursor_position 1352                      _spi_rx_msg_buf 0061  
 __end_of_LCD_write_instr_byte_4bit 1508   __end_of_LCD_write_instr_byte_8bit 15D4  
                   _manual_transfer 0062                     _LCD_Init_ECE376 11A4  
                       _SSPCON1bits 000FC6   __size_of_LCD_write_data_byte_4bit 004C  
         ?_LCD_write_data_byte_4bit 003D                         _spi_rx_flag 005F  
                 _current_disp_ctrl 003C  
