

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 17 11:19:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4620 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  000C02                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _current_func_set
    84  000C02  30                 	db	48
    85                           
    86                           ;initializer for _current_entry_mode
    87  000C03  06                 	db	6
    88                           
    89                           ;initializer for _disp_16x2
    90  000C04  01                 	db	1
    91                           
    92                           ;initializer for _current_disp_ctrl
    93  000C05  08                 	db	8
    94                           
    95                           	psect	nvBANK0
    96  0000AB                     __pnvBANK0:
    97                           	callstack 0
    98  0000AB                     _manual_transfer:
    99                           	callstack 0
   100  0000AB                     	ds	1
   101  0000                     _ADRES	set	4035
   102  0000                     _CCPR2	set	4027
   103  0000                     _CCPR1	set	4030
   104  0000                     _CCP2CONbits	set	4026
   105  0000                     _ADCON2bits	set	4032
   106  0000                     _TRISAbits	set	3986
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _PORTEbits	set	3972
   109  0000                     _TRISEbits	set	3990
   110  0000                     _PIR2bits	set	4001
   111  0000                     _PIR1bits	set	3998
   112  0000                     _SSPBUF	set	4041
   113  0000                     _TRISDbits	set	3989
   114  0000                     _SSPSTAT	set	4039
   115  0000                     _SSPCON1	set	4038
   116  0000                     _SSPCON1bits	set	4038
   117  0000                     _INTCON3bits	set	4080
   118  0000                     _INTCON2bits	set	4081
   119  0000                     _TRISB	set	3987
   120  0000                     _ADCON1bits	set	4033
   121  0000                     _T1CON	set	4045
   122  0000                     _TRISC	set	3988
   123  0000                     _LATDbits	set	3980
   124  0000                     _PIE2bits	set	4000
   125  0000                     _CCP2CON	set	4026
   126  0000                     _INTCONbits	set	4082
   127  0000                     _PIE1bits	set	3997
   128  0000                     _T3CON	set	4017
   129  0000                     _CCP1CON	set	4029
   130                           
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134  0009C0                     __pcinit:
   135                           	callstack 0
   136  0009C0                     start_initialization:
   137                           	callstack 0
   138  0009C0                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (4 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143  0009C0  0E02               	movlw	low __pidataCOMRAM
   144  0009C2  6EF6               	movwf	tblptrl,c
   145  0009C4  0E0C               	movlw	high __pidataCOMRAM
   146  0009C6  6EF7               	movwf	tblptrh,c
   147  0009C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148  0009CA  6EF8               	movwf	tblptru,c
   149  0009CC  EE00  F07B         	lfsr	0,__pdataCOMRAM
   150  0009D0  EE10 F004          	lfsr	1,4
   151  0009D4                     copy_data0:
   152  0009D4  0009               	tblrd		*+
   153  0009D6  CFF5 FFEE          	movff	tablat,postinc0
   154  0009DA  50E5               	movf	postdec1,w,c
   155  0009DC  50E1               	movf	fsr1l,w,c
   156  0009DE  E1FA               	bnz	copy_data0
   157                           
   158                           ; Clear objects allocated to BANK0 (43 bytes)
   159  0009E0  EE00  F080         	lfsr	0,__pbssBANK0
   160  0009E4  0E2B               	movlw	43
   161  0009E6                     clear_0:
   162  0009E6  6AEE               	clrf	postinc0,c
   163  0009E8  06E8               	decf	wreg,f,c
   164  0009EA  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to COMRAM (83 bytes)
   167  0009EC  EE00  F001         	lfsr	0,__pbssCOMRAM
   168  0009F0  0E53               	movlw	83
   169  0009F2                     clear_1:
   170  0009F2  6AEE               	clrf	postinc0,c
   171  0009F4  06E8               	decf	wreg,f,c
   172  0009F6  E1FD               	bnz	clear_1
   173  0009F8                     end_of_initialization:
   174                           	callstack 0
   175  0009F8                     __end_of__initialization:
   176                           	callstack 0
   177  0009F8  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   178  0009FA  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   179  0009FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  0009FE  6EF8               	movwf	tblptru,c
   181  000A00  0100               	movlb	0
   182  000A02  EF09  F000         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000001                     __pbssCOMRAM:
   186                           	callstack 0
   187  000001                     	ds	10
   188  00000B                     _ack_counter:
   189                           	callstack 0
   190  00000B                     	ds	2
   191  00000D                     _tx_counter:
   192                           	callstack 0
   193  00000D                     	ds	2
   194  00000F                     _eng_spd_pot_reading:
   195                           	callstack 0
   196  00000F                     	ds	2
   197  000011                     _rxbf1_received:
   198                           	callstack 0
   199  000011                     	ds	1
   200  000012                     _rxbf0_received:
   201                           	callstack 0
   202  000012                     	ds	1
   203  000013                     _msg_received:
   204                           	callstack 0
   205  000013                     	ds	1
   206  000014                     _mcp2515_txb2_reattempt_counter:
   207                           	callstack 0
   208  000014                     	ds	1
   209  000015                     _mcp2515_txb1_reattempt_counter:
   210                           	callstack 0
   211  000015                     	ds	1
   212  000016                     _mcp2515_txb0_reattempt_counter:
   213                           	callstack 0
   214  000016                     	ds	1
   215  000017                     _mcp2515_one_shot_mode:
   216                           	callstack 0
   217  000017                     	ds	1
   218  000018                     _node1_ready_to_tx:
   219                           	callstack 0
   220  000018                     	ds	1
   221  000019                     _tmr_100ms_next:
   222                           	callstack 0
   223  000019                     	ds	1
   224  00001A                     _mcp2515_interrupt_event:
   225                           	callstack 0
   226  00001A                     	ds	1
   227  00001B                     _spi_transfer_complete_flag:
   228                           	callstack 0
   229  00001B                     	ds	1
   230  00001C                     _spi_actor:
   231                           	callstack 0
   232  00001C                     	ds	1
   233  00001D                     	ds	1
   234  00001E                     _rxbf1_full:
   235                           	callstack 0
   236  00001E                     	ds	1
   237  00001F                     _rxbf0_full:
   238                           	callstack 0
   239  00001F                     	ds	1
   240  000020                     _txbf2_sent:
   241                           	callstack 0
   242  000020                     	ds	1
   243  000021                     _txbf1_sent:
   244                           	callstack 0
   245  000021                     	ds	1
   246  000022                     _txbf0_sent:
   247                           	callstack 0
   248  000022                     	ds	1
   249  000023                     _txbf2_full:
   250                           	callstack 0
   251  000023                     	ds	1
   252  000024                     _txbf1_full:
   253                           	callstack 0
   254  000024                     	ds	1
   255  000025                     _txbf0_full:
   256                           	callstack 0
   257  000025                     	ds	1
   258  000026                     	ds	1
   259  000027                     	ds	1
   260  000028                     	ds	1
   261  000029                     	ds	1
   262  00002A                     	ds	1
   263  00002B                     _node1_state_msg:
   264                           	callstack 0
   265  00002B                     	ds	17
   266  00003C                     _node1_rxbf0_msg:
   267                           	callstack 0
   268  00003C                     	ds	17
   269  00004D                     _mcp2515_canctrl_buf:
   270                           	callstack 0
   271  00004D                     	ds	1
   272  00004E                     _mcp2515_txb2ctrl_buf:
   273                           	callstack 0
   274  00004E                     	ds	1
   275  00004F                     _mcp2515_txb1ctrl_buf:
   276                           	callstack 0
   277  00004F                     	ds	1
   278  000050                     _mcp2515_txb0ctrl_buf:
   279                           	callstack 0
   280  000050                     	ds	1
   281  000051                     _mcp2515_eflg_buf:
   282                           	callstack 0
   283  000051                     	ds	1
   284  000052                     _mcp2515_intf_buf:
   285                           	callstack 0
   286  000052                     	ds	1
   287  000053                     _receive_byte:
   288                           	callstack 0
   289  000053                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292  00007B                     __pdataCOMRAM:
   293                           	callstack 0
   294  00007B                     	ds	1
   295  00007C                     	ds	1
   296  00007D                     	ds	1
   297  00007E                     	ds	1
   298                           
   299                           	psect	bssBANK0
   300  000080                     __pbssBANK0:
   301                           	callstack 0
   302  000080                     	ds	13
   303  00008D                     	ds	13
   304  00009A                     _node1_rxbf1_msg:
   305                           	callstack 0
   306  00009A                     	ds	17
   307                           
   308                           	psect	cstackCOMRAM
   309  000054                     __pcstackCOMRAM:
   310                           	callstack 0
   311  000054                     can_compose_msg_ext@msg:
   312                           	callstack 0
   313  000054                     can_parse_msg_ext@msg:
   314                           	callstack 0
   315  000054                     external_interrupts_init@trigger_edge:
   316                           	callstack 0
   317  000054                     SPI_Transfer_Byte@rx:
   318                           	callstack 0
   319  000054                     SPI_Transfer_Byte_without_CS@rx:
   320                           	callstack 0
   321  000054                     CCP1_Compare_Init_Default@comp_val:
   322                           	callstack 0
   323  000054                     CCP2_Compare_Init_Default@comp_val:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327  000054                     	ds	1
   328  000055                     ??_external_interrupts_init:
   329  000055                     can_compose_msg_ext@mcp2515_tx_buf:
   330                           	callstack 0
   331  000055                     can_parse_msg_ext@mcp2515_rx_buf:
   332                           	callstack 0
   333  000055                     SPI_Transfer_Byte@tx:
   334                           	callstack 0
   335  000055                     SPI_Transfer_Byte_without_CS@tx:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x1
   339  000055                     	ds	1
   340  000056                     ??_can_compose_msg_ext:
   341  000056                     ??_can_parse_msg_ext:
   342  000056                     mcp2515_cmd_read@buf:
   343                           	callstack 0
   344  000056                     mcp2515_cmd_write@val:
   345                           	callstack 0
   346  000056                     mcp2515_cmd_write_bit@mask:
   347                           	callstack 0
   348  000056                     mcp2515_cmd_read_rx_buf@rx_buf:
   349                           	callstack 0
   350  000056                     mcp2515_cmd_load_tx_buf@tx_buf:
   351                           	callstack 0
   352  000056                     mcp2515_cmd_rts@txb:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x2
   356  000056                     	ds	1
   357  000057                     ??_mcp2515_cmd_load_tx_buf:
   358  000057                     mcp2515_cmd_read@reg_address:
   359                           	callstack 0
   360  000057                     mcp2515_cmd_write@reg_address:
   361                           	callstack 0
   362  000057                     mcp2515_cmd_write_bit@val:
   363                           	callstack 0
   364  000057                     mcp2515_cmd_read_rx_buf@rxb:
   365                           	callstack 0
   366  000057                     external_interrupts_init@which_pin:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x3
   370  000057                     	ds	1
   371  000058                     mcp2515_current_opmode@current_opmode:
   372                           	callstack 0
   373  000058                     mcp2515_cmd_write_bit@reg_address:
   374                           	callstack 0
   375  000058                     _mcp2515_cmd_read_rx_buf$614:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x4
   379  000058                     	ds	1
   380  000059                     mcp2515_current_opmode@opmode:
   381                           	callstack 0
   382  000059                     mcp2515_cmd_read_rx_buf@i:
   383                           	callstack 0
   384  000059                     mcp2515_cmd_load_tx_buf@txb:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x5
   388  000059                     	ds	1
   389  00005A                     ??_can_init_default:
   390  00005A                     mcp2515_cmd_load_tx_buf@selected_txb:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x6
   394  00005A                     	ds	1
   395  00005B                     mcp2515_cmd_load_tx_buf@i:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x7
   399  00005B                     	ds	2
   400  00005D                     can_send@msg:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x9
   404  00005D                     	ds	1
   405  00005E                     can_send@tx_msg_buf:
   406                           	callstack 0
   407                           
   408                           ; 13 bytes @ 0xA
   409  00005E                     	ds	11
   410  000069                     can_receive@msg_buf0:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x15
   414  000069                     	ds	1
   415  00006A                     can_receive@msg_buf1:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x16
   419  00006A                     	ds	1
   420  00006B                     can_send@txbf_to_use:
   421                           	callstack 0
   422  00006B                     can_receive@rx_buf:
   423                           	callstack 0
   424                           
   425                           ; 13 bytes @ 0x17
   426  00006B                     	ds	13
   427  000078                     can_receive@return_val:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x24
   431  000078                     	ds	1
   432  000079                     ??_main:
   433                           
   434                           ; 1 bytes @ 0x25
   435  000079                     	ds	2
   436                           
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 254 in file "mcp2515_test.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:        2 bytes
   461 ;; Hardware stack levels required when called:    5
   462 ;; This function calls:
   463 ;;		_CCP1_Compare_Init_Default
   464 ;;		_CCP2_Compare_Init_Default
   465 ;;		_Timer1_Init_Default
   466 ;;		_Timer3_Init_Default
   467 ;;		_adc_init_default
   468 ;;		_can_init_default
   469 ;;		_can_receive
   470 ;;		_can_send
   471 ;;		_mcp2515_cmd_read
   472 ;;		_mcp2515_cmd_write_bit
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text0
   479  000012                     __ptext0:
   480                           	callstack 0
   481  000012                     _main:
   482                           	callstack 26
   483                           
   484                           ;mcp2515_test.c: 257:     can_init_default();
   485                           
   486                           ;incstack = 0
   487  000012  EC5B  F003         	call	_can_init_default	;wreg free
   488                           
   489                           ;mcp2515_test.c: 278:     TRISEbits.RE0 = 1u;
   490  000016  8096               	bsf	150,0,c	;volatile
   491                           
   492                           ;mcp2515_test.c: 279:     TRISEbits.RE1 = 1u;
   493  000018  8296               	bsf	150,1,c	;volatile
   494                           
   495                           ;mcp2515_test.c: 282:     Timer1_Init_Default();
   496  00001A  ECFC  F005         	call	_Timer1_Init_Default	;wreg free
   497                           
   498                           ;mcp2515_test.c: 283:     CCP1_Compare_Init_Default(62500u);
   499  00001E  0EF4               	movlw	244
   500  000020  6E55               	movwf	(CCP1_Compare_Init_Default@comp_val+1)^0,c
   501  000022  0E24               	movlw	36
   502  000024  6E54               	movwf	CCP1_Compare_Init_Default@comp_val^0,c
   503  000026  ECD6  F005         	call	_CCP1_Compare_Init_Default	;wreg free
   504                           
   505                           ;mcp2515_test.c: 286:     Timer3_Init_Default();
   506  00002A  ECF7  F005         	call	_Timer3_Init_Default	;wreg free
   507                           
   508                           ;mcp2515_test.c: 287:     CCP2_Compare_Init_Default(12500u);
   509  00002E  0E30               	movlw	48
   510  000030  6E55               	movwf	(CCP2_Compare_Init_Default@comp_val+1)^0,c
   511  000032  0ED4               	movlw	212
   512  000034  6E54               	movwf	CCP2_Compare_Init_Default@comp_val^0,c
   513  000036  ECCB  F005         	call	_CCP2_Compare_Init_Default	;wreg free
   514                           
   515                           ;mcp2515_test.c: 288:     adc_init_default();
   516  00003A  EC3D  F005         	call	_adc_init_default	;wreg free
   517                           
   518                           ;mcp2515_test.c: 293:     T1CON |= 0x01;
   519  00003E  80CD               	bsf	205,0,c	;volatile
   520                           
   521                           ;mcp2515_test.c: 294:     T3CON |= 0x01u;
   522  000040  80B1               	bsf	177,0,c	;volatile
   523                           
   524                           ;mcp2515_test.c: 295:     (INTCONbits.PEIE = 1u);
   525  000042  8CF2               	bsf	242,6,c	;volatile
   526                           
   527                           ;mcp2515_test.c: 296:     (INTCONbits.GIE = 1);
   528  000044  8EF2               	bsf	242,7,c	;volatile
   529                           
   530                           ;mcp2515_test.c: 301:     node1_state_msg.arb_field.sid = 0x001u;
   531  000046  0E00               	movlw	0
   532  000048  6E2C               	movwf	(_node1_state_msg+1)^0,c
   533  00004A  0E01               	movlw	1
   534  00004C  6E2B               	movwf	_node1_state_msg^0,c
   535                           
   536                           ;mcp2515_test.c: 302:     node1_state_msg.arb_field.eid = 0x00000u;
   537  00004E  0E00               	movlw	0
   538  000050  6E2E               	movwf	(_node1_state_msg+3)^0,c
   539  000052  0E00               	movlw	0
   540  000054  6E2F               	movwf	(_node1_state_msg+4)^0,c
   541  000056  0E00               	movlw	0
   542  000058  6E30               	movwf	(_node1_state_msg+5)^0,c
   543  00005A  0E00               	movlw	0
   544  00005C  6E31               	movwf	(_node1_state_msg+6)^0,c
   545                           
   546                           ;mcp2515_test.c: 303:     node1_state_msg.arb_field.exide = 1u;
   547  00005E  0E01               	movlw	1
   548  000060  6E2D               	movwf	(_node1_state_msg+2)^0,c
   549                           
   550                           ;mcp2515_test.c: 304:     node1_state_msg.arb_field.rtr = 0u;
   551  000062  0E00               	movlw	0
   552  000064  6E32               	movwf	(_node1_state_msg+7)^0,c
   553                           
   554                           ;mcp2515_test.c: 306:     node1_state_msg.ctrl_field.dlc = 0x8u;
   555  000066  0E08               	movlw	8
   556  000068  6E33               	movwf	(_node1_state_msg+8)^0,c
   557  00006A                     l2735:
   558                           
   559                           ;mcp2515_test.c: 312:         if(node1_ready_to_tx) {
   560  00006A  5018               	movf	_node1_ready_to_tx^0,w,c	;volatile
   561  00006C  B4D8               	btfsc	status,2,c
   562  00006E  D024               	goto	l2757
   563                           
   564                           ;mcp2515_test.c: 315:             node1_state_msg.data_field.data0 = (uint8_t) ((PORTEbi
      +                          ts.RE0<<0u) | (PORTEbits.RE1<<1u));
   565  000070  A084               	btfss	132,0,c	;volatile
   566  000072  D003               	goto	u1320
   567  000074  6A79               	clrf	??_main^0,c
   568  000076  2A79               	incf	??_main^0,f,c
   569  000078  D001               	goto	u1328
   570  00007A                     u1320:
   571  00007A  6A79               	clrf	??_main^0,c
   572  00007C                     u1328:
   573  00007C  A284               	btfss	132,1,c	;volatile
   574  00007E  D003               	goto	u1330
   575  000080  6A7A               	clrf	(??_main+1)^0,c
   576  000082  2A7A               	incf	(??_main+1)^0,f,c
   577  000084  D001               	goto	u1338
   578  000086                     u1330:
   579  000086  6A7A               	clrf	(??_main+1)^0,c
   580  000088                     u1338:
   581  000088  90D8               	bcf	status,0,c
   582  00008A  347A               	rlcf	(??_main+1)^0,w,c
   583  00008C  1079               	iorwf	??_main^0,w,c
   584  00008E  6E34               	movwf	(_node1_state_msg+9)^0,c
   585                           
   586                           ;mcp2515_test.c: 318:             node1_state_msg.data_field.data1 = (uint8_t) (eng_spd_
      +                          pot_reading & 0x00FF);
   587  000090  C00F  F035         	movff	_eng_spd_pot_reading,_node1_state_msg+10	;volatile
   588                           
   589                           ;mcp2515_test.c: 319:             node1_state_msg.data_field.data2 = (uint8_t) ((eng_spd
      +                          _pot_reading & 0xFF00) >> 8u);
   590  000094  C010  F036         	movff	_eng_spd_pot_reading+1,_node1_state_msg+11	;volatile
   591                           
   592                           ;mcp2515_test.c: 321:             node1_state_msg.data_field.data3 = (uint8_t) (tx_count
      +                          er & 0x00FF);
   593  000098  C00D  F037         	movff	_tx_counter,_node1_state_msg+12
   594                           
   595                           ;mcp2515_test.c: 322:             node1_state_msg.data_field.data4 = (uint8_t) ((tx_coun
      +                          ter & 0xFF00) >> 8u);
   596  00009C  C00E  F038         	movff	_tx_counter+1,_node1_state_msg+13
   597                           
   598                           ;mcp2515_test.c: 324:             node1_state_msg.data_field.data5 = (uint8_t) (ack_coun
      +                          ter & 0x00FF);
   599  0000A0  C00B  F039         	movff	_ack_counter,_node1_state_msg+14
   600                           
   601                           ;mcp2515_test.c: 325:             node1_state_msg.data_field.data6 = (uint8_t) ((ack_cou
      +                          nter & 0xFF00) >> 8u);
   602  0000A4  C00C  F03A         	movff	_ack_counter+1,_node1_state_msg+15
   603                           
   604                           ;mcp2515_test.c: 327:             node1_state_msg.data_field.data7 = 0x00u;
   605  0000A8  0E00               	movlw	0
   606  0000AA  6E3B               	movwf	(_node1_state_msg+16)^0,c
   607                           
   608                           ;mcp2515_test.c: 330:             can_send(&node1_state_msg);
   609  0000AC  0E2B               	movlw	low _node1_state_msg
   610  0000AE  6E5D               	movwf	can_send@msg^0,c
   611  0000B0  EC8A  F004         	call	_can_send	;wreg free
   612                           
   613                           ;mcp2515_test.c: 333:             node1_ready_to_tx = 0x00;
   614  0000B4  0E00               	movlw	0
   615  0000B6  6E18               	movwf	_node1_ready_to_tx^0,c	;volatile
   616  0000B8                     l2757:
   617                           
   618                           ;mcp2515_test.c: 338:         if(mcp2515_interrupt_event) {
   619  0000B8  501A               	movf	_mcp2515_interrupt_event^0,w,c	;volatile
   620  0000BA  B4D8               	btfsc	status,2,c
   621  0000BC  D0A1               	goto	l2845
   622                           
   623                           ;mcp2515_test.c: 341:             mcp2515_cmd_read(0x2C, &mcp2515_intf_buf);
   624  0000BE  0E52               	movlw	low _mcp2515_intf_buf
   625  0000C0  6E56               	movwf	mcp2515_cmd_read@buf^0,c
   626  0000C2  0E2C               	movlw	44
   627  0000C4  EC99  F005         	call	_mcp2515_cmd_read
   628                           
   629                           ; BSR set to: 0
   630                           ;mcp2515_test.c: 346:             if(mcp2515_intf_buf & 0x80) {
   631  0000C8  AE52               	btfss	_mcp2515_intf_buf^0,7,c
   632  0000CA  D03F               	goto	l2793
   633                           
   634                           ; BSR set to: 0
   635                           ;mcp2515_test.c: 348:                 mcp2515_cmd_read(0x0F, &mcp2515_canctrl_buf);
   636  0000CC  0E4D               	movlw	low _mcp2515_canctrl_buf
   637  0000CE  6E56               	movwf	mcp2515_cmd_read@buf^0,c
   638  0000D0  0E0F               	movlw	15
   639  0000D2  EC99  F005         	call	_mcp2515_cmd_read
   640                           
   641                           ; BSR set to: 0
   642                           ;mcp2515_test.c: 349:                 mcp2515_one_shot_mode = mcp2515_canctrl_buf & 0x08
      +                          ;
   643  0000D6  504D               	movf	_mcp2515_canctrl_buf^0,w,c
   644  0000D8  0B08               	andlw	8
   645  0000DA  6E17               	movwf	_mcp2515_one_shot_mode^0,c
   646                           
   647                           ; BSR set to: 0
   648                           ;mcp2515_test.c: 358:                 if(mcp2515_one_shot_mode) {
   649  0000DC  5017               	movf	_mcp2515_one_shot_mode^0,w,c
   650  0000DE  B4D8               	btfsc	status,2,c
   651  0000E0  D02D               	goto	l601
   652                           
   653                           ; BSR set to: 0
   654                           ;mcp2515_test.c: 360:                     mcp2515_cmd_read(0x30, &mcp2515_txb0ctrl_buf);
   655  0000E2  0E50               	movlw	low _mcp2515_txb0ctrl_buf
   656  0000E4  6E56               	movwf	mcp2515_cmd_read@buf^0,c
   657  0000E6  0E30               	movlw	48
   658  0000E8  EC99  F005         	call	_mcp2515_cmd_read
   659                           
   660                           ;mcp2515_test.c: 361:                     mcp2515_cmd_read(0x40, &mcp2515_txb1ctrl_buf);
   661  0000EC  0E4F               	movlw	low _mcp2515_txb1ctrl_buf
   662  0000EE  6E56               	movwf	mcp2515_cmd_read@buf^0,c
   663  0000F0  0E40               	movlw	64
   664  0000F2  EC99  F005         	call	_mcp2515_cmd_read
   665                           
   666                           ;mcp2515_test.c: 362:                     mcp2515_cmd_read(0x50, &mcp2515_txb2ctrl_buf);
   667  0000F6  0E4E               	movlw	low _mcp2515_txb2ctrl_buf
   668  0000F8  6E56               	movwf	mcp2515_cmd_read@buf^0,c
   669  0000FA  0E50               	movlw	80
   670  0000FC  EC99  F005         	call	_mcp2515_cmd_read
   671                           
   672                           ; BSR set to: 0
   673                           ;mcp2515_test.c: 364:                     if(mcp2515_txb0ctrl_buf & 0x10) {
   674  000100  A850               	btfss	_mcp2515_txb0ctrl_buf^0,4,c
   675  000102  D008               	goto	l595
   676                           
   677                           ; BSR set to: 0
   678                           ;mcp2515_test.c: 365:                         mcp2515_txb0_reattempt_counter++;
   679  000104  2A16               	incf	_mcp2515_txb0_reattempt_counter^0,f,c
   680                           
   681                           ; BSR set to: 0
   682                           ;mcp2515_test.c: 367:                         if(mcp2515_txb0_reattempt_counter < 4) {
   683  000106  0E04               	movlw	4
   684  000108  6016               	cpfslt	_mcp2515_txb0_reattempt_counter^0,c
   685  00010A  D004               	goto	l595
   686                           
   687                           ; BSR set to: 0
   688                           ;mcp2515_test.c: 368:                             can_send(&node1_state_msg);
   689  00010C  0E2B               	movlw	low _node1_state_msg
   690  00010E  6E5D               	movwf	can_send@msg^0,c
   691  000110  EC8A  F004         	call	_can_send	;wreg free
   692  000114                     l595:
   693                           
   694                           ;mcp2515_test.c: 374:                     if(mcp2515_txb1ctrl_buf & 0x10) {
   695  000114  A84F               	btfss	_mcp2515_txb1ctrl_buf^0,4,c
   696  000116  D008               	goto	l598
   697                           
   698                           ;mcp2515_test.c: 376:                         mcp2515_txb1_reattempt_counter++;
   699  000118  2A15               	incf	_mcp2515_txb1_reattempt_counter^0,f,c
   700                           
   701                           ;mcp2515_test.c: 378:                         if(mcp2515_txb1_reattempt_counter < 4) {
   702  00011A  0E04               	movlw	4
   703  00011C  6015               	cpfslt	_mcp2515_txb1_reattempt_counter^0,c
   704  00011E  D004               	goto	l598
   705                           
   706                           ;mcp2515_test.c: 379:                             can_send(&node1_state_msg);
   707  000120  0E2B               	movlw	low _node1_state_msg
   708  000122  6E5D               	movwf	can_send@msg^0,c
   709  000124  EC8A  F004         	call	_can_send	;wreg free
   710  000128                     l598:
   711                           
   712                           ;mcp2515_test.c: 385:                     if(mcp2515_txb2ctrl_buf & 0x10) {
   713  000128  A84E               	btfss	_mcp2515_txb2ctrl_buf^0,4,c
   714  00012A  D008               	goto	l601
   715                           
   716                           ;mcp2515_test.c: 387:                         mcp2515_txb2_reattempt_counter++;
   717  00012C  2A14               	incf	_mcp2515_txb2_reattempt_counter^0,f,c
   718                           
   719                           ;mcp2515_test.c: 389:                         if(mcp2515_txb2_reattempt_counter < 4) {
   720  00012E  0E04               	movlw	4
   721  000130  6014               	cpfslt	_mcp2515_txb2_reattempt_counter^0,c
   722  000132  D004               	goto	l601
   723                           
   724                           ;mcp2515_test.c: 390:                             can_send(&node1_state_msg);
   725  000134  0E2B               	movlw	low _node1_state_msg
   726  000136  6E5D               	movwf	can_send@msg^0,c
   727  000138  EC8A  F004         	call	_can_send	;wreg free
   728  00013C                     l601:
   729                           
   730                           ;mcp2515_test.c: 400:                 mcp2515_cmd_write_bit(0x2C, 0x80, 0x00u);
   731  00013C  0E80               	movlw	128
   732  00013E  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   733  000140  0E00               	movlw	0
   734  000142  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   735  000144  0E2C               	movlw	44
   736  000146  EC57  F005         	call	_mcp2515_cmd_write_bit
   737  00014A                     l2793:
   738                           
   739                           ; BSR set to: 0
   740                           ;mcp2515_test.c: 405:             if(mcp2515_intf_buf & 0x20) {
   741  00014A  AA52               	btfss	_mcp2515_intf_buf^0,5,c
   742  00014C  D00C               	goto	l2801
   743                           
   744                           ; BSR set to: 0
   745                           ;mcp2515_test.c: 407:                 mcp2515_cmd_read(0x2D, &mcp2515_eflg_buf);
   746  00014E  0E51               	movlw	low _mcp2515_eflg_buf
   747  000150  6E56               	movwf	mcp2515_cmd_read@buf^0,c
   748  000152  0E2D               	movlw	45
   749  000154  EC99  F005         	call	_mcp2515_cmd_read
   750                           
   751                           ; BSR set to: 0
   752                           ;mcp2515_test.c: 420:                 mcp2515_cmd_write_bit(0x2C, 0x2D, 0x00u);
   753  000158  0E2D               	movlw	45
   754  00015A  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   755  00015C  0E00               	movlw	0
   756  00015E  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   757  000160  0E2C               	movlw	44
   758  000162  EC57  F005         	call	_mcp2515_cmd_write_bit
   759  000166                     l2801:
   760                           
   761                           ; BSR set to: 0
   762                           ;mcp2515_test.c: 425:             if(mcp2515_intf_buf & 0x10) {
   763  000166  A852               	btfss	_mcp2515_intf_buf^0,4,c
   764  000168  D009               	goto	l2807
   765                           
   766                           ; BSR set to: 0
   767                           ;mcp2515_test.c: 427:                 tx_counter++;
   768  00016A  4A0D               	infsnz	_tx_counter^0,f,c
   769  00016C  2A0E               	incf	(_tx_counter+1)^0,f,c
   770                           
   771                           ; BSR set to: 0
   772                           ;mcp2515_test.c: 430:                 mcp2515_cmd_write_bit(0x2C, 0x10, 0x00u);
   773  00016E  0E10               	movlw	16
   774  000170  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   775  000172  0E00               	movlw	0
   776  000174  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   777  000176  0E2C               	movlw	44
   778  000178  EC57  F005         	call	_mcp2515_cmd_write_bit
   779  00017C                     l2807:
   780                           
   781                           ; BSR set to: 0
   782                           ;mcp2515_test.c: 432:             if(mcp2515_intf_buf & 0x08) {
   783  00017C  A652               	btfss	_mcp2515_intf_buf^0,3,c
   784  00017E  D009               	goto	l2813
   785                           
   786                           ; BSR set to: 0
   787                           ;mcp2515_test.c: 434:                 tx_counter++;
   788  000180  4A0D               	infsnz	_tx_counter^0,f,c
   789  000182  2A0E               	incf	(_tx_counter+1)^0,f,c
   790                           
   791                           ; BSR set to: 0
   792                           ;mcp2515_test.c: 437:                 mcp2515_cmd_write_bit(0x2C, 0x08, 0x00u);
   793  000184  0E08               	movlw	8
   794  000186  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   795  000188  0E00               	movlw	0
   796  00018A  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   797  00018C  0E2C               	movlw	44
   798  00018E  EC57  F005         	call	_mcp2515_cmd_write_bit
   799  000192                     l2813:
   800                           
   801                           ; BSR set to: 0
   802                           ;mcp2515_test.c: 439:             if(mcp2515_intf_buf & 0x04) {
   803  000192  A452               	btfss	_mcp2515_intf_buf^0,2,c
   804  000194  D009               	goto	l2819
   805                           
   806                           ; BSR set to: 0
   807                           ;mcp2515_test.c: 441:                 tx_counter++;
   808  000196  4A0D               	infsnz	_tx_counter^0,f,c
   809  000198  2A0E               	incf	(_tx_counter+1)^0,f,c
   810                           
   811                           ; BSR set to: 0
   812                           ;mcp2515_test.c: 444:                 mcp2515_cmd_write_bit(0x2C, 0x04, 0x00u);
   813  00019A  0E04               	movlw	4
   814  00019C  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   815  00019E  0E00               	movlw	0
   816  0001A0  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   817  0001A2  0E2C               	movlw	44
   818  0001A4  EC57  F005         	call	_mcp2515_cmd_write_bit
   819  0001A8                     l2819:
   820                           
   821                           ; BSR set to: 0
   822                           ;mcp2515_test.c: 449:             if(mcp2515_intf_buf & 0x02) {
   823  0001A8  A252               	btfss	_mcp2515_intf_buf^0,1,c
   824  0001AA  D013               	goto	l2831
   825                           
   826                           ; BSR set to: 0
   827                           ;mcp2515_test.c: 450:                 rxbf1_full = 0x01u;
   828  0001AC  0E01               	movlw	1
   829  0001AE  6E1E               	movwf	_rxbf1_full^0,c
   830                           
   831                           ; BSR set to: 0
   832                           ;mcp2515_test.c: 451:                 can_receive(&node1_rxbf0_msg, &node1_rxbf1_msg);
   833  0001B0  0E3C               	movlw	low _node1_rxbf0_msg
   834  0001B2  6E69               	movwf	can_receive@msg_buf0^0,c
   835  0001B4  0E9A               	movlw	low _node1_rxbf1_msg
   836  0001B6  6E6A               	movwf	can_receive@msg_buf1^0,c
   837  0001B8  ECDC  F003         	call	_can_receive	;wreg free
   838                           
   839                           ; BSR set to: 0
   840                           ;mcp2515_test.c: 452:                 rxbf1_received = 0x01u;
   841  0001BC  0E01               	movlw	1
   842  0001BE  6E11               	movwf	_rxbf1_received^0,c
   843                           
   844                           ; BSR set to: 0
   845                           ;mcp2515_test.c: 453:                 msg_received = 0x01u;
   846  0001C0  0E01               	movlw	1
   847  0001C2  6E13               	movwf	_msg_received^0,c
   848                           
   849                           ; BSR set to: 0
   850                           ;mcp2515_test.c: 456:                 mcp2515_cmd_write_bit(0x2C, 0x02, 0x00u);
   851  0001C4  0E02               	movlw	2
   852  0001C6  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   853  0001C8  0E00               	movlw	0
   854  0001CA  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   855  0001CC  0E2C               	movlw	44
   856  0001CE  EC57  F005         	call	_mcp2515_cmd_write_bit
   857  0001D2                     l2831:
   858                           
   859                           ; BSR set to: 0
   860                           ;mcp2515_test.c: 458:             if(mcp2515_intf_buf & 0x01) {
   861  0001D2  A052               	btfss	_mcp2515_intf_buf^0,0,c
   862  0001D4  D013               	goto	l2843
   863                           
   864                           ; BSR set to: 0
   865                           ;mcp2515_test.c: 459:                 rxbf0_full = 0x01;
   866  0001D6  0E01               	movlw	1
   867  0001D8  6E1F               	movwf	_rxbf0_full^0,c
   868                           
   869                           ; BSR set to: 0
   870                           ;mcp2515_test.c: 460:                 can_receive(&node1_rxbf0_msg, &node1_rxbf1_msg);
   871  0001DA  0E3C               	movlw	low _node1_rxbf0_msg
   872  0001DC  6E69               	movwf	can_receive@msg_buf0^0,c
   873  0001DE  0E9A               	movlw	low _node1_rxbf1_msg
   874  0001E0  6E6A               	movwf	can_receive@msg_buf1^0,c
   875  0001E2  ECDC  F003         	call	_can_receive	;wreg free
   876                           
   877                           ; BSR set to: 0
   878                           ;mcp2515_test.c: 461:                 rxbf0_received = 0x01u;
   879  0001E6  0E01               	movlw	1
   880  0001E8  6E12               	movwf	_rxbf0_received^0,c
   881                           
   882                           ; BSR set to: 0
   883                           ;mcp2515_test.c: 462:                 msg_received = 0x01u;
   884  0001EA  0E01               	movlw	1
   885  0001EC  6E13               	movwf	_msg_received^0,c
   886                           
   887                           ; BSR set to: 0
   888                           ;mcp2515_test.c: 465:                 mcp2515_cmd_write_bit(0x2C, 0x01, 0x00u);
   889  0001EE  0E01               	movlw	1
   890  0001F0  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
   891  0001F2  0E00               	movlw	0
   892  0001F4  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
   893  0001F6  0E2C               	movlw	44
   894  0001F8  EC57  F005         	call	_mcp2515_cmd_write_bit
   895  0001FC                     l2843:
   896                           
   897                           ; BSR set to: 0
   898                           ;mcp2515_test.c: 471:             mcp2515_interrupt_event = 0x00u;
   899  0001FC  0E00               	movlw	0
   900  0001FE  6E1A               	movwf	_mcp2515_interrupt_event^0,c	;volatile
   901  000200                     l2845:
   902                           
   903                           ;mcp2515_test.c: 476:         if(msg_received) {
   904  000200  5013               	movf	_msg_received^0,w,c
   905  000202  B4D8               	btfsc	status,2,c
   906  000204  D732               	goto	l2735
   907                           
   908                           ;mcp2515_test.c: 484:             if(rxbf0_received) {
   909  000206  5012               	movf	_rxbf0_received^0,w,c
   910  000208  B4D8               	btfsc	status,2,c
   911  00020A  D025               	goto	l2865
   912                           
   913                           ;mcp2515_test.c: 485:                 if( (node1_rxbf0_msg.arb_field.sid == 0x040u) && (
      +                          node1_rxbf0_msg.arb_field.eid == 0x3FABCu) ) {
   914  00020C  0E40               	movlw	64
   915  00020E  183C               	xorwf	_node1_rxbf0_msg^0,w,c
   916  000210  103D               	iorwf	(_node1_rxbf0_msg+1)^0,w,c
   917  000212  A4D8               	btfss	status,2,c
   918  000214  D010               	goto	l2857
   919  000216  0EBC               	movlw	188
   920  000218  183F               	xorwf	(_node1_rxbf0_msg+3)^0,w,c
   921  00021A  E10D               	bnz	l2857
   922  00021C  0EFA               	movlw	250
   923  00021E  1840               	xorwf	(_node1_rxbf0_msg+4)^0,w,c
   924  000220  E10A               	bnz	l2857
   925  000222  0E03               	movlw	3
   926  000224  1841               	xorwf	(_node1_rxbf0_msg+5)^0,w,c
   927  000226  1042               	iorwf	(_node1_rxbf0_msg+6)^0,w,c
   928  000228  A4D8               	btfss	status,2,c
   929  00022A  D005               	goto	l2857
   930                           
   931                           ;mcp2515_test.c: 486:                     ack_counter++;
   932  00022C  4A0B               	infsnz	_ack_counter^0,f,c
   933  00022E  2A0C               	incf	(_ack_counter+1)^0,f,c
   934  000230                     l2855:
   935                           
   936                           ;mcp2515_test.c: 487:                     rxbf0_received = 0x00u;
   937  000230  0E00               	movlw	0
   938  000232  6E12               	movwf	_rxbf0_received^0,c
   939                           
   940                           ;mcp2515_test.c: 488:                 } else if( (node1_rxbf0_msg.arb_field.sid == 0x040
      +                          u) && (node1_rxbf0_msg.arb_field.eid == 0x01010u) ) {
   941  000234  D010               	goto	l2865
   942  000236                     l2857:
   943  000236  0E40               	movlw	64
   944  000238  183C               	xorwf	_node1_rxbf0_msg^0,w,c
   945  00023A  103D               	iorwf	(_node1_rxbf0_msg+1)^0,w,c
   946  00023C  A4D8               	btfss	status,2,c
   947  00023E  D00B               	goto	l2865
   948  000240  0E10               	movlw	16
   949  000242  183F               	xorwf	(_node1_rxbf0_msg+3)^0,w,c
   950  000244  E108               	bnz	l2865
   951  000246  0E10               	movlw	16
   952  000248  1840               	xorwf	(_node1_rxbf0_msg+4)^0,w,c
   953  00024A  1041               	iorwf	(_node1_rxbf0_msg+5)^0,w,c
   954  00024C  1042               	iorwf	(_node1_rxbf0_msg+6)^0,w,c
   955  00024E  A4D8               	btfss	status,2,c
   956  000250  D002               	goto	l2865
   957                           
   958                           ;mcp2515_test.c: 489:                     (LATDbits.LATD3 ^= 0x1u);
   959  000252  768C               	btg	140,3,c	;volatile
   960  000254  D7ED               	goto	l2855
   961  000256                     l2865:
   962                           
   963                           ;mcp2515_test.c: 494:             if(rxbf1_received) {
   964  000256  5011               	movf	_rxbf1_received^0,w,c
   965  000258  B4D8               	btfsc	status,2,c
   966  00025A  D026               	goto	l2883
   967                           
   968                           ;mcp2515_test.c: 495:                 if( (node1_rxbf1_msg.arb_field.sid == 0x040u) && (
      +                          node1_rxbf1_msg.arb_field.eid == 0x3FABCu) ) {
   969  00025C  0E40               	movlw	64
   970  00025E  0100               	movlb	0	; () banked
   971  000260  199A               	xorwf	_node1_rxbf1_msg& (0+255),w,b
   972  000262  119B               	iorwf	(_node1_rxbf1_msg+1)& (0+255),w,b
   973  000264  A4D8               	btfss	status,2,c
   974  000266  D010               	goto	l2875
   975                           
   976                           ; BSR set to: 0
   977  000268  0EBC               	movlw	188
   978  00026A  199D               	xorwf	(_node1_rxbf1_msg+3)& (0+255),w,b
   979  00026C  E10D               	bnz	l2875
   980  00026E  0EFA               	movlw	250
   981  000270  199E               	xorwf	(_node1_rxbf1_msg+4)& (0+255),w,b
   982  000272  E10A               	bnz	l2875
   983  000274  0E03               	movlw	3
   984  000276  199F               	xorwf	(_node1_rxbf1_msg+5)& (0+255),w,b
   985  000278  11A0               	iorwf	(_node1_rxbf1_msg+6)& (0+255),w,b
   986  00027A  A4D8               	btfss	status,2,c
   987  00027C  D005               	goto	l2875
   988                           
   989                           ; BSR set to: 0
   990                           ;mcp2515_test.c: 496:                     ack_counter++;
   991  00027E  4A0B               	infsnz	_ack_counter^0,f,c
   992  000280  2A0C               	incf	(_ack_counter+1)^0,f,c
   993  000282                     l2873:
   994                           
   995                           ; BSR set to: 0
   996                           ;mcp2515_test.c: 497:                     rxbf1_received = 0x00u;
   997  000282  0E00               	movlw	0
   998  000284  6E11               	movwf	_rxbf1_received^0,c
   999                           
  1000                           ;mcp2515_test.c: 498:                 } else if( (node1_rxbf1_msg.arb_field.sid == 0x040
      +                          u) && (node1_rxbf1_msg.arb_field.eid == 0x01010u) ) {
  1001  000286  D010               	goto	l2883
  1002  000288                     l2875:
  1003                           
  1004                           ; BSR set to: 0
  1005  000288  0E40               	movlw	64
  1006  00028A  199A               	xorwf	_node1_rxbf1_msg& (0+255),w,b
  1007  00028C  119B               	iorwf	(_node1_rxbf1_msg+1)& (0+255),w,b
  1008  00028E  A4D8               	btfss	status,2,c
  1009  000290  D00B               	goto	l2883
  1010                           
  1011                           ; BSR set to: 0
  1012  000292  0E10               	movlw	16
  1013  000294  199D               	xorwf	(_node1_rxbf1_msg+3)& (0+255),w,b
  1014  000296  E108               	bnz	l2883
  1015  000298  0E10               	movlw	16
  1016  00029A  199E               	xorwf	(_node1_rxbf1_msg+4)& (0+255),w,b
  1017  00029C  119F               	iorwf	(_node1_rxbf1_msg+5)& (0+255),w,b
  1018  00029E  11A0               	iorwf	(_node1_rxbf1_msg+6)& (0+255),w,b
  1019  0002A0  A4D8               	btfss	status,2,c
  1020  0002A2  D002               	goto	l2883
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;mcp2515_test.c: 499:                     (LATDbits.LATD3 ^= 0x1u);
  1024  0002A4  768C               	btg	140,3,c	;volatile
  1025  0002A6  D7ED               	goto	l2873
  1026  0002A8                     l2883:
  1027                           
  1028                           ;mcp2515_test.c: 504:             msg_received = 0x00u;
  1029  0002A8  0E00               	movlw	0
  1030  0002AA  6E13               	movwf	_msg_received^0,c
  1031  0002AC  D6DE               	goto	l2735
  1032  0002AE                     __end_of_main:
  1033                           	callstack 0
  1034                           
  1035 ;; *************** function _can_send *****************
  1036 ;; Defined at:
  1037 ;;		line 600 in file "src/mcp2515.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  msg             1    9[COMRAM] PTR struct .
  1040 ;;		 -> node1_state_msg(17), 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  tx_msg_buf     13   10[COMRAM] unsigned char [13]
  1043 ;;  txbf_to_use     1   23[COMRAM] enum E2485
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      unsigned char 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;Total ram usage:       15 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    3
  1060 ;; This function calls:
  1061 ;;		_can_compose_msg_ext
  1062 ;;		_mcp2515_cmd_load_tx_buf
  1063 ;;		_mcp2515_cmd_rts
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text1
  1070  000914                     __ptext1:
  1071                           	callstack 0
  1072  000914                     _can_send:
  1073                           	callstack 27
  1074                           
  1075                           ;src/mcp2515.c: 602:     uint8_t tx_msg_buf[13u] = {0u};
  1076                           
  1077                           ;incstack = 0
  1078  000914  EE20  F05E         	lfsr	2,can_send@tx_msg_buf
  1079  000918  0E0C               	movlw	12
  1080  00091A                     u1241:
  1081  00091A  6ADE               	clrf	postinc2,c
  1082  00091C  06E8               	decf	wreg,f,c
  1083  00091E  E2FD               	bc	u1241
  1084                           
  1085                           ;src/mcp2515.c: 603:     can_compose_msg_ext(msg, tx_msg_buf);
  1086  000920  C05D  F054         	movff	can_send@msg,can_compose_msg_ext@msg
  1087  000924  0E5E               	movlw	low can_send@tx_msg_buf
  1088  000926  6E55               	movwf	can_compose_msg_ext@mcp2515_tx_buf^0,c
  1089  000928  EC67  F002         	call	_can_compose_msg_ext	;wreg free
  1090                           
  1091                           ;src/mcp2515.c: 609:     txbuf_t txbf_to_use = TXB0;
  1092  00092C  0E01               	movlw	1
  1093  00092E  6E6B               	movwf	can_send@txbf_to_use^0,c
  1094                           
  1095                           ;src/mcp2515.c: 610:     if(txbf0_full){
  1096  000930  5025               	movf	_txbf0_full^0,w,c
  1097  000932  B4D8               	btfsc	status,2,c
  1098  000934  D010               	goto	l2659
  1099                           
  1100                           ;src/mcp2515.c: 611:         if(txbf1_full){
  1101  000936  5024               	movf	_txbf1_full^0,w,c
  1102  000938  B4D8               	btfsc	status,2,c
  1103  00093A  D008               	goto	l2657
  1104                           
  1105                           ;src/mcp2515.c: 612:             if(txbf2_full){
  1106  00093C  5023               	movf	_txbf2_full^0,w,c
  1107  00093E  A4D8               	btfss	status,2,c
  1108  000940  0012               	return	
  1109                           
  1110                           ;src/mcp2515.c: 616:                 txbf_to_use = TXB2;
  1111  000942  0E04               	movlw	4
  1112  000944  6E6B               	movwf	can_send@txbf_to_use^0,c
  1113                           
  1114                           ;src/mcp2515.c: 617:                 txbf2_full = 0x01u;
  1115  000946  0E01               	movlw	1
  1116  000948  6E23               	movwf	_txbf2_full^0,c
  1117  00094A  D007               	goto	l2661
  1118  00094C                     l2657:
  1119                           
  1120                           ;src/mcp2515.c: 620:             txbf_to_use = TXB1;
  1121  00094C  0E02               	movlw	2
  1122  00094E  6E6B               	movwf	can_send@txbf_to_use^0,c
  1123                           
  1124                           ;src/mcp2515.c: 621:             txbf1_full = 0x01u;
  1125  000950  0E01               	movlw	1
  1126  000952  6E24               	movwf	_txbf1_full^0,c
  1127  000954  D002               	goto	l2661
  1128  000956                     l2659:
  1129                           
  1130                           ;src/mcp2515.c: 624:         txbf0_full = 0x01u;
  1131  000956  0E01               	movlw	1
  1132  000958  6E25               	movwf	_txbf0_full^0,c
  1133  00095A                     l2661:
  1134                           
  1135                           ;src/mcp2515.c: 628:     mcp2515_cmd_load_tx_buf(txbf_to_use, tx_msg_buf);
  1136  00095A  0E5E               	movlw	low can_send@tx_msg_buf
  1137  00095C  6E56               	movwf	mcp2515_cmd_load_tx_buf@tx_buf^0,c
  1138  00095E  506B               	movf	can_send@txbf_to_use^0,w,c
  1139  000960  EC58  F004         	call	_mcp2515_cmd_load_tx_buf
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;src/mcp2515.c: 631:     mcp2515_cmd_rts(txbf_to_use);
  1143  000964  506B               	movf	can_send@txbf_to_use^0,w,c
  1144  000966  ECE1  F005         	call	_mcp2515_cmd_rts
  1145  00096A  0012               	return		;funcret
  1146  00096C                     __end_of_can_send:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _mcp2515_cmd_rts *****************
  1150 ;; Defined at:
  1151 ;;		line 469 in file "src/mcp2515.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  txb             1    wreg     enum E2485
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  txb             1    2[COMRAM] enum E2485
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 3F/0
  1162 ;;		On exit  : 3F/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        1 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    2
  1172 ;; This function calls:
  1173 ;;		_SPI_Transfer_Byte
  1174 ;; This function is called by:
  1175 ;;		_can_send
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text2
  1180  000BC2                     __ptext2:
  1181                           	callstack 0
  1182  000BC2                     _mcp2515_cmd_rts:
  1183                           	callstack 27
  1184                           
  1185                           ;incstack = 0
  1186                           ;mcp2515_cmd_rts@txb stored from wreg
  1187  000BC2  6E56               	movwf	mcp2515_cmd_rts@txb^0,c
  1188                           
  1189                           ;src/mcp2515.c: 470:     SPI_Transfer_Byte((0x8 | (txb)), &receive_byte);
  1190  000BC4  0E53               	movlw	low _receive_byte
  1191  000BC6  6E54               	movwf	SPI_Transfer_Byte@rx^0,c
  1192  000BC8  5056               	movf	mcp2515_cmd_rts@txb^0,w,c
  1193  000BCA  0908               	iorlw	8
  1194  000BCC  EC21  F005         	call	_SPI_Transfer_Byte
  1195                           
  1196                           ; BSR set to: 0
  1197  000BD0  0012               	return		;funcret
  1198  000BD2                     __end_of_mcp2515_cmd_rts:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _mcp2515_cmd_load_tx_buf *****************
  1202 ;; Defined at:
  1203 ;;		line 432 in file "src/mcp2515.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  txb             1    wreg     enum E2485
  1206 ;;  tx_buf          1    2[COMRAM] PTR unsigned char 
  1207 ;;		 -> can_send@tx_msg_buf(13), 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  txb             1    5[COMRAM] enum E2485
  1210 ;;  i               1    7[COMRAM] unsigned char 
  1211 ;;  selected_txb    1    6[COMRAM] enum E2477
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 3F/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        6 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    2
  1228 ;; This function calls:
  1229 ;;		_SPI_Transfer_Byte_without_CS
  1230 ;; This function is called by:
  1231 ;;		_can_send
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text3
  1236  0008B0                     __ptext3:
  1237                           	callstack 0
  1238  0008B0                     _mcp2515_cmd_load_tx_buf:
  1239                           	callstack 27
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;incstack = 0
  1243                           ;mcp2515_cmd_load_tx_buf@txb stored from wreg
  1244  0008B0  6E59               	movwf	mcp2515_cmd_load_tx_buf@txb^0,c
  1245                           
  1246                           ;src/mcp2515.c: 433:     spi_load_txb_inst_t selected_txb;;src/mcp2515.c: 436:     switc
      +                          h(txb){
  1247  0008B2  D007               	goto	l2573
  1248  0008B4                     l2565:
  1249                           
  1250                           ;src/mcp2515.c: 438:             selected_txb = SPI_LOAD_TXB0_ID;
  1251  0008B4  0E00               	movlw	0
  1252  0008B6  D003               	goto	L2
  1253  0008B8                     l2567:
  1254                           
  1255                           ;src/mcp2515.c: 441:             selected_txb = SPI_LOAD_TXB1_ID;
  1256  0008B8  0E02               	movlw	2
  1257  0008BA  D001               	goto	L2
  1258  0008BC                     l2569:
  1259                           
  1260                           ;src/mcp2515.c: 444:             selected_txb = SPI_LOAD_TXB2_ID;
  1261  0008BC  0E04               	movlw	4
  1262  0008BE                     L2:
  1263  0008BE  6E5A               	movwf	mcp2515_cmd_load_tx_buf@selected_txb^0,c
  1264                           
  1265                           ;src/mcp2515.c: 445:             break;
  1266  0008C0  D011               	goto	l321
  1267  0008C2                     l2573:
  1268  0008C2  5059               	movf	mcp2515_cmd_load_tx_buf@txb^0,w,c
  1269  0008C4  6E57               	movwf	??_mcp2515_cmd_load_tx_buf^0,c
  1270  0008C6  6A58               	clrf	(??_mcp2515_cmd_load_tx_buf+1)^0,c
  1271                           
  1272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1273                           ; Switch size 1, requested type "simple"
  1274                           ; Number of cases is 1, Range of values is 0 to 0
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte            4     3 (average)
  1278                           ;	Chosen strategy is simple_byte
  1279  0008C8  5058               	movf	(??_mcp2515_cmd_load_tx_buf+1)^0,w,c
  1280  0008CA  0A00               	xorlw	0	; case 0
  1281  0008CC  A4D8               	btfss	status,2,c
  1282  0008CE  D00A               	goto	l321
  1283                           
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 3, Range of values is 1 to 4
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte           10     6 (average)
  1289                           ;	Chosen strategy is simple_byte
  1290  0008D0  5057               	movf	??_mcp2515_cmd_load_tx_buf^0,w,c
  1291  0008D2  0A01               	xorlw	1	; case 1
  1292  0008D4  B4D8               	btfsc	status,2,c
  1293  0008D6  D7EE               	goto	l2565
  1294  0008D8  0A03               	xorlw	3	; case 2
  1295  0008DA  B4D8               	btfsc	status,2,c
  1296  0008DC  D7ED               	goto	l2567
  1297  0008DE  0A06               	xorlw	6	; case 4
  1298  0008E0  B4D8               	btfsc	status,2,c
  1299  0008E2  D7EC               	goto	l2569
  1300  0008E4                     l321:
  1301                           
  1302                           ;src/mcp2515.c: 448:     LATDbits.LATD2 = 0;
  1303  0008E4  948C               	bcf	140,2,c	;volatile
  1304                           
  1305                           ;src/mcp2515.c: 452:     SPI_Transfer_Byte_without_CS((0x40 | (selected_txb)), &receive_
      +                          byte);
  1306  0008E6  0E53               	movlw	low _receive_byte
  1307  0008E8  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  1308  0008EA  505A               	movf	mcp2515_cmd_load_tx_buf@selected_txb^0,w,c
  1309  0008EC  0940               	iorlw	64
  1310  0008EE  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;src/mcp2515.c: 454:     for(uint8_t i=0; i<13u; i++) SPI_Transfer_Byte_without_CS(tx_bu
      +                          f[i], &receive_byte);
  1314  0008F2  0E00               	movlw	0
  1315  0008F4  6E5B               	movwf	mcp2515_cmd_load_tx_buf@i^0,c
  1316  0008F6                     l2583:
  1317                           
  1318                           ; BSR set to: 0
  1319  0008F6  0E53               	movlw	low _receive_byte
  1320  0008F8  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  1321  0008FA  5056               	movf	mcp2515_cmd_load_tx_buf@tx_buf^0,w,c
  1322  0008FC  245B               	addwf	mcp2515_cmd_load_tx_buf@i^0,w,c
  1323  0008FE  6ED9               	movwf	fsr2l,c
  1324  000900  6ADA               	clrf	fsr2h,c
  1325  000902  50DF               	movf	indf2,w,c
  1326  000904  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  1327                           
  1328                           ; BSR set to: 0
  1329  000908  2A5B               	incf	mcp2515_cmd_load_tx_buf@i^0,f,c
  1330                           
  1331                           ; BSR set to: 0
  1332  00090A  0E0C               	movlw	12
  1333  00090C  645B               	cpfsgt	mcp2515_cmd_load_tx_buf@i^0,c
  1334  00090E  D7F3               	goto	l2583
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;src/mcp2515.c: 456:     LATDbits.LATD2 = 1;
  1338  000910  848C               	bsf	140,2,c	;volatile
  1339                           
  1340                           ; BSR set to: 0
  1341  000912  0012               	return		;funcret
  1342  000914                     __end_of_mcp2515_cmd_load_tx_buf:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _can_compose_msg_ext *****************
  1346 ;; Defined at:
  1347 ;;		line 515 in file "src/mcp2515.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  msg             1    0[COMRAM] PTR struct .
  1350 ;;		 -> node1_state_msg(17), 
  1351 ;;  mcp2515_tx_b    1    1[COMRAM] PTR unsigned char 
  1352 ;;		 -> can_send@tx_msg_buf(13), 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        9 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_can_send
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text4
  1379  0004CE                     __ptext4:
  1380                           	callstack 0
  1381  0004CE                     _can_compose_msg_ext:
  1382                           	callstack 28
  1383                           
  1384                           ;src/mcp2515.c: 518:     mcp2515_tx_buf[0] = (uint8_t) ( (msg->arb_field.sid & 0x07F8u) 
      +                          >> 3u );
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;incstack = 0
  1388  0004CE  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1389  0004D0  6ED9               	movwf	fsr2l,c
  1390  0004D2  6ADA               	clrf	fsr2h,c
  1391  0004D4  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1392  0004D6  6EE1               	movwf	fsr1l,c
  1393  0004D8  6AE2               	clrf	fsr1h,c
  1394  0004DA  CFE6 F056          	movff	postinc1,??_can_compose_msg_ext
  1395  0004DE  CFE5 F057          	movff	postdec1,??_can_compose_msg_ext+1
  1396  0004E2  90D8               	bcf	status,0,c
  1397  0004E4  3257               	rrcf	(??_can_compose_msg_ext+1)^0,f,c
  1398  0004E6  3256               	rrcf	??_can_compose_msg_ext^0,f,c
  1399  0004E8  90D8               	bcf	status,0,c
  1400  0004EA  3257               	rrcf	(??_can_compose_msg_ext+1)^0,f,c
  1401  0004EC  3256               	rrcf	??_can_compose_msg_ext^0,f,c
  1402  0004EE  90D8               	bcf	status,0,c
  1403  0004F0  3257               	rrcf	(??_can_compose_msg_ext+1)^0,f,c
  1404  0004F2  3256               	rrcf	??_can_compose_msg_ext^0,f,c
  1405  0004F4  5056               	movf	??_can_compose_msg_ext^0,w,c
  1406  0004F6  6EDF               	movwf	indf2,c
  1407                           
  1408                           ;src/mcp2515.c: 519:     mcp2515_tx_buf[1] = (uint8_t) ( ((uint32_t)(msg->arb_field.sid 
      +                          & 0x0007u) << 5u) |
  1409  0004F8  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1410  0004FA  6ED9               	movwf	fsr2l,c
  1411  0004FC  6ADA               	clrf	fsr2h,c
  1412  0004FE  0E01               	movlw	1
  1413  000500  26D9               	addwf	fsr2l,f,c
  1414  000502  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1415  000504  6EE1               	movwf	fsr1l,c
  1416  000506  6AE2               	clrf	fsr1h,c
  1417  000508  0E03               	movlw	3
  1418  00050A  26E1               	addwf	fsr1l,f,c
  1419  00050C  CFE6 F056          	movff	postinc1,??_can_compose_msg_ext
  1420  000510  CFE6 F057          	movff	postinc1,??_can_compose_msg_ext+1
  1421  000514  CFE6 F058          	movff	postinc1,??_can_compose_msg_ext+2
  1422  000518  CFE6 F059          	movff	postinc1,??_can_compose_msg_ext+3
  1423  00051C  0E11               	movlw	17
  1424  00051E  D005               	goto	u740
  1425  000520                     u745:
  1426  000520  90D8               	bcf	status,0,c
  1427  000522  3259               	rrcf	(??_can_compose_msg_ext+3)^0,f,c
  1428  000524  3258               	rrcf	(??_can_compose_msg_ext+2)^0,f,c
  1429  000526  3257               	rrcf	(??_can_compose_msg_ext+1)^0,f,c
  1430  000528  3256               	rrcf	??_can_compose_msg_ext^0,f,c
  1431  00052A                     u740:
  1432  00052A  2EE8               	decfsz	wreg,f,c
  1433  00052C  D7F9               	goto	u745
  1434  00052E  0E03               	movlw	3
  1435  000530  1656               	andwf	??_can_compose_msg_ext^0,f,c
  1436  000532  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1437  000534  6EE1               	movwf	fsr1l,c
  1438  000536  6AE2               	clrf	fsr1h,c
  1439  000538  0E02               	movlw	2
  1440  00053A  26E1               	addwf	fsr1l,f,c
  1441  00053C  50E7               	movf	indf1,w,c
  1442  00053E  6E5A               	movwf	(??_can_compose_msg_ext+4)^0,c
  1443  000540  90D8               	bcf	status,0,c
  1444  000542  365A               	rlcf	(??_can_compose_msg_ext+4)^0,f,c
  1445  000544  90D8               	bcf	status,0,c
  1446  000546  365A               	rlcf	(??_can_compose_msg_ext+4)^0,f,c
  1447  000548  90D8               	bcf	status,0,c
  1448  00054A  365A               	rlcf	(??_can_compose_msg_ext+4)^0,f,c
  1449  00054C  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1450  00054E  6EE1               	movwf	fsr1l,c
  1451  000550  6AE2               	clrf	fsr1h,c
  1452  000552  50E7               	movf	indf1,w,c
  1453  000554  6E5B               	movwf	(??_can_compose_msg_ext+5)^0,c
  1454  000556  0E07               	movlw	7
  1455  000558  165B               	andwf	(??_can_compose_msg_ext+5)^0,f,c
  1456  00055A  0E05               	movlw	5
  1457  00055C  6E5C               	movwf	(??_can_compose_msg_ext+6)^0,c
  1458  00055E                     u755:
  1459  00055E  90D8               	bcf	status,0,c
  1460  000560  365B               	rlcf	(??_can_compose_msg_ext+5)^0,f,c
  1461  000562  2E5C               	decfsz	(??_can_compose_msg_ext+6)^0,f,c
  1462  000564  D7FC               	goto	u755
  1463  000566  505B               	movf	(??_can_compose_msg_ext+5)^0,w,c
  1464  000568  105A               	iorwf	(??_can_compose_msg_ext+4)^0,w,c
  1465  00056A  1056               	iorwf	??_can_compose_msg_ext^0,w,c
  1466  00056C  6EDF               	movwf	indf2,c
  1467                           
  1468                           ;src/mcp2515.c: 522:     mcp2515_tx_buf[2] = (uint8_t) ( (msg->arb_field.eid & 0x0FF00) 
      +                          >> 8u );
  1469  00056E  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1470  000570  6ED9               	movwf	fsr2l,c
  1471  000572  6ADA               	clrf	fsr2h,c
  1472  000574  0E02               	movlw	2
  1473  000576  26D9               	addwf	fsr2l,f,c
  1474  000578  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1475  00057A  6EE1               	movwf	fsr1l,c
  1476  00057C  6AE2               	clrf	fsr1h,c
  1477  00057E  0E03               	movlw	3
  1478  000580  26E1               	addwf	fsr1l,f,c
  1479  000582  CFE6 F056          	movff	postinc1,??_can_compose_msg_ext
  1480  000586  CFE6 F057          	movff	postinc1,??_can_compose_msg_ext+1
  1481  00058A  CFE6 F058          	movff	postinc1,??_can_compose_msg_ext+2
  1482  00058E  CFE6 F059          	movff	postinc1,??_can_compose_msg_ext+3
  1483  000592  C057  F056         	movff	??_can_compose_msg_ext+1,??_can_compose_msg_ext
  1484  000596  C058  F057         	movff	??_can_compose_msg_ext+2,??_can_compose_msg_ext+1
  1485  00059A  C059  F058         	movff	??_can_compose_msg_ext+3,??_can_compose_msg_ext+2
  1486  00059E  6A59               	clrf	(??_can_compose_msg_ext+3)^0,c
  1487  0005A0  5056               	movf	??_can_compose_msg_ext^0,w,c
  1488  0005A2  6EDF               	movwf	indf2,c
  1489                           
  1490                           ;src/mcp2515.c: 523:     mcp2515_tx_buf[3] = (uint8_t) (msg->arb_field.eid & 0x000FF);
  1491  0005A4  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1492  0005A6  6ED9               	movwf	fsr2l,c
  1493  0005A8  6ADA               	clrf	fsr2h,c
  1494  0005AA  0E03               	movlw	3
  1495  0005AC  26D9               	addwf	fsr2l,f,c
  1496  0005AE  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1497  0005B0  6EE1               	movwf	fsr1l,c
  1498  0005B2  6AE2               	clrf	fsr1h,c
  1499  0005B4  0E03               	movlw	3
  1500  0005B6  26E1               	addwf	fsr1l,f,c
  1501  0005B8  CFDF FFE7          	movff	indf2,indf1
  1502                           
  1503                           ;src/mcp2515.c: 524:     mcp2515_tx_buf[4] = (uint8_t) ( (msg->arb_field.rtr << 6u) |
  1504  0005BC  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1505  0005BE  6ED9               	movwf	fsr2l,c
  1506  0005C0  6ADA               	clrf	fsr2h,c
  1507  0005C2  0E04               	movlw	4
  1508  0005C4  26D9               	addwf	fsr2l,f,c
  1509  0005C6  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1510  0005C8  6EE1               	movwf	fsr1l,c
  1511  0005CA  6AE2               	clrf	fsr1h,c
  1512  0005CC  0E08               	movlw	8
  1513  0005CE  26E1               	addwf	fsr1l,f,c
  1514  0005D0  50E7               	movf	indf1,w,c
  1515  0005D2  6E56               	movwf	??_can_compose_msg_ext^0,c
  1516  0005D4  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1517  0005D6  6EE1               	movwf	fsr1l,c
  1518  0005D8  6AE2               	clrf	fsr1h,c
  1519  0005DA  0E07               	movlw	7
  1520  0005DC  26E1               	addwf	fsr1l,f,c
  1521  0005DE  50E7               	movf	indf1,w,c
  1522  0005E0  6E57               	movwf	(??_can_compose_msg_ext+1)^0,c
  1523  0005E2  0E06               	movlw	6
  1524  0005E4  6E58               	movwf	(??_can_compose_msg_ext+2)^0,c
  1525  0005E6                     u765:
  1526  0005E6  90D8               	bcf	status,0,c
  1527  0005E8  3657               	rlcf	(??_can_compose_msg_ext+1)^0,f,c
  1528  0005EA  2E58               	decfsz	(??_can_compose_msg_ext+2)^0,f,c
  1529  0005EC  D7FC               	goto	u765
  1530  0005EE  5057               	movf	(??_can_compose_msg_ext+1)^0,w,c
  1531  0005F0  1056               	iorwf	??_can_compose_msg_ext^0,w,c
  1532  0005F2  6EDF               	movwf	indf2,c
  1533                           
  1534                           ;src/mcp2515.c: 526:     mcp2515_tx_buf[5] = msg->data_field.data0;
  1535  0005F4  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1536  0005F6  6ED9               	movwf	fsr2l,c
  1537  0005F8  6ADA               	clrf	fsr2h,c
  1538  0005FA  0E09               	movlw	9
  1539  0005FC  26D9               	addwf	fsr2l,f,c
  1540  0005FE  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1541  000600  6EE1               	movwf	fsr1l,c
  1542  000602  6AE2               	clrf	fsr1h,c
  1543  000604  0E05               	movlw	5
  1544  000606  26E1               	addwf	fsr1l,f,c
  1545  000608  CFDF FFE7          	movff	indf2,indf1
  1546                           
  1547                           ;src/mcp2515.c: 527:     mcp2515_tx_buf[6] = msg->data_field.data1;
  1548  00060C  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1549  00060E  6ED9               	movwf	fsr2l,c
  1550  000610  6ADA               	clrf	fsr2h,c
  1551  000612  0E0A               	movlw	10
  1552  000614  26D9               	addwf	fsr2l,f,c
  1553  000616  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1554  000618  6EE1               	movwf	fsr1l,c
  1555  00061A  6AE2               	clrf	fsr1h,c
  1556  00061C  0E06               	movlw	6
  1557  00061E  26E1               	addwf	fsr1l,f,c
  1558  000620  CFDF FFE7          	movff	indf2,indf1
  1559                           
  1560                           ;src/mcp2515.c: 528:     mcp2515_tx_buf[7] = msg->data_field.data2;
  1561  000624  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1562  000626  6ED9               	movwf	fsr2l,c
  1563  000628  6ADA               	clrf	fsr2h,c
  1564  00062A  0E0B               	movlw	11
  1565  00062C  26D9               	addwf	fsr2l,f,c
  1566  00062E  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1567  000630  6EE1               	movwf	fsr1l,c
  1568  000632  6AE2               	clrf	fsr1h,c
  1569  000634  0E07               	movlw	7
  1570  000636  26E1               	addwf	fsr1l,f,c
  1571  000638  CFDF FFE7          	movff	indf2,indf1
  1572                           
  1573                           ;src/mcp2515.c: 529:     mcp2515_tx_buf[8] = msg->data_field.data3;
  1574  00063C  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1575  00063E  6ED9               	movwf	fsr2l,c
  1576  000640  6ADA               	clrf	fsr2h,c
  1577  000642  0E0C               	movlw	12
  1578  000644  26D9               	addwf	fsr2l,f,c
  1579  000646  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1580  000648  6EE1               	movwf	fsr1l,c
  1581  00064A  6AE2               	clrf	fsr1h,c
  1582  00064C  0E08               	movlw	8
  1583  00064E  26E1               	addwf	fsr1l,f,c
  1584  000650  CFDF FFE7          	movff	indf2,indf1
  1585                           
  1586                           ;src/mcp2515.c: 530:     mcp2515_tx_buf[9] = msg->data_field.data4;
  1587  000654  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1588  000656  6ED9               	movwf	fsr2l,c
  1589  000658  6ADA               	clrf	fsr2h,c
  1590  00065A  0E0D               	movlw	13
  1591  00065C  26D9               	addwf	fsr2l,f,c
  1592  00065E  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1593  000660  6EE1               	movwf	fsr1l,c
  1594  000662  6AE2               	clrf	fsr1h,c
  1595  000664  0E09               	movlw	9
  1596  000666  26E1               	addwf	fsr1l,f,c
  1597  000668  CFDF FFE7          	movff	indf2,indf1
  1598                           
  1599                           ;src/mcp2515.c: 531:     mcp2515_tx_buf[10] = msg->data_field.data5;
  1600  00066C  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1601  00066E  6ED9               	movwf	fsr2l,c
  1602  000670  6ADA               	clrf	fsr2h,c
  1603  000672  0E0E               	movlw	14
  1604  000674  26D9               	addwf	fsr2l,f,c
  1605  000676  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1606  000678  6EE1               	movwf	fsr1l,c
  1607  00067A  6AE2               	clrf	fsr1h,c
  1608  00067C  0E0A               	movlw	10
  1609  00067E  26E1               	addwf	fsr1l,f,c
  1610  000680  CFDF FFE7          	movff	indf2,indf1
  1611                           
  1612                           ;src/mcp2515.c: 532:     mcp2515_tx_buf[11] = msg->data_field.data6;
  1613  000684  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1614  000686  6ED9               	movwf	fsr2l,c
  1615  000688  6ADA               	clrf	fsr2h,c
  1616  00068A  0E0F               	movlw	15
  1617  00068C  26D9               	addwf	fsr2l,f,c
  1618  00068E  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1619  000690  6EE1               	movwf	fsr1l,c
  1620  000692  6AE2               	clrf	fsr1h,c
  1621  000694  0E0B               	movlw	11
  1622  000696  26E1               	addwf	fsr1l,f,c
  1623  000698  CFDF FFE7          	movff	indf2,indf1
  1624                           
  1625                           ;src/mcp2515.c: 533:     mcp2515_tx_buf[12] = msg->data_field.data7;
  1626  00069C  5054               	movf	can_compose_msg_ext@msg^0,w,c
  1627  00069E  6ED9               	movwf	fsr2l,c
  1628  0006A0  6ADA               	clrf	fsr2h,c
  1629  0006A2  0E10               	movlw	16
  1630  0006A4  26D9               	addwf	fsr2l,f,c
  1631  0006A6  5055               	movf	can_compose_msg_ext@mcp2515_tx_buf^0,w,c
  1632  0006A8  6EE1               	movwf	fsr1l,c
  1633  0006AA  6AE2               	clrf	fsr1h,c
  1634  0006AC  0E0C               	movlw	12
  1635  0006AE  26E1               	addwf	fsr1l,f,c
  1636  0006B0  CFDF FFE7          	movff	indf2,indf1
  1637  0006B4  0012               	return		;funcret
  1638  0006B6                     __end_of_can_compose_msg_ext:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _can_receive *****************
  1642 ;; Defined at:
  1643 ;;		line 649 in file "src/mcp2515.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  msg_buf0        1   21[COMRAM] PTR struct .
  1646 ;;		 -> node1_rxbf0_msg(17), 
  1647 ;;  msg_buf1        1   22[COMRAM] PTR struct .
  1648 ;;		 -> node1_rxbf1_msg(17), 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  rx_buf         13   23[COMRAM] unsigned char [13]
  1651 ;;  return_val      1   36[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 3F/0
  1658 ;;		On exit  : 3F/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:       16 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		_can_parse_msg_ext
  1670 ;;		_mcp2515_cmd_read_rx_buf
  1671 ;;		_mcp2515_cmd_write_bit
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text5
  1678  0007B8                     __ptext5:
  1679                           	callstack 0
  1680  0007B8                     _can_receive:
  1681                           	callstack 27
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;src/mcp2515.c: 650:     uint8_t return_val = 0x00;
  1685                           
  1686                           ;incstack = 0
  1687  0007B8  0E00               	movlw	0
  1688  0007BA  6E78               	movwf	can_receive@return_val^0,c
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;src/mcp2515.c: 651:     uint8_t rx_buf[13u] = {0};
  1692  0007BC  EE20  F06B         	lfsr	2,can_receive@rx_buf
  1693  0007C0  0E0C               	movlw	12
  1694  0007C2                     u1281:
  1695  0007C2  6ADE               	clrf	postinc2,c
  1696  0007C4  06E8               	decf	wreg,f,c
  1697  0007C6  E2FD               	bc	u1281
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;src/mcp2515.c: 654:     if(rxbf0_full) {
  1701  0007C8  501F               	movf	_rxbf0_full^0,w,c
  1702  0007CA  B4D8               	btfsc	status,2,c
  1703  0007CC  D01C               	goto	l2685
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;src/mcp2515.c: 656:         mcp2515_cmd_read_rx_buf(RXB0, rx_buf);
  1707  0007CE  0E6B               	movlw	low can_receive@rx_buf
  1708  0007D0  6E56               	movwf	mcp2515_cmd_read_rx_buf@rx_buf^0,c
  1709  0007D2  0E00               	movlw	0
  1710  0007D4  EC03  F005         	call	_mcp2515_cmd_read_rx_buf
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;src/mcp2515.c: 657:         can_parse_msg_ext(msg_buf0, rx_buf);
  1714  0007D8  C069  F054         	movff	can_receive@msg_buf0,can_parse_msg_ext@msg
  1715  0007DC  0E6B               	movlw	low can_receive@rx_buf
  1716  0007DE  6E55               	movwf	can_parse_msg_ext@mcp2515_rx_buf^0,c
  1717  0007E0  EC57  F001         	call	_can_parse_msg_ext	;wreg free
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;src/mcp2515.c: 659:         mcp2515_cmd_write_bit(0x2C, 0x01, 0x00u);
  1721  0007E4  0E01               	movlw	1
  1722  0007E6  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  1723  0007E8  0E00               	movlw	0
  1724  0007EA  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  1725  0007EC  0E2C               	movlw	44
  1726  0007EE  EC57  F005         	call	_mcp2515_cmd_write_bit
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;src/mcp2515.c: 660:         mcp2515_cmd_write_bit(0x2D, 0x40, 0x00u);
  1730  0007F2  0E40               	movlw	64
  1731  0007F4  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  1732  0007F6  0E00               	movlw	0
  1733  0007F8  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  1734  0007FA  0E2D               	movlw	45
  1735  0007FC  EC57  F005         	call	_mcp2515_cmd_write_bit
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;src/mcp2515.c: 662:         rxbf0_full = 0x00u;
  1739  000800  0E00               	movlw	0
  1740  000802  6E1F               	movwf	_rxbf0_full^0,c
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;src/mcp2515.c: 664:         return_val |= 0x1u;
  1744  000804  8078               	bsf	can_receive@return_val^0,0,c
  1745  000806                     l2685:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;src/mcp2515.c: 666:     if(rxbf1_full) {
  1749  000806  501E               	movf	_rxbf1_full^0,w,c
  1750  000808  B4D8               	btfsc	status,2,c
  1751  00080A  0012               	return	
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;src/mcp2515.c: 667:         mcp2515_cmd_read_rx_buf(RXB1, rx_buf);
  1755  00080C  0E6B               	movlw	low can_receive@rx_buf
  1756  00080E  6E56               	movwf	mcp2515_cmd_read_rx_buf@rx_buf^0,c
  1757  000810  0E01               	movlw	1
  1758  000812  EC03  F005         	call	_mcp2515_cmd_read_rx_buf
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;src/mcp2515.c: 668:         can_parse_msg_ext(msg_buf1, rx_buf);
  1762  000816  C06A  F054         	movff	can_receive@msg_buf1,can_parse_msg_ext@msg
  1763  00081A  0E6B               	movlw	low can_receive@rx_buf
  1764  00081C  6E55               	movwf	can_parse_msg_ext@mcp2515_rx_buf^0,c
  1765  00081E  EC57  F001         	call	_can_parse_msg_ext	;wreg free
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;src/mcp2515.c: 670:         mcp2515_cmd_write_bit(0x2C, 0x01, 0x00u);
  1769  000822  0E01               	movlw	1
  1770  000824  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  1771  000826  0E00               	movlw	0
  1772  000828  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  1773  00082A  0E2C               	movlw	44
  1774  00082C  EC57  F005         	call	_mcp2515_cmd_write_bit
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;src/mcp2515.c: 671:         mcp2515_cmd_write_bit(0x2D, 0x40, 0x00u);
  1778  000830  0E40               	movlw	64
  1779  000832  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  1780  000834  0E00               	movlw	0
  1781  000836  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  1782  000838  0E2D               	movlw	45
  1783  00083A  EC57  F005         	call	_mcp2515_cmd_write_bit
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;src/mcp2515.c: 673:         rxbf1_full = 0x00u;
  1787  00083E  0E00               	movlw	0
  1788  000840  6E1E               	movwf	_rxbf1_full^0,c
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;src/mcp2515.c: 675:         return_val |= 0x2u;
  1792  000842  8278               	bsf	can_receive@return_val^0,1,c
  1793                           
  1794                           ; BSR set to: 0
  1795  000844  0012               	return		;funcret
  1796  000846                     __end_of_can_receive:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _mcp2515_cmd_read_rx_buf *****************
  1800 ;; Defined at:
  1801 ;;		line 402 in file "src/mcp2515.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  rxb             1    wreg     enum E2490
  1804 ;;  rx_buf          1    2[COMRAM] PTR unsigned char 
  1805 ;;		 -> can_receive@rx_buf(13), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  rxb             1    3[COMRAM] enum E2490
  1808 ;;  i               1    5[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 3F/0
  1815 ;;		On exit  : 3F/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        4 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    2
  1825 ;; This function calls:
  1826 ;;		_SPI_Transfer_Byte_without_CS
  1827 ;; This function is called by:
  1828 ;;		_can_receive
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text6
  1833  000A06                     __ptext6:
  1834                           	callstack 0
  1835  000A06                     _mcp2515_cmd_read_rx_buf:
  1836                           	callstack 27
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;incstack = 0
  1840                           ;mcp2515_cmd_read_rx_buf@rxb stored from wreg
  1841  000A06  6E57               	movwf	mcp2515_cmd_read_rx_buf@rxb^0,c
  1842                           
  1843                           ;src/mcp2515.c: 404:     LATDbits.LATD2 = 0;
  1844  000A08  948C               	bcf	140,2,c	;volatile
  1845                           
  1846                           ;src/mcp2515.c: 408:     SPI_Transfer_Byte_without_CS((uint8_t) (0x90 | ((rxb ? SPI_READ
      +                          _RXB1_ID : SPI_READ_RXB0_ID) << 1)), &receive_byte);
  1847  000A0A  5057               	movf	mcp2515_cmd_read_rx_buf@rxb^0,w,c
  1848  000A0C  A4D8               	btfss	status,2,c
  1849  000A0E  D002               	goto	l2547
  1850  000A10  0E00               	movlw	0
  1851  000A12  D001               	goto	L3
  1852  000A14                     l2547:
  1853  000A14  0E02               	movlw	2
  1854  000A16                     L3:
  1855  000A16  6E58               	movwf	_mcp2515_cmd_read_rx_buf$614^0,c
  1856  000A18  0E53               	movlw	low _receive_byte
  1857  000A1A  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  1858  000A1C  5058               	movf	_mcp2515_cmd_read_rx_buf$614^0,w,c
  1859  000A1E  2458               	addwf	_mcp2515_cmd_read_rx_buf$614^0,w,c
  1860  000A20  0990               	iorlw	144
  1861  000A22  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;src/mcp2515.c: 410:     for(uint8_t i=0; i<13u; i++) SPI_Transfer_Byte_without_CS(0x00u
      +                          , &rx_buf[i]);
  1865  000A26  0E00               	movlw	0
  1866  000A28  6E59               	movwf	mcp2515_cmd_read_rx_buf@i^0,c
  1867  000A2A                     l2557:
  1868                           
  1869                           ; BSR set to: 0
  1870  000A2A  5056               	movf	mcp2515_cmd_read_rx_buf@rx_buf^0,w,c
  1871  000A2C  2459               	addwf	mcp2515_cmd_read_rx_buf@i^0,w,c
  1872  000A2E  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  1873  000A30  0E00               	movlw	0
  1874  000A32  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  1875                           
  1876                           ; BSR set to: 0
  1877  000A36  2A59               	incf	mcp2515_cmd_read_rx_buf@i^0,f,c
  1878                           
  1879                           ; BSR set to: 0
  1880  000A38  0E0C               	movlw	12
  1881  000A3A  6459               	cpfsgt	mcp2515_cmd_read_rx_buf@i^0,c
  1882  000A3C  D7F6               	goto	l2557
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;src/mcp2515.c: 412:     LATDbits.LATD2 = 1;
  1886  000A3E  848C               	bsf	140,2,c	;volatile
  1887                           
  1888                           ; BSR set to: 0
  1889  000A40  0012               	return		;funcret
  1890  000A42                     __end_of_mcp2515_cmd_read_rx_buf:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _can_parse_msg_ext *****************
  1894 ;; Defined at:
  1895 ;;		line 558 in file "src/mcp2515.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  msg             1    0[COMRAM] PTR struct .
  1898 ;;		 -> node1_rxbf1_msg(17), node1_rxbf0_msg(17), 
  1899 ;;  mcp2515_rx_b    1    1[COMRAM] PTR unsigned char 
  1900 ;;		 -> can_receive@rx_buf(13), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 3F/0
  1909 ;;		On exit  : 3F/0
  1910 ;;		Unchanged: 3F/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;Total ram usage:       21 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_can_receive
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text7
  1927  0002AE                     __ptext7:
  1928                           	callstack 0
  1929  0002AE                     _can_parse_msg_ext:
  1930                           	callstack 28
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;src/mcp2515.c: 560:     msg->arb_field.sid = (((uint16_t) mcp2515_rx_buf[0]) << 3u) | (
      +                          ((uint16_t) mcp2515_rx_buf[1] & 0x00E0) >> 5u);
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;incstack = 0
  1937  0002AE  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  1938  0002B0  6ED9               	movwf	fsr2l,c
  1939  0002B2  6ADA               	clrf	fsr2h,c
  1940  0002B4  50DF               	movf	indf2,w,c
  1941  0002B6  6E56               	movwf	??_can_parse_msg_ext^0,c
  1942  0002B8  6A57               	clrf	(??_can_parse_msg_ext+1)^0,c
  1943  0002BA  90D8               	bcf	status,0,c
  1944  0002BC  3656               	rlcf	??_can_parse_msg_ext^0,f,c
  1945  0002BE  3657               	rlcf	(??_can_parse_msg_ext+1)^0,f,c
  1946  0002C0  90D8               	bcf	status,0,c
  1947  0002C2  3656               	rlcf	??_can_parse_msg_ext^0,f,c
  1948  0002C4  3657               	rlcf	(??_can_parse_msg_ext+1)^0,f,c
  1949  0002C6  90D8               	bcf	status,0,c
  1950  0002C8  3656               	rlcf	??_can_parse_msg_ext^0,f,c
  1951  0002CA  3657               	rlcf	(??_can_parse_msg_ext+1)^0,f,c
  1952  0002CC  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  1953  0002CE  6ED9               	movwf	fsr2l,c
  1954  0002D0  6ADA               	clrf	fsr2h,c
  1955  0002D2  0E01               	movlw	1
  1956  0002D4  26D9               	addwf	fsr2l,f,c
  1957  0002D6  50DF               	movf	indf2,w,c
  1958  0002D8  6E58               	movwf	(??_can_parse_msg_ext+2)^0,c
  1959  0002DA  0E05               	movlw	5
  1960  0002DC  6E59               	movwf	(??_can_parse_msg_ext+3)^0,c
  1961  0002DE                     u775:
  1962  0002DE  90D8               	bcf	status,0,c
  1963  0002E0  3258               	rrcf	(??_can_parse_msg_ext+2)^0,f,c
  1964  0002E2  2E59               	decfsz	(??_can_parse_msg_ext+3)^0,f,c
  1965  0002E4  D7FC               	goto	u775
  1966  0002E6  0E07               	movlw	7
  1967  0002E8  1658               	andwf	(??_can_parse_msg_ext+2)^0,f,c
  1968  0002EA  5058               	movf	(??_can_parse_msg_ext+2)^0,w,c
  1969  0002EC  1256               	iorwf	??_can_parse_msg_ext^0,f,c
  1970  0002EE  0E00               	movlw	0
  1971  0002F0  1257               	iorwf	(??_can_parse_msg_ext+1)^0,f,c
  1972  0002F2  5054               	movf	can_parse_msg_ext@msg^0,w,c
  1973  0002F4  6ED9               	movwf	fsr2l,c
  1974  0002F6  6ADA               	clrf	fsr2h,c
  1975  0002F8  C056  FFDE         	movff	??_can_parse_msg_ext,postinc2
  1976  0002FC  C057  FFDD         	movff	??_can_parse_msg_ext+1,postdec2
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;src/mcp2515.c: 561:     msg->arb_field.exide = (mcp2515_rx_buf[1] & 0x08) >> 3u;
  1980  000300  5054               	movf	can_parse_msg_ext@msg^0,w,c
  1981  000302  6ED9               	movwf	fsr2l,c
  1982  000304  6ADA               	clrf	fsr2h,c
  1983  000306  0E02               	movlw	2
  1984  000308  26D9               	addwf	fsr2l,f,c
  1985  00030A  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  1986  00030C  6EE1               	movwf	fsr1l,c
  1987  00030E  6AE2               	clrf	fsr1h,c
  1988  000310  0E01               	movlw	1
  1989  000312  26E1               	addwf	fsr1l,f,c
  1990  000314  50E7               	movf	indf1,w,c
  1991  000316  6E56               	movwf	??_can_parse_msg_ext^0,c
  1992  000318  90D8               	bcf	status,0,c
  1993  00031A  3256               	rrcf	??_can_parse_msg_ext^0,f,c
  1994  00031C  90D8               	bcf	status,0,c
  1995  00031E  3256               	rrcf	??_can_parse_msg_ext^0,f,c
  1996  000320  90D8               	bcf	status,0,c
  1997  000322  3056               	rrcf	??_can_parse_msg_ext^0,w,c
  1998  000324  0B01               	andlw	1
  1999  000326  6EDF               	movwf	indf2,c
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;src/mcp2515.c: 562:     msg->arb_field.eid = (((uint32_t) mcp2515_rx_buf[1] & 0x0003) <
      +                          < 16u) |
  2003  000328  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2004  00032A  6ED9               	movwf	fsr2l,c
  2005  00032C  6ADA               	clrf	fsr2h,c
  2006  00032E  0E02               	movlw	2
  2007  000330  26D9               	addwf	fsr2l,f,c
  2008  000332  50DF               	movf	indf2,w,c
  2009  000334  6E56               	movwf	??_can_parse_msg_ext^0,c
  2010  000336  C056  F057         	movff	??_can_parse_msg_ext,??_can_parse_msg_ext+1
  2011  00033A  6A58               	clrf	(??_can_parse_msg_ext+2)^0,c
  2012  00033C  6A59               	clrf	(??_can_parse_msg_ext+3)^0,c
  2013  00033E  6A5A               	clrf	(??_can_parse_msg_ext+4)^0,c
  2014  000340  C059  F05A         	movff	??_can_parse_msg_ext+3,??_can_parse_msg_ext+4
  2015  000344  C058  F059         	movff	??_can_parse_msg_ext+2,??_can_parse_msg_ext+3
  2016  000348  C057  F058         	movff	??_can_parse_msg_ext+1,??_can_parse_msg_ext+2
  2017  00034C  6A57               	clrf	(??_can_parse_msg_ext+1)^0,c
  2018  00034E  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2019  000350  6ED9               	movwf	fsr2l,c
  2020  000352  6ADA               	clrf	fsr2h,c
  2021  000354  0E01               	movlw	1
  2022  000356  26D9               	addwf	fsr2l,f,c
  2023  000358  50DF               	movf	indf2,w,c
  2024  00035A  6E5B               	movwf	(??_can_parse_msg_ext+5)^0,c
  2025  00035C  0E03               	movlw	3
  2026  00035E  165B               	andwf	(??_can_parse_msg_ext+5)^0,f,c
  2027  000360  C05B  F05C         	movff	??_can_parse_msg_ext+5,??_can_parse_msg_ext+6
  2028  000364  6A5D               	clrf	(??_can_parse_msg_ext+7)^0,c
  2029  000366  6A5E               	clrf	(??_can_parse_msg_ext+8)^0,c
  2030  000368  6A5F               	clrf	(??_can_parse_msg_ext+9)^0,c
  2031  00036A  C05D  F05F         	movff	??_can_parse_msg_ext+7,??_can_parse_msg_ext+9
  2032  00036E  C05C  F05E         	movff	??_can_parse_msg_ext+6,??_can_parse_msg_ext+8
  2033  000372  6A5D               	clrf	(??_can_parse_msg_ext+7)^0,c
  2034  000374  6A5C               	clrf	(??_can_parse_msg_ext+6)^0,c
  2035  000376  5057               	movf	(??_can_parse_msg_ext+1)^0,w,c
  2036  000378  105C               	iorwf	(??_can_parse_msg_ext+6)^0,w,c
  2037  00037A  6E60               	movwf	(??_can_parse_msg_ext+10)^0,c
  2038  00037C  5058               	movf	(??_can_parse_msg_ext+2)^0,w,c
  2039  00037E  105D               	iorwf	(??_can_parse_msg_ext+7)^0,w,c
  2040  000380  6E61               	movwf	(??_can_parse_msg_ext+11)^0,c
  2041  000382  5059               	movf	(??_can_parse_msg_ext+3)^0,w,c
  2042  000384  105E               	iorwf	(??_can_parse_msg_ext+8)^0,w,c
  2043  000386  6E62               	movwf	(??_can_parse_msg_ext+12)^0,c
  2044  000388  505A               	movf	(??_can_parse_msg_ext+4)^0,w,c
  2045  00038A  105F               	iorwf	(??_can_parse_msg_ext+9)^0,w,c
  2046  00038C  6E63               	movwf	(??_can_parse_msg_ext+13)^0,c
  2047  00038E  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2048  000390  6ED9               	movwf	fsr2l,c
  2049  000392  6ADA               	clrf	fsr2h,c
  2050  000394  0E03               	movlw	3
  2051  000396  26D9               	addwf	fsr2l,f,c
  2052  000398  50DF               	movf	indf2,w,c
  2053  00039A  6E64               	movwf	(??_can_parse_msg_ext+14)^0,c
  2054  00039C  5064               	movf	(??_can_parse_msg_ext+14)^0,w,c
  2055  00039E  1060               	iorwf	(??_can_parse_msg_ext+10)^0,w,c
  2056  0003A0  6E65               	movwf	(??_can_parse_msg_ext+15)^0,c
  2057  0003A2  5061               	movf	(??_can_parse_msg_ext+11)^0,w,c
  2058  0003A4  6E66               	movwf	(??_can_parse_msg_ext+16)^0,c
  2059  0003A6  5062               	movf	(??_can_parse_msg_ext+12)^0,w,c
  2060  0003A8  6E67               	movwf	(??_can_parse_msg_ext+17)^0,c
  2061  0003AA  5063               	movf	(??_can_parse_msg_ext+13)^0,w,c
  2062  0003AC  6E68               	movwf	(??_can_parse_msg_ext+18)^0,c
  2063  0003AE  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2064  0003B0  6ED9               	movwf	fsr2l,c
  2065  0003B2  6ADA               	clrf	fsr2h,c
  2066  0003B4  0E03               	movlw	3
  2067  0003B6  26D9               	addwf	fsr2l,f,c
  2068  0003B8  C065  FFDE         	movff	??_can_parse_msg_ext+15,postinc2
  2069  0003BC  C066  FFDE         	movff	??_can_parse_msg_ext+16,postinc2
  2070  0003C0  C067  FFDE         	movff	??_can_parse_msg_ext+17,postinc2
  2071  0003C4  C068  FFDE         	movff	??_can_parse_msg_ext+18,postinc2
  2072                           
  2073                           ;src/mcp2515.c: 565:     msg->arb_field.rtr = (mcp2515_rx_buf[4] & 0x40) >> 6u;
  2074  0003C8  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2075  0003CA  6ED9               	movwf	fsr2l,c
  2076  0003CC  6ADA               	clrf	fsr2h,c
  2077  0003CE  0E07               	movlw	7
  2078  0003D0  26D9               	addwf	fsr2l,f,c
  2079  0003D2  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2080  0003D4  6EE1               	movwf	fsr1l,c
  2081  0003D6  6AE2               	clrf	fsr1h,c
  2082  0003D8  0E04               	movlw	4
  2083  0003DA  26E1               	addwf	fsr1l,f,c
  2084  0003DC  50E7               	movf	indf1,w,c
  2085  0003DE  6E56               	movwf	??_can_parse_msg_ext^0,c
  2086  0003E0  0E06               	movlw	6
  2087  0003E2  6E57               	movwf	(??_can_parse_msg_ext+1)^0,c
  2088  0003E4                     u785:
  2089  0003E4  90D8               	bcf	status,0,c
  2090  0003E6  3256               	rrcf	??_can_parse_msg_ext^0,f,c
  2091  0003E8  2E57               	decfsz	(??_can_parse_msg_ext+1)^0,f,c
  2092  0003EA  D7FC               	goto	u785
  2093  0003EC  5056               	movf	??_can_parse_msg_ext^0,w,c
  2094  0003EE  0B01               	andlw	1
  2095  0003F0  6EDF               	movwf	indf2,c
  2096                           
  2097                           ;src/mcp2515.c: 566:     msg->ctrl_field.dlc = mcp2515_rx_buf[4] & 0x0F;
  2098  0003F2  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2099  0003F4  6ED9               	movwf	fsr2l,c
  2100  0003F6  6ADA               	clrf	fsr2h,c
  2101  0003F8  0E08               	movlw	8
  2102  0003FA  26D9               	addwf	fsr2l,f,c
  2103  0003FC  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2104  0003FE  6EE1               	movwf	fsr1l,c
  2105  000400  6AE2               	clrf	fsr1h,c
  2106  000402  0E04               	movlw	4
  2107  000404  26E1               	addwf	fsr1l,f,c
  2108  000406  50E7               	movf	indf1,w,c
  2109  000408  0B0F               	andlw	15
  2110  00040A  6EDF               	movwf	indf2,c
  2111                           
  2112                           ;src/mcp2515.c: 567:     msg->data_field.data0 = mcp2515_rx_buf[5];
  2113  00040C  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2114  00040E  6ED9               	movwf	fsr2l,c
  2115  000410  6ADA               	clrf	fsr2h,c
  2116  000412  0E05               	movlw	5
  2117  000414  26D9               	addwf	fsr2l,f,c
  2118  000416  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2119  000418  6EE1               	movwf	fsr1l,c
  2120  00041A  6AE2               	clrf	fsr1h,c
  2121  00041C  0E09               	movlw	9
  2122  00041E  26E1               	addwf	fsr1l,f,c
  2123  000420  CFDF FFE7          	movff	indf2,indf1
  2124                           
  2125                           ;src/mcp2515.c: 568:     msg->data_field.data1 = mcp2515_rx_buf[6];
  2126  000424  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2127  000426  6ED9               	movwf	fsr2l,c
  2128  000428  6ADA               	clrf	fsr2h,c
  2129  00042A  0E06               	movlw	6
  2130  00042C  26D9               	addwf	fsr2l,f,c
  2131  00042E  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2132  000430  6EE1               	movwf	fsr1l,c
  2133  000432  6AE2               	clrf	fsr1h,c
  2134  000434  0E0A               	movlw	10
  2135  000436  26E1               	addwf	fsr1l,f,c
  2136  000438  CFDF FFE7          	movff	indf2,indf1
  2137                           
  2138                           ;src/mcp2515.c: 569:     msg->data_field.data2 = mcp2515_rx_buf[7];
  2139  00043C  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2140  00043E  6ED9               	movwf	fsr2l,c
  2141  000440  6ADA               	clrf	fsr2h,c
  2142  000442  0E07               	movlw	7
  2143  000444  26D9               	addwf	fsr2l,f,c
  2144  000446  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2145  000448  6EE1               	movwf	fsr1l,c
  2146  00044A  6AE2               	clrf	fsr1h,c
  2147  00044C  0E0B               	movlw	11
  2148  00044E  26E1               	addwf	fsr1l,f,c
  2149  000450  CFDF FFE7          	movff	indf2,indf1
  2150                           
  2151                           ;src/mcp2515.c: 570:     msg->data_field.data3 = mcp2515_rx_buf[8];
  2152  000454  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2153  000456  6ED9               	movwf	fsr2l,c
  2154  000458  6ADA               	clrf	fsr2h,c
  2155  00045A  0E08               	movlw	8
  2156  00045C  26D9               	addwf	fsr2l,f,c
  2157  00045E  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2158  000460  6EE1               	movwf	fsr1l,c
  2159  000462  6AE2               	clrf	fsr1h,c
  2160  000464  0E0C               	movlw	12
  2161  000466  26E1               	addwf	fsr1l,f,c
  2162  000468  CFDF FFE7          	movff	indf2,indf1
  2163                           
  2164                           ;src/mcp2515.c: 571:     msg->data_field.data4 = mcp2515_rx_buf[9];
  2165  00046C  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2166  00046E  6ED9               	movwf	fsr2l,c
  2167  000470  6ADA               	clrf	fsr2h,c
  2168  000472  0E09               	movlw	9
  2169  000474  26D9               	addwf	fsr2l,f,c
  2170  000476  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2171  000478  6EE1               	movwf	fsr1l,c
  2172  00047A  6AE2               	clrf	fsr1h,c
  2173  00047C  0E0D               	movlw	13
  2174  00047E  26E1               	addwf	fsr1l,f,c
  2175  000480  CFDF FFE7          	movff	indf2,indf1
  2176                           
  2177                           ;src/mcp2515.c: 572:     msg->data_field.data5 = mcp2515_rx_buf[10];
  2178  000484  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2179  000486  6ED9               	movwf	fsr2l,c
  2180  000488  6ADA               	clrf	fsr2h,c
  2181  00048A  0E0A               	movlw	10
  2182  00048C  26D9               	addwf	fsr2l,f,c
  2183  00048E  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2184  000490  6EE1               	movwf	fsr1l,c
  2185  000492  6AE2               	clrf	fsr1h,c
  2186  000494  0E0E               	movlw	14
  2187  000496  26E1               	addwf	fsr1l,f,c
  2188  000498  CFDF FFE7          	movff	indf2,indf1
  2189                           
  2190                           ;src/mcp2515.c: 573:     msg->data_field.data6 = mcp2515_rx_buf[11];
  2191  00049C  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2192  00049E  6ED9               	movwf	fsr2l,c
  2193  0004A0  6ADA               	clrf	fsr2h,c
  2194  0004A2  0E0B               	movlw	11
  2195  0004A4  26D9               	addwf	fsr2l,f,c
  2196  0004A6  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2197  0004A8  6EE1               	movwf	fsr1l,c
  2198  0004AA  6AE2               	clrf	fsr1h,c
  2199  0004AC  0E0F               	movlw	15
  2200  0004AE  26E1               	addwf	fsr1l,f,c
  2201  0004B0  CFDF FFE7          	movff	indf2,indf1
  2202                           
  2203                           ;src/mcp2515.c: 574:     msg->data_field.data7 = mcp2515_rx_buf[12];
  2204  0004B4  5055               	movf	can_parse_msg_ext@mcp2515_rx_buf^0,w,c
  2205  0004B6  6ED9               	movwf	fsr2l,c
  2206  0004B8  6ADA               	clrf	fsr2h,c
  2207  0004BA  0E0C               	movlw	12
  2208  0004BC  26D9               	addwf	fsr2l,f,c
  2209  0004BE  5054               	movf	can_parse_msg_ext@msg^0,w,c
  2210  0004C0  6EE1               	movwf	fsr1l,c
  2211  0004C2  6AE2               	clrf	fsr1h,c
  2212  0004C4  0E10               	movlw	16
  2213  0004C6  26E1               	addwf	fsr1l,f,c
  2214  0004C8  CFDF FFE7          	movff	indf2,indf1
  2215                           
  2216                           ; BSR set to: 0
  2217  0004CC  0012               	return		;funcret
  2218  0004CE                     __end_of_can_parse_msg_ext:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _can_init_default *****************
  2222 ;; Defined at:
  2223 ;;		line 66 in file "src/mcp2515.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;Total ram usage:        2 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    4
  2244 ;; This function calls:
  2245 ;;		_SPI_Init_Master_Default
  2246 ;;		_external_interrupts_init
  2247 ;;		_mcp2515_cmd_reset
  2248 ;;		_mcp2515_cmd_write
  2249 ;;		_mcp2515_cmd_write_bit
  2250 ;;		_mcp2515_current_opmode
  2251 ;;		_mcp2515_normal_mode
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text8
  2258  0006B6                     __ptext8:
  2259                           	callstack 0
  2260  0006B6                     _can_init_default:
  2261                           	callstack 26
  2262                           
  2263                           ;src/mcp2515.c: 69:     SPI_Init_Master_Default();
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;incstack = 0
  2267  0006B6  EC85  F005         	call	_SPI_Init_Master_Default	;wreg free
  2268                           
  2269                           ;src/mcp2515.c: 70:     (INTCONbits.GIE = 1);
  2270  0006BA  8EF2               	bsf	242,7,c	;volatile
  2271  0006BC                     l2599:
  2272                           
  2273                           ;src/mcp2515.c: 75:         mcp2515_cmd_reset();
  2274  0006BC  ECF1  F005         	call	_mcp2515_cmd_reset	;wreg free
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;src/mcp2515.c: 76:         _delay((unsigned long)((100u)*(40000000u/4000.0)));
  2278  0006C0  0E06               	movlw	6
  2279  0006C2  6E5B               	movwf	(??_can_init_default+1)^0,c
  2280  0006C4  0E13               	movlw	19
  2281  0006C6  6E5A               	movwf	??_can_init_default^0,c
  2282  0006C8  0EAE               	movlw	174
  2283  0006CA                     u1607:
  2284  0006CA  2EE8               	decfsz	wreg,f,c
  2285  0006CC  D7FE               	bra	u1607
  2286  0006CE  2E5A               	decfsz	??_can_init_default^0,f,c
  2287  0006D0  D7FC               	bra	u1607
  2288  0006D2  2E5B               	decfsz	(??_can_init_default+1)^0,f,c
  2289  0006D4  D7FA               	bra	u1607
  2290                           
  2291                           ;src/mcp2515.c: 77:     } while( mcp2515_current_opmode() != MCP2515_OPMODE_CONFIG);
  2292  0006D6  ECBF  F005         	call	_mcp2515_current_opmode	;wreg free
  2293  0006DA  0A04               	xorlw	4
  2294  0006DC  A4D8               	btfss	status,2,c
  2295  0006DE  D7EE               	goto	l2599
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;src/mcp2515.c: 80:     (INTCONbits.GIE = 0);
  2299  0006E0  9EF2               	bcf	242,7,c	;volatile
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;src/mcp2515.c: 82:     external_interrupts_init(EXT_INT_INT0, FALLING_EDGE);
  2303  0006E2  0E00               	movlw	0
  2304  0006E4  6E54               	movwf	external_interrupts_init@trigger_edge^0,c
  2305  0006E6  0E01               	movlw	1
  2306  0006E8  EC23  F004         	call	_external_interrupts_init
  2307                           
  2308                           ;src/mcp2515.c: 83:     (INTCONbits.GIE = 1);
  2309  0006EC  8EF2               	bsf	242,7,c	;volatile
  2310                           
  2311                           ;src/mcp2515.c: 87:     mcp2515_cmd_write_bit(0x0F, 0x04, 0x00u);
  2312  0006EE  0E04               	movlw	4
  2313  0006F0  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2314  0006F2  0E00               	movlw	0
  2315  0006F4  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2316  0006F6  0E0F               	movlw	15
  2317  0006F8  EC57  F005         	call	_mcp2515_cmd_write_bit
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;src/mcp2515.c: 94:     mcp2515_cmd_write_bit(0x2A, 0xC0, 0xC0);
  2321  0006FC  0EC0               	movlw	192
  2322  0006FE  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2323  000700  0EC0               	movlw	192
  2324  000702  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2325  000704  0E2A               	movlw	42
  2326  000706  EC57  F005         	call	_mcp2515_cmd_write_bit
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;src/mcp2515.c: 95:     mcp2515_cmd_write_bit(0x2A, 0x3F, 0x03u);
  2330  00070A  0E3F               	movlw	63
  2331  00070C  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2332  00070E  0E03               	movlw	3
  2333  000710  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2334  000712  0E2A               	movlw	42
  2335  000714  EC57  F005         	call	_mcp2515_cmd_write_bit
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;src/mcp2515.c: 96:     mcp2515_cmd_write_bit(0x29, 0x80, 0x80u);
  2339  000718  0E80               	movlw	128
  2340  00071A  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2341  00071C  0E80               	movlw	128
  2342  00071E  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2343  000720  0E29               	movlw	41
  2344  000722  EC57  F005         	call	_mcp2515_cmd_write_bit
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;src/mcp2515.c: 97:     mcp2515_cmd_write_bit(0x29, 0x40, 0x00u);
  2348  000726  0E40               	movlw	64
  2349  000728  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2350  00072A  0E00               	movlw	0
  2351  00072C  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2352  00072E  0E29               	movlw	41
  2353  000730  EC57  F005         	call	_mcp2515_cmd_write_bit
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;src/mcp2515.c: 98:     mcp2515_cmd_write_bit(0x29, 0x38, (7u << 3u));
  2357  000734  0E38               	movlw	56
  2358  000736  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2359  000738  0E38               	movlw	56
  2360  00073A  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2361  00073C  0E29               	movlw	41
  2362  00073E  EC57  F005         	call	_mcp2515_cmd_write_bit
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;src/mcp2515.c: 99:     mcp2515_cmd_write_bit(0x29, 0x07, (4u));
  2366  000742  0E07               	movlw	7
  2367  000744  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2368  000746  0E04               	movlw	4
  2369  000748  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2370  00074A  0E29               	movlw	41
  2371  00074C  EC57  F005         	call	_mcp2515_cmd_write_bit
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;src/mcp2515.c: 100:     mcp2515_cmd_write_bit(0x28, 0x07, (5u));
  2375  000750  0E07               	movlw	7
  2376  000752  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2377  000754  0E05               	movlw	5
  2378  000756  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2379  000758  0E28               	movlw	40
  2380  00075A  EC57  F005         	call	_mcp2515_cmd_write_bit
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;src/mcp2515.c: 126:     mcp2515_cmd_write_bit(0x60, 0x60, 0x00);
  2384  00075E  0E60               	movlw	96
  2385  000760  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2386  000762  0E00               	movlw	0
  2387  000764  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2388  000766  0E60               	movlw	96
  2389  000768  EC57  F005         	call	_mcp2515_cmd_write_bit
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;src/mcp2515.c: 127:     mcp2515_cmd_write_bit(0x70, 0x60, 0x00);
  2393  00076C  0E60               	movlw	96
  2394  00076E  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2395  000770  0E00               	movlw	0
  2396  000772  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2397  000774  0E70               	movlw	112
  2398  000776  EC57  F005         	call	_mcp2515_cmd_write_bit
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;src/mcp2515.c: 129:     mcp2515_cmd_write_bit(0x60, 0x04, 0x04);
  2402  00077A  0E04               	movlw	4
  2403  00077C  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2404  00077E  0E04               	movlw	4
  2405  000780  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2406  000782  0E60               	movlw	96
  2407  000784  EC57  F005         	call	_mcp2515_cmd_write_bit
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;src/mcp2515.c: 137:     mcp2515_cmd_write(0x2B, (0x80 | 0x20 | 0x10 | 0x08 | 0x04 | 0x0
      +                          2 | 0x01));
  2411  000788  0EBF               	movlw	191
  2412  00078A  6E56               	movwf	mcp2515_cmd_write@val^0,c
  2413  00078C  0E2B               	movlw	43
  2414  00078E  ECAC  F005         	call	_mcp2515_cmd_write
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;src/mcp2515.c: 138:     mcp2515_cmd_write(0x2C, 0x00u);
  2418  000792  0E00               	movlw	0
  2419  000794  6E56               	movwf	mcp2515_cmd_write@val^0,c
  2420  000796  0E2C               	movlw	44
  2421  000798  ECAC  F005         	call	_mcp2515_cmd_write
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;src/mcp2515.c: 145:     mcp2515_normal_mode();
  2425  00079C  ECE9  F005         	call	_mcp2515_normal_mode	;wreg free
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;src/mcp2515.c: 148:     _delay((unsigned long)((100u)*(40000000u/4000.0)));
  2429  0007A0  0E06               	movlw	6
  2430  0007A2  6E5B               	movwf	(??_can_init_default+1)^0,c
  2431  0007A4  0E13               	movlw	19
  2432  0007A6  6E5A               	movwf	??_can_init_default^0,c
  2433  0007A8  0EAE               	movlw	174
  2434  0007AA                     u1617:
  2435  0007AA  2EE8               	decfsz	wreg,f,c
  2436  0007AC  D7FE               	bra	u1617
  2437  0007AE  2E5A               	decfsz	??_can_init_default^0,f,c
  2438  0007B0  D7FC               	bra	u1617
  2439  0007B2  2E5B               	decfsz	(??_can_init_default+1)^0,f,c
  2440  0007B4  D7FA               	bra	u1617
  2441  0007B6  0012               	return		;funcret
  2442  0007B8                     __end_of_can_init_default:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _mcp2515_normal_mode *****************
  2446 ;; Defined at:
  2447 ;;		line 200 in file "src/mcp2515.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 3F/0
  2458 ;;		On exit  : 3F/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		_mcp2515_cmd_write_bit
  2470 ;; This function is called by:
  2471 ;;		_can_init_default
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text9
  2476  000BD2                     __ptext9:
  2477                           	callstack 0
  2478  000BD2                     _mcp2515_normal_mode:
  2479                           	callstack 26
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;src/mcp2515.c: 201:     mcp2515_cmd_write_bit(0x0F, 0xE0, MCP2515_OPMODE_NORMAL);
  2483                           
  2484                           ;incstack = 0
  2485  000BD2  0EE0               	movlw	224
  2486  000BD4  6E56               	movwf	mcp2515_cmd_write_bit@mask^0,c
  2487  000BD6  0E00               	movlw	0
  2488  000BD8  6E57               	movwf	mcp2515_cmd_write_bit@val^0,c
  2489  000BDA  0E0F               	movlw	15
  2490  000BDC  EC57  F005         	call	_mcp2515_cmd_write_bit
  2491                           
  2492                           ; BSR set to: 0
  2493  000BE0  0012               	return		;funcret
  2494  000BE2                     __end_of_mcp2515_normal_mode:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _mcp2515_cmd_write_bit *****************
  2498 ;; Defined at:
  2499 ;;		line 369 in file "src/mcp2515.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  reg_address     1    wreg     unsigned char 
  2502 ;;  mask            1    2[COMRAM] unsigned char 
  2503 ;;  val             1    3[COMRAM] unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  reg_address     1    4[COMRAM] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 3F/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        3 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    2
  2522 ;; This function calls:
  2523 ;;		_SPI_Transfer_Byte_without_CS
  2524 ;; This function is called by:
  2525 ;;		_can_init_default
  2526 ;;		_mcp2515_normal_mode
  2527 ;;		_can_receive
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text10
  2533  000AAE                     __ptext10:
  2534                           	callstack 0
  2535  000AAE                     _mcp2515_cmd_write_bit:
  2536                           	callstack 28
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;incstack = 0
  2540                           ;mcp2515_cmd_write_bit@reg_address stored from wreg
  2541  000AAE  6E58               	movwf	mcp2515_cmd_write_bit@reg_address^0,c
  2542                           
  2543                           ;src/mcp2515.c: 371:     LATDbits.LATD2 = 0;
  2544  000AB0  948C               	bcf	140,2,c	;volatile
  2545                           
  2546                           ;src/mcp2515.c: 374:     SPI_Transfer_Byte_without_CS(0x05, &receive_byte);
  2547  000AB2  0E53               	movlw	low _receive_byte
  2548  000AB4  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2549  000AB6  0E05               	movlw	5
  2550  000AB8  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2551                           
  2552                           ;src/mcp2515.c: 376:     SPI_Transfer_Byte_without_CS(reg_address, &receive_byte);
  2553  000ABC  0E53               	movlw	low _receive_byte
  2554  000ABE  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2555  000AC0  5058               	movf	mcp2515_cmd_write_bit@reg_address^0,w,c
  2556  000AC2  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2557                           
  2558                           ;src/mcp2515.c: 378:     SPI_Transfer_Byte_without_CS(mask, &receive_byte);
  2559  000AC6  0E53               	movlw	low _receive_byte
  2560  000AC8  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2561  000ACA  5056               	movf	mcp2515_cmd_write_bit@mask^0,w,c
  2562  000ACC  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2563                           
  2564                           ;src/mcp2515.c: 380:     SPI_Transfer_Byte_without_CS(val, &receive_byte);
  2565  000AD0  0E53               	movlw	low _receive_byte
  2566  000AD2  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2567  000AD4  5057               	movf	mcp2515_cmd_write_bit@val^0,w,c
  2568  000AD6  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;src/mcp2515.c: 382:     LATDbits.LATD2 = 1;
  2572  000ADA  848C               	bsf	140,2,c	;volatile
  2573                           
  2574                           ; BSR set to: 0
  2575  000ADC  0012               	return		;funcret
  2576  000ADE                     __end_of_mcp2515_cmd_write_bit:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _mcp2515_current_opmode *****************
  2580 ;; Defined at:
  2581 ;;		line 170 in file "src/mcp2515.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  opmode          1    5[COMRAM] unsigned char 
  2586 ;;  current_opmo    1    4[COMRAM] enum E2464
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      enum E2464
  2589 ;; Registers used:
  2590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 3F/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        2 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    3
  2603 ;; This function calls:
  2604 ;;		_mcp2515_cmd_read
  2605 ;; This function is called by:
  2606 ;;		_can_init_default
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text11
  2611  000B7E                     __ptext11:
  2612                           	callstack 0
  2613  000B7E                     _mcp2515_current_opmode:
  2614                           	callstack 26
  2615                           
  2616                           ;src/mcp2515.c: 171:     uint8_t opmode = 0x00;
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;incstack = 0
  2620  000B7E  0E00               	movlw	0
  2621  000B80  6E59               	movwf	mcp2515_current_opmode@opmode^0,c
  2622                           
  2623                           ;src/mcp2515.c: 172:     mcp2515_cmd_read(0x0E, &opmode);
  2624  000B82  0E59               	movlw	low mcp2515_current_opmode@opmode
  2625  000B84  6E56               	movwf	mcp2515_cmd_read@buf^0,c
  2626  000B86  0E0E               	movlw	14
  2627  000B88  EC99  F005         	call	_mcp2515_cmd_read
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;src/mcp2515.c: 173:     opmode_t current_opmode = (opmode_t) (opmode & 0xE0);
  2631  000B8C  5059               	movf	mcp2515_current_opmode@opmode^0,w,c
  2632  000B8E  0BE0               	andlw	224
  2633  000B90  6E58               	movwf	mcp2515_current_opmode@current_opmode^0,c
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;src/mcp2515.c: 175:     return current_opmode;
  2637  000B92  5058               	movf	mcp2515_current_opmode@current_opmode^0,w,c
  2638                           
  2639                           ; BSR set to: 0
  2640  000B94  0012               	return		;funcret
  2641  000B96                     __end_of_mcp2515_current_opmode:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _mcp2515_cmd_read *****************
  2645 ;; Defined at:
  2646 ;;		line 256 in file "src/mcp2515.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  reg_address     1    wreg     unsigned char 
  2649 ;;  buf             1    2[COMRAM] PTR unsigned char 
  2650 ;;		 -> mcp2515_eflg_buf(1), mcp2515_txb2ctrl_buf(1), mcp2515_txb1ctrl_buf(1), mcp2515_txb0ctrl_buf(1), 
  2651 ;;		 -> mcp2515_canctrl_buf(1), mcp2515_intf_buf(1), mcp2515_current_opmode@opmode(1), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  reg_address     1    3[COMRAM] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 3F/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;Total ram usage:        2 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    2
  2670 ;; This function calls:
  2671 ;;		_SPI_Transfer_Byte_without_CS
  2672 ;; This function is called by:
  2673 ;;		_mcp2515_current_opmode
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text12
  2679  000B32                     __ptext12:
  2680                           	callstack 0
  2681  000B32                     _mcp2515_cmd_read:
  2682                           	callstack 28
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;incstack = 0
  2686                           ;mcp2515_cmd_read@reg_address stored from wreg
  2687  000B32  6E57               	movwf	mcp2515_cmd_read@reg_address^0,c
  2688                           
  2689                           ;src/mcp2515.c: 258:     LATDbits.LATD2 = 0;
  2690  000B34  948C               	bcf	140,2,c	;volatile
  2691                           
  2692                           ;src/mcp2515.c: 261:     SPI_Transfer_Byte_without_CS(0x03, &receive_byte);
  2693  000B36  0E53               	movlw	low _receive_byte
  2694  000B38  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2695  000B3A  0E03               	movlw	3
  2696  000B3C  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2697                           
  2698                           ;src/mcp2515.c: 263:     SPI_Transfer_Byte_without_CS(reg_address, &receive_byte);
  2699  000B40  0E53               	movlw	low _receive_byte
  2700  000B42  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2701  000B44  5057               	movf	mcp2515_cmd_read@reg_address^0,w,c
  2702  000B46  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2703                           
  2704                           ;src/mcp2515.c: 265:     SPI_Transfer_Byte_without_CS(0x00u, buf);
  2705  000B4A  C056  F054         	movff	mcp2515_cmd_read@buf,SPI_Transfer_Byte_without_CS@rx
  2706  000B4E  0E00               	movlw	0
  2707  000B50  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;src/mcp2515.c: 267:     LATDbits.LATD2 = 1;
  2711  000B54  848C               	bsf	140,2,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714  000B56  0012               	return		;funcret
  2715  000B58                     __end_of_mcp2515_cmd_read:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _mcp2515_cmd_write *****************
  2719 ;; Defined at:
  2720 ;;		line 309 in file "src/mcp2515.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  reg_address     1    wreg     unsigned char 
  2723 ;;  val             1    2[COMRAM] unsigned char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  reg_address     1    3[COMRAM] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 3F/0
  2732 ;;		On exit  : 3F/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    2
  2742 ;; This function calls:
  2743 ;;		_SPI_Transfer_Byte_without_CS
  2744 ;; This function is called by:
  2745 ;;		_can_init_default
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text13
  2750  000B58                     __ptext13:
  2751                           	callstack 0
  2752  000B58                     _mcp2515_cmd_write:
  2753                           	callstack 27
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;incstack = 0
  2757                           ;mcp2515_cmd_write@reg_address stored from wreg
  2758  000B58  6E57               	movwf	mcp2515_cmd_write@reg_address^0,c
  2759                           
  2760                           ;src/mcp2515.c: 311:     LATDbits.LATD2 = 0;
  2761  000B5A  948C               	bcf	140,2,c	;volatile
  2762                           
  2763                           ;src/mcp2515.c: 314:     SPI_Transfer_Byte_without_CS(0x02, &receive_byte);
  2764  000B5C  0E53               	movlw	low _receive_byte
  2765  000B5E  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2766  000B60  0E02               	movlw	2
  2767  000B62  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2768                           
  2769                           ;src/mcp2515.c: 316:     SPI_Transfer_Byte_without_CS(reg_address, &receive_byte);
  2770  000B66  0E53               	movlw	low _receive_byte
  2771  000B68  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2772  000B6A  5057               	movf	mcp2515_cmd_write@reg_address^0,w,c
  2773  000B6C  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2774                           
  2775                           ;src/mcp2515.c: 318:     SPI_Transfer_Byte_without_CS(val, &receive_byte);
  2776  000B70  0E53               	movlw	low _receive_byte
  2777  000B72  6E54               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
  2778  000B74  5056               	movf	mcp2515_cmd_write@val^0,w,c
  2779  000B76  EC6F  F005         	call	_SPI_Transfer_Byte_without_CS
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;src/mcp2515.c: 320:     LATDbits.LATD2 = 1;
  2783  000B7A  848C               	bsf	140,2,c	;volatile
  2784                           
  2785                           ; BSR set to: 0
  2786  000B7C  0012               	return		;funcret
  2787  000B7E                     __end_of_mcp2515_cmd_write:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function _SPI_Transfer_Byte_without_CS *****************
  2791 ;; Defined at:
  2792 ;;		line 335 in file "src/mssp_spi.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  tx              1    wreg     unsigned char 
  2795 ;;  rx              1    0[COMRAM] PTR unsigned char 
  2796 ;;		 -> mcp2515_eflg_buf(1), mcp2515_txb2ctrl_buf(1), mcp2515_txb1ctrl_buf(1), mcp2515_txb0ctrl_buf(1), 
  2797 ;;		 -> mcp2515_canctrl_buf(1), mcp2515_intf_buf(1), can_receive@rx_buf(13), receive_byte(1), 
  2798 ;;		 -> mcp2515_current_opmode@opmode(1), 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  tx              1    1[COMRAM] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr2l, fsr2h, status,2
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 3F/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_mcp2515_cmd_read
  2821 ;;		_mcp2515_cmd_write
  2822 ;;		_mcp2515_cmd_write_bit
  2823 ;;		_mcp2515_cmd_read_rx_buf
  2824 ;;		_mcp2515_cmd_load_tx_buf
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text14
  2829  000ADE                     __ptext14:
  2830                           	callstack 0
  2831  000ADE                     _SPI_Transfer_Byte_without_CS:
  2832                           	callstack 28
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;incstack = 0
  2836                           ;SPI_Transfer_Byte_without_CS@tx stored from wreg
  2837  000ADE  6E55               	movwf	SPI_Transfer_Byte_without_CS@tx^0,c
  2838                           
  2839                           ;src/mssp_spi.c: 337:     manual_transfer = 0x01;
  2840  000AE0  0E01               	movlw	1
  2841  000AE2  0100               	movlb	0	; () banked
  2842  000AE4  6FAB               	movwf	_manual_transfer& (0+255),b
  2843                           
  2844                           ;src/mssp_spi.c: 338:     spi_transfer_complete_flag = 0x00;
  2845  000AE6  0E00               	movlw	0
  2846  000AE8  6E1B               	movwf	_spi_transfer_complete_flag^0,c
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;src/mssp_spi.c: 340:     SSPBUF = tx;
  2850  000AEA  C055  FFC9         	movff	SPI_Transfer_Byte_without_CS@tx,4041	;volatile
  2851  000AEE                     l2481:
  2852  000AEE  501B               	movf	_spi_transfer_complete_flag^0,w,c
  2853  000AF0  B4D8               	btfsc	status,2,c
  2854  000AF2  D7FD               	goto	l2481
  2855                           
  2856                           ;src/mssp_spi.c: 342:     *rx = SSPBUF;
  2857  000AF4  5054               	movf	SPI_Transfer_Byte_without_CS@rx^0,w,c
  2858  000AF6  6ED9               	movwf	fsr2l,c
  2859  000AF8  6ADA               	clrf	fsr2h,c
  2860  000AFA  CFC9 FFDF          	movff	4041,indf2	;volatile
  2861                           
  2862                           ;src/mssp_spi.c: 344:     manual_transfer = 0x00;
  2863  000AFE  0E00               	movlw	0
  2864  000B00  0100               	movlb	0	; () banked
  2865  000B02  6FAB               	movwf	_manual_transfer& (0+255),b
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;src/mssp_spi.c: 345:     spi_transfer_complete_flag = 0x00;
  2869  000B04  0E00               	movlw	0
  2870  000B06  6E1B               	movwf	_spi_transfer_complete_flag^0,c
  2871                           
  2872                           ; BSR set to: 0
  2873  000B08  0012               	return		;funcret
  2874  000B0A                     __end_of_SPI_Transfer_Byte_without_CS:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function _mcp2515_cmd_reset *****************
  2878 ;; Defined at:
  2879 ;;		line 213 in file "src/mcp2515.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 3F/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    2
  2900 ;; This function calls:
  2901 ;;		_SPI_Transfer_Byte
  2902 ;; This function is called by:
  2903 ;;		_can_init_default
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text15
  2908  000BE2                     __ptext15:
  2909                           	callstack 0
  2910  000BE2                     _mcp2515_cmd_reset:
  2911                           	callstack 27
  2912                           
  2913                           ;src/mcp2515.c: 214:     SPI_Transfer_Byte(0xC0, &receive_byte);
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;incstack = 0
  2917  000BE2  0E53               	movlw	low _receive_byte
  2918  000BE4  6E54               	movwf	SPI_Transfer_Byte@rx^0,c
  2919  000BE6  0EC0               	movlw	192
  2920  000BE8  EC21  F005         	call	_SPI_Transfer_Byte
  2921                           
  2922                           ; BSR set to: 0
  2923  000BEC  0012               	return		;funcret
  2924  000BEE                     __end_of_mcp2515_cmd_reset:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _SPI_Transfer_Byte *****************
  2928 ;; Defined at:
  2929 ;;		line 207 in file "src/mssp_spi.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  tx              1    wreg     unsigned char 
  2932 ;;  rx              1    0[COMRAM] PTR unsigned char 
  2933 ;;		 -> receive_byte(1), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  tx              1    1[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr2l, fsr2h, status,2
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 3F/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2945 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;Total ram usage:        2 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_mcp2515_cmd_reset
  2956 ;;		_mcp2515_cmd_rts
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text16
  2961  000A42                     __ptext16:
  2962                           	callstack 0
  2963  000A42                     _SPI_Transfer_Byte:
  2964                           	callstack 27
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;incstack = 0
  2968                           ;SPI_Transfer_Byte@tx stored from wreg
  2969  000A42  6E55               	movwf	SPI_Transfer_Byte@tx^0,c
  2970                           
  2971                           ;src/mssp_spi.c: 208:     manual_transfer = 0x01;
  2972  000A44  0E01               	movlw	1
  2973  000A46  0100               	movlb	0	; () banked
  2974  000A48  6FAB               	movwf	_manual_transfer& (0+255),b
  2975                           
  2976                           ;src/mssp_spi.c: 209:     spi_transfer_complete_flag = 0x00;
  2977  000A4A  0E00               	movlw	0
  2978  000A4C  6E1B               	movwf	_spi_transfer_complete_flag^0,c
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;src/mssp_spi.c: 211:     if(spi_actor == SPI_MASTER) LATDbits.LATD2 = 0;
  2982  000A4E  501C               	movf	_spi_actor^0,w,c
  2983  000A50  B4D8               	btfsc	status,2,c
  2984                           
  2985                           ; BSR set to: 0
  2986  000A52  948C               	bcf	140,2,c	;volatile
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;src/mssp_spi.c: 212:     SSPBUF = tx;
  2990  000A54  C055  FFC9         	movff	SPI_Transfer_Byte@tx,4041	;volatile
  2991  000A58                     l2507:
  2992  000A58  501B               	movf	_spi_transfer_complete_flag^0,w,c
  2993  000A5A  B4D8               	btfsc	status,2,c
  2994  000A5C  D7FD               	goto	l2507
  2995                           
  2996                           ;src/mssp_spi.c: 215:     if(spi_actor == SPI_MASTER) LATDbits.LATD2 = 1;
  2997  000A5E  501C               	movf	_spi_actor^0,w,c
  2998  000A60  B4D8               	btfsc	status,2,c
  2999  000A62  848C               	bsf	140,2,c	;volatile
  3000                           
  3001                           ;src/mssp_spi.c: 216:     *rx = SSPBUF;
  3002  000A64  5054               	movf	SPI_Transfer_Byte@rx^0,w,c
  3003  000A66  6ED9               	movwf	fsr2l,c
  3004  000A68  6ADA               	clrf	fsr2h,c
  3005  000A6A  CFC9 FFDF          	movff	4041,indf2	;volatile
  3006                           
  3007                           ;src/mssp_spi.c: 218:     manual_transfer = 0x00;
  3008  000A6E  0E00               	movlw	0
  3009  000A70  0100               	movlb	0	; () banked
  3010  000A72  6FAB               	movwf	_manual_transfer& (0+255),b
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;src/mssp_spi.c: 219:     spi_transfer_complete_flag = 0x00;
  3014  000A74  0E00               	movlw	0
  3015  000A76  6E1B               	movwf	_spi_transfer_complete_flag^0,c
  3016                           
  3017                           ; BSR set to: 0
  3018  000A78  0012               	return		;funcret
  3019  000A7A                     __end_of_SPI_Transfer_Byte:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _external_interrupts_init *****************
  3023 ;; Defined at:
  3024 ;;		line 54 in file "src/external_interrupts.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  which_pin       1    wreg     enum E2464
  3027 ;;  trigger_edge    1    0[COMRAM] enum E2469
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  which_pin       1    3[COMRAM] enum E2464
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 3F/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3039 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;Total ram usage:        4 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    1
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_can_init_default
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text17
  3054  000846                     __ptext17:
  3055                           	callstack 0
  3056  000846                     _external_interrupts_init:
  3057                           	callstack 28
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;incstack = 0
  3061                           ;external_interrupts_init@which_pin stored from wreg
  3062  000846  6E57               	movwf	external_interrupts_init@which_pin^0,c
  3063                           
  3064                           ;src/external_interrupts.c: 56:     switch(which_pin){
  3065  000848  D021               	goto	l2017
  3066  00084A                     l378:
  3067                           
  3068                           ;src/external_interrupts.c: 58:             INTCON2bits.INTEDG0 = trigger_edge;
  3069  00084A  B054               	btfsc	external_interrupts_init@trigger_edge^0,0,c
  3070  00084C  D002               	bra	u685
  3071  00084E  9CF1               	bcf	241,6,c	;volatile
  3072  000850  D001               	bra	u686
  3073  000852                     u685:
  3074  000852  8CF1               	bsf	241,6,c	;volatile
  3075  000854                     u686:
  3076                           
  3077                           ;src/external_interrupts.c: 59:             ADCON1bits.PCFG = 0xF; (TRISB |= 0x01);
  3078  000854  0E0F               	movlw	15
  3079  000856  12C1               	iorwf	193,f,c	;volatile
  3080  000858  8093               	bsf	147,0,c	;volatile
  3081                           
  3082                           ;src/external_interrupts.c: 60:             (INTCONbits.INT0IE = 1u);
  3083  00085A  88F2               	bsf	242,4,c	;volatile
  3084                           
  3085                           ;src/external_interrupts.c: 61:             (INTCONbits.INT0IF = 0u);
  3086  00085C  92F2               	bcf	242,1,c	;volatile
  3087                           
  3088                           ;src/external_interrupts.c: 62:             break;
  3089  00085E  0012               	return	
  3090  000860                     l380:
  3091                           
  3092                           ;src/external_interrupts.c: 64:             INTCON2bits.INTEDG1 = trigger_edge;
  3093  000860  B054               	btfsc	external_interrupts_init@trigger_edge^0,0,c
  3094  000862  D002               	bra	u695
  3095  000864  9AF1               	bcf	241,5,c	;volatile
  3096  000866  D001               	bra	u696
  3097  000868                     u695:
  3098  000868  8AF1               	bsf	241,5,c	;volatile
  3099  00086A                     u696:
  3100                           
  3101                           ;src/external_interrupts.c: 65:             ADCON1bits.PCFG = 0xF; (TRISB |= 0x02);
  3102  00086A  0E0F               	movlw	15
  3103  00086C  12C1               	iorwf	193,f,c	;volatile
  3104  00086E  8293               	bsf	147,1,c	;volatile
  3105                           
  3106                           ;src/external_interrupts.c: 66:             (INTCON3bits.INT1IE = 1u);
  3107  000870  86F0               	bsf	240,3,c	;volatile
  3108                           
  3109                           ;src/external_interrupts.c: 67:             (INTCON3bits.INT1IF = 0u);
  3110  000872  90F0               	bcf	240,0,c	;volatile
  3111                           
  3112                           ;src/external_interrupts.c: 68:             break;
  3113  000874  0012               	return	
  3114  000876                     l381:
  3115                           
  3116                           ;src/external_interrupts.c: 70:             INTCON2bits.INTEDG2 = trigger_edge;
  3117  000876  B054               	btfsc	external_interrupts_init@trigger_edge^0,0,c
  3118  000878  D002               	bra	u705
  3119  00087A  98F1               	bcf	241,4,c	;volatile
  3120  00087C  D001               	bra	u706
  3121  00087E                     u705:
  3122  00087E  88F1               	bsf	241,4,c	;volatile
  3123  000880                     u706:
  3124                           
  3125                           ;src/external_interrupts.c: 71:             ADCON1bits.PCFG = 0xF; (TRISB |= 0x04);
  3126  000880  0E0F               	movlw	15
  3127  000882  12C1               	iorwf	193,f,c	;volatile
  3128  000884  8493               	bsf	147,2,c	;volatile
  3129                           
  3130                           ;src/external_interrupts.c: 72:             (INTCON3bits.INT2IE = 1u);
  3131  000886  88F0               	bsf	240,4,c	;volatile
  3132                           
  3133                           ;src/external_interrupts.c: 73:             (INTCON3bits.INT2IF = 0u);
  3134  000888  92F0               	bcf	240,1,c	;volatile
  3135                           
  3136                           ;src/external_interrupts.c: 74:             break;
  3137  00088A  0012               	return	
  3138  00088C                     l2017:
  3139  00088C  5057               	movf	external_interrupts_init@which_pin^0,w,c
  3140  00088E  6E55               	movwf	??_external_interrupts_init^0,c
  3141  000890  6A56               	clrf	(??_external_interrupts_init+1)^0,c
  3142                           
  3143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3144                           ; Switch size 1, requested type "simple"
  3145                           ; Number of cases is 1, Range of values is 0 to 0
  3146                           ; switch strategies available:
  3147                           ; Name         Instructions Cycles
  3148                           ; simple_byte            4     3 (average)
  3149                           ;	Chosen strategy is simple_byte
  3150  000892  5056               	movf	(??_external_interrupts_init+1)^0,w,c
  3151  000894  0A00               	xorlw	0	; case 0
  3152  000896  A4D8               	btfss	status,2,c
  3153  000898  0012               	return	
  3154                           
  3155                           ; Switch size 1, requested type "simple"
  3156                           ; Number of cases is 3, Range of values is 1 to 4
  3157                           ; switch strategies available:
  3158                           ; Name         Instructions Cycles
  3159                           ; simple_byte           10     6 (average)
  3160                           ;	Chosen strategy is simple_byte
  3161  00089A  5055               	movf	??_external_interrupts_init^0,w,c
  3162  00089C  0A01               	xorlw	1	; case 1
  3163  00089E  B4D8               	btfsc	status,2,c
  3164  0008A0  D7D4               	goto	l378
  3165  0008A2  0A03               	xorlw	3	; case 2
  3166  0008A4  B4D8               	btfsc	status,2,c
  3167  0008A6  D7DC               	goto	l380
  3168  0008A8  0A06               	xorlw	6	; case 4
  3169  0008AA  A4D8               	btfss	status,2,c
  3170  0008AC  0012               	return	
  3171  0008AE  D7E3               	goto	l381
  3172  0008B0                     __end_of_external_interrupts_init:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _SPI_Init_Master_Default *****************
  3176 ;; Defined at:
  3177 ;;		line 31 in file "src/mssp_spi.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_can_init_default
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text18
  3206  000B0A                     __ptext18:
  3207                           	callstack 0
  3208  000B0A                     _SPI_Init_Master_Default:
  3209                           	callstack 28
  3210                           
  3211                           ;src/mssp_spi.c: 33:     SSPCON1bits.SSPEN = 0;
  3212                           
  3213                           ;incstack = 0
  3214  000B0A  9AC6               	bcf	198,5,c	;volatile
  3215                           
  3216                           ;src/mssp_spi.c: 36:     SSPCON1 = 0x01 | 0x00;
  3217  000B0C  0E01               	movlw	1
  3218  000B0E  6EC6               	movwf	198,c	;volatile
  3219                           
  3220                           ;src/mssp_spi.c: 37:     SSPSTAT = 0x40 | 0x00;
  3221  000B10  0E40               	movlw	64
  3222  000B12  6EC7               	movwf	199,c	;volatile
  3223                           
  3224                           ;src/mssp_spi.c: 40:     TRISC |= 0x10; TRISC &= ~(0x28); TRISDbits.RD2 = 0;;
  3225  000B14  8894               	bsf	148,4,c	;volatile
  3226  000B16  0ED7               	movlw	215
  3227  000B18  1694               	andwf	148,f,c	;volatile
  3228  000B1A  9495               	bcf	149,2,c	;volatile
  3229                           
  3230                           ;src/mssp_spi.c: 43:     SSPCON1bits.SSPEN = 1;
  3231  000B1C  8AC6               	bsf	198,5,c	;volatile
  3232                           
  3233                           ;src/mssp_spi.c: 44:     SSPCON1bits.WCOL = 0;
  3234  000B1E  9EC6               	bcf	198,7,c	;volatile
  3235                           
  3236                           ;src/mssp_spi.c: 45:     SSPCON1bits.SSPOV = 0;
  3237  000B20  9CC6               	bcf	198,6,c	;volatile
  3238                           
  3239                           ;src/mssp_spi.c: 46:     SSPBUF;
  3240  000B22  50C9               	movf	201,w,c	;volatile
  3241                           
  3242                           ;src/mssp_spi.c: 47:     PIR1bits.SSPIF = 0;
  3243  000B24  969E               	bcf	158,3,c	;volatile
  3244                           
  3245                           ;src/mssp_spi.c: 50:     LATDbits.LATD2 = 1;
  3246  000B26  848C               	bsf	140,2,c	;volatile
  3247                           
  3248                           ;src/mssp_spi.c: 52:     spi_actor = SPI_MASTER;
  3249  000B28  0E00               	movlw	0
  3250  000B2A  6E1C               	movwf	_spi_actor^0,c
  3251                           
  3252                           ;src/mssp_spi.c: 55:     PIE1bits.SSPIE = 1;
  3253  000B2C  869D               	bsf	157,3,c	;volatile
  3254                           
  3255                           ;src/mssp_spi.c: 56:     (INTCONbits.PEIE = 1u);
  3256  000B2E  8CF2               	bsf	242,6,c	;volatile
  3257  000B30  0012               	return		;funcret
  3258  000B32                     __end_of_SPI_Init_Master_Default:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _adc_init_default *****************
  3262 ;; Defined at:
  3263 ;;		line 39 in file "src/adc.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text19
  3292  000A7A                     __ptext19:
  3293                           	callstack 0
  3294  000A7A                     _adc_init_default:
  3295                           	callstack 29
  3296                           
  3297                           ;src/adc.c: 42:     (ADCON1bits.PCFG = 0xA);
  3298                           
  3299                           ;incstack = 0
  3300  000A7A  50C1               	movf	193,w,c	;volatile
  3301  000A7C  0BF0               	andlw	-16
  3302  000A7E  090A               	iorlw	10
  3303  000A80  6EC1               	movwf	193,c	;volatile
  3304                           
  3305                           ;src/adc.c: 43:     (ADCON0bits.CHS = 0x0u);
  3306  000A82  0EC3               	movlw	-61
  3307  000A84  16C2               	andwf	194,f,c	;volatile
  3308                           
  3309                           ;src/adc.c: 44:     (TRISAbits.RA0 = 1u);
  3310  000A86  8092               	bsf	146,0,c	;volatile
  3311                           
  3312                           ;src/adc.c: 45:     (ADCON1bits.VCFG = 0x3);
  3313  000A88  0E30               	movlw	48
  3314  000A8A  12C1               	iorwf	193,f,c	;volatile
  3315                           
  3316                           ;src/adc.c: 46:     (ADCON2bits.ADFM = 1u);
  3317  000A8C  8EC0               	bsf	192,7,c	;volatile
  3318                           
  3319                           ;src/adc.c: 49:     (ADCON2bits.ACQT = ADC_ACQT_4TAD);
  3320  000A8E  50C0               	movf	192,w,c	;volatile
  3321  000A90  0BC7               	andlw	-57
  3322  000A92  0910               	iorlw	16
  3323  000A94  6EC0               	movwf	192,c	;volatile
  3324                           
  3325                           ;src/adc.c: 50:     (ADCON2bits.ADCS = (ADC_CLK_FOSC64));
  3326  000A96  50C0               	movf	192,w,c	;volatile
  3327  000A98  0BF8               	andlw	-8
  3328  000A9A  0906               	iorlw	6
  3329  000A9C  6EC0               	movwf	192,c	;volatile
  3330                           
  3331                           ;src/adc.c: 53:     (CCP2CONbits.CCP2M = 0xB);
  3332  000A9E  50BA               	movf	186,w,c	;volatile
  3333  000AA0  0BF0               	andlw	-16
  3334  000AA2  090B               	iorlw	11
  3335  000AA4  6EBA               	movwf	186,c	;volatile
  3336                           
  3337                           ;src/adc.c: 59:     (ADCON0bits.ADON = 1u);
  3338  000AA6  80C2               	bsf	194,0,c	;volatile
  3339                           
  3340                           ;src/adc.c: 62:     (PIR1bits.ADIF = 0u);
  3341  000AA8  9C9E               	bcf	158,6,c	;volatile
  3342                           
  3343                           ;src/adc.c: 63:     (PIE1bits.ADIE = 1u);
  3344  000AAA  8C9D               	bsf	157,6,c	;volatile
  3345  000AAC  0012               	return		;funcret
  3346  000AAE                     __end_of_adc_init_default:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _Timer3_Init_Default *****************
  3350 ;; Defined at:
  3351 ;;		line 38 in file "src/timer.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text20
  3380  000BEE                     __ptext20:
  3381                           	callstack 0
  3382  000BEE                     _Timer3_Init_Default:
  3383                           	callstack 29
  3384                           
  3385                           ;src/timer.c: 39:     T3CON = 0x88u;
  3386                           
  3387                           ;incstack = 0
  3388  000BEE  0E88               	movlw	136
  3389  000BF0  6EB1               	movwf	177,c	;volatile
  3390                           
  3391                           ;src/timer.c: 40:     T3CON |= 0x30u;
  3392  000BF2  0E30               	movlw	48
  3393  000BF4  12B1               	iorwf	177,f,c	;volatile
  3394  000BF6  0012               	return		;funcret
  3395  000BF8                     __end_of_Timer3_Init_Default:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _Timer1_Init_Default *****************
  3399 ;; Defined at:
  3400 ;;		line 31 in file "src/timer.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text21
  3429  000BF8                     __ptext21:
  3430                           	callstack 0
  3431  000BF8                     _Timer1_Init_Default:
  3432                           	callstack 29
  3433                           
  3434                           ;src/timer.c: 32:     T1CON = 0x80;
  3435                           
  3436                           ;incstack = 0
  3437  000BF8  0E80               	movlw	128
  3438  000BFA  6ECD               	movwf	205,c	;volatile
  3439                           
  3440                           ;src/timer.c: 33:     T1CON |= 0x30;
  3441  000BFC  0E30               	movlw	48
  3442  000BFE  12CD               	iorwf	205,f,c	;volatile
  3443  000C00  0012               	return		;funcret
  3444  000C02                     __end_of_Timer1_Init_Default:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _CCP2_Compare_Init_Default *****************
  3448 ;; Defined at:
  3449 ;;		line 49 in file "src/ccp.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  comp_val        2    0[COMRAM] unsigned short 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text22
  3478  000B96                     __ptext22:
  3479                           	callstack 0
  3480  000B96                     _CCP2_Compare_Init_Default:
  3481                           	callstack 29
  3482                           
  3483                           ;src/ccp.c: 50:     (CCP2CON = 0xB);
  3484                           
  3485                           ;incstack = 0
  3486  000B96  0E0B               	movlw	11
  3487  000B98  6EBA               	movwf	186,c	;volatile
  3488  000B9A  96B1               	bcf	177,3,c	;volatile
  3489  000B9C  8CB1               	bsf	177,6,c	;volatile
  3490                           
  3491                           ;src/ccp.c: 52:     (CCPR2 = comp_val);
  3492  000B9E  C054  FFBB         	movff	CCP2_Compare_Init_Default@comp_val,4027	;volatile
  3493  000BA2  C055  FFBC         	movff	CCP2_Compare_Init_Default@comp_val+1,4028	;volatile
  3494                           
  3495                           ;src/ccp.c: 53:     (PIE2bits.CCP2IE = 1u);
  3496  000BA6  80A0               	bsf	160,0,c	;volatile
  3497                           
  3498                           ;src/ccp.c: 54:     (INTCONbits.PEIE = 1u);
  3499  000BA8  8CF2               	bsf	242,6,c	;volatile
  3500  000BAA  0012               	return		;funcret
  3501  000BAC                     __end_of_CCP2_Compare_Init_Default:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _CCP1_Compare_Init_Default *****************
  3505 ;; Defined at:
  3506 ;;		line 42 in file "src/ccp.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  comp_val        2    0[COMRAM] unsigned short 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        2 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_main
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text23
  3535  000BAC                     __ptext23:
  3536                           	callstack 0
  3537  000BAC                     _CCP1_Compare_Init_Default:
  3538                           	callstack 29
  3539                           
  3540                           ;src/ccp.c: 43:     (CCP1CON = 0xB);
  3541                           
  3542                           ;incstack = 0
  3543  000BAC  0E0B               	movlw	11
  3544  000BAE  6EBD               	movwf	189,c	;volatile
  3545  000BB0  96B1               	bcf	177,3,c	;volatile
  3546  000BB2  8CB1               	bsf	177,6,c	;volatile
  3547                           
  3548                           ;src/ccp.c: 45:     (CCPR1 = comp_val);
  3549  000BB4  C054  FFBE         	movff	CCP1_Compare_Init_Default@comp_val,4030	;volatile
  3550  000BB8  C055  FFBF         	movff	CCP1_Compare_Init_Default@comp_val+1,4031	;volatile
  3551                           
  3552                           ;src/ccp.c: 46:     (PIE1bits.CCP1IE = 1u);
  3553  000BBC  849D               	bsf	157,2,c	;volatile
  3554                           
  3555                           ;src/ccp.c: 47:     (INTCONbits.PEIE = 1u);
  3556  000BBE  8CF2               	bsf	242,6,c	;volatile
  3557  000BC0  0012               	return		;funcret
  3558  000BC2                     __end_of_CCP1_Compare_Init_Default:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _isr *****************
  3562 ;; Defined at:
  3563 ;;		line 177 in file "mcp2515_test.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		Interrupt level 2
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	intcode
  3591  000008                     __pintcode:
  3592                           	callstack 0
  3593  000008                     _isr:
  3594                           	callstack 26
  3595                           
  3596                           ;incstack = 0
  3597  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3598  00000A  EDB6  F004         	call	int_func,f	;refresh shadow registers
  3599                           
  3600                           	psect	intcode_body
  3601  00096C                     __pintcode_body:
  3602                           	callstack 26
  3603  00096C                     int_func:
  3604                           	callstack 26
  3605  00096C  0006               	pop		; remove dummy address from shadow register refresh
  3606                           
  3607                           ;mcp2515_test.c: 183:     if(PIR1bits.SSPIF && PIE1bits.SSPIE) {
  3608  00096E  B69E               	btfsc	158,3,c	;volatile
  3609  000970  A69D               	btfss	157,3,c	;volatile
  3610  000972  D003               	goto	i2l1683
  3611                           
  3612                           ;mcp2515_test.c: 185:         spi_transfer_complete_flag = 0x01;
  3613  000974  0E01               	movlw	1
  3614  000976  6E1B               	movwf	_spi_transfer_complete_flag^0,c
  3615                           
  3616                           ;mcp2515_test.c: 187:         PIR1bits.SSPIF = 0;
  3617  000978  969E               	bcf	158,3,c	;volatile
  3618  00097A                     i2l1683:
  3619                           
  3620                           ;mcp2515_test.c: 193:     if(INTCONbits.INT0IF && (INTCONbits.INT0IE)){
  3621  00097A  B2F2               	btfsc	242,1,c	;volatile
  3622  00097C  A8F2               	btfss	242,4,c	;volatile
  3623  00097E  D003               	goto	i2l1691
  3624                           
  3625                           ;mcp2515_test.c: 194:         mcp2515_interrupt_event = 0x01u;
  3626  000980  0E01               	movlw	1
  3627  000982  6E1A               	movwf	_mcp2515_interrupt_event^0,c	;volatile
  3628                           
  3629                           ;mcp2515_test.c: 196:         (INTCONbits.INT0IF = 0u);
  3630  000984  92F2               	bcf	242,1,c	;volatile
  3631  000986                     i2l1691:
  3632                           
  3633                           ;mcp2515_test.c: 205:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  3634  000986  B49E               	btfsc	158,2,c	;volatile
  3635  000988  A49D               	btfss	157,2,c	;volatile
  3636  00098A  D00C               	goto	i2l1705
  3637                           
  3638                           ;mcp2515_test.c: 207:         if(tmr_100ms_next){
  3639  00098C  5019               	movf	_tmr_100ms_next^0,w,c	;volatile
  3640  00098E  B4D8               	btfsc	status,2,c
  3641  000990  D004               	goto	i2l1701
  3642                           
  3643                           ;mcp2515_test.c: 209:             tmr_100ms_next = 0x00;
  3644  000992  0E00               	movlw	0
  3645  000994  6E19               	movwf	_tmr_100ms_next^0,c	;volatile
  3646                           
  3647                           ;mcp2515_test.c: 212:             node1_ready_to_tx = 0x01;
  3648  000996  0E01               	movlw	1
  3649  000998  D003               	goto	L4
  3650  00099A                     i2l1701:
  3651                           
  3652                           ;mcp2515_test.c: 218:             tmr_100ms_next = 0x01;
  3653  00099A  0E01               	movlw	1
  3654  00099C  6E19               	movwf	_tmr_100ms_next^0,c	;volatile
  3655                           
  3656                           ;mcp2515_test.c: 219:             node1_ready_to_tx = 0x00;
  3657  00099E  0E00               	movlw	0
  3658  0009A0                     L4:
  3659  0009A0  6E18               	movwf	_node1_ready_to_tx^0,c	;volatile
  3660                           
  3661                           ;mcp2515_test.c: 221:             (PIR1bits.CCP1IF = 0u);
  3662  0009A2  949E               	bcf	158,2,c	;volatile
  3663  0009A4                     i2l1705:
  3664                           
  3665                           ;mcp2515_test.c: 226:     if(PIR2bits.CCP2IF && PIE2bits.CCP2IE) {
  3666  0009A4  B0A1               	btfsc	161,0,c	;volatile
  3667  0009A6  A0A0               	btfss	160,0,c	;volatile
  3668  0009A8  D001               	goto	i2l583
  3669                           
  3670                           ;mcp2515_test.c: 227:         (PIR2bits.CCP2IF = 0u);
  3671  0009AA  90A1               	bcf	161,0,c	;volatile
  3672  0009AC                     i2l583:
  3673                           
  3674                           ;mcp2515_test.c: 231:     if((PIR1bits.ADIF) && (PIE1bits.ADIE)) {
  3675  0009AC  BC9E               	btfsc	158,6,c	;volatile
  3676  0009AE  AC9D               	btfss	157,6,c	;volatile
  3677  0009B0  D005               	goto	i2l585
  3678                           
  3679                           ;mcp2515_test.c: 232:         eng_spd_pot_reading = ADRES;
  3680  0009B2  CFC3 F00F          	movff	4035,_eng_spd_pot_reading	;volatile
  3681  0009B6  CFC4 F010          	movff	4036,_eng_spd_pot_reading+1	;volatile
  3682                           
  3683                           ;mcp2515_test.c: 234:         (PIR1bits.ADIF = 0u);
  3684  0009BA  9C9E               	bcf	158,6,c	;volatile
  3685  0009BC                     i2l585:
  3686  0009BC  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3687  0009BE  0011               	retfie		f
  3688  0009C0                     __end_of_isr:
  3689                           	callstack 0
  3690  0000                     
  3691                           	psect	rparam
  3692  0000                     
  3693                           	psect	temp
  3694  00007F                     btemp:
  3695                           	callstack 0
  3696  00007F                     	ds	1
  3697  0000                     int$flags	set	btemp
  3698  0000                     wtemp8	set	btemp+1
  3699  0000                     ttemp5	set	btemp+1
  3700  0000                     ttemp6	set	btemp+4
  3701  0000                     ttemp7	set	btemp+8
  3702                           
  3703                           	psect	idloc
  3704                           
  3705                           ;Config register IDLOC0 @ 0x200000
  3706                           ;	unspecified, using default values
  3707  200000                     	org	2097152
  3708  200000  FF                 	db	255
  3709                           
  3710                           ;Config register IDLOC1 @ 0x200001
  3711                           ;	unspecified, using default values
  3712  200001                     	org	2097153
  3713  200001  FF                 	db	255
  3714                           
  3715                           ;Config register IDLOC2 @ 0x200002
  3716                           ;	unspecified, using default values
  3717  200002                     	org	2097154
  3718  200002  FF                 	db	255
  3719                           
  3720                           ;Config register IDLOC3 @ 0x200003
  3721                           ;	unspecified, using default values
  3722  200003                     	org	2097155
  3723  200003  FF                 	db	255
  3724                           
  3725                           ;Config register IDLOC4 @ 0x200004
  3726                           ;	unspecified, using default values
  3727  200004                     	org	2097156
  3728  200004  FF                 	db	255
  3729                           
  3730                           ;Config register IDLOC5 @ 0x200005
  3731                           ;	unspecified, using default values
  3732  200005                     	org	2097157
  3733  200005  FF                 	db	255
  3734                           
  3735                           ;Config register IDLOC6 @ 0x200006
  3736                           ;	unspecified, using default values
  3737  200006                     	org	2097158
  3738  200006  FF                 	db	255
  3739                           
  3740                           ;Config register IDLOC7 @ 0x200007
  3741                           ;	unspecified, using default values
  3742  200007                     	org	2097159
  3743  200007  FF                 	db	255
  3744                           
  3745                           	psect	config
  3746                           
  3747                           ; Padding undefined space
  3748  300000                     	org	3145728
  3749  300000  FF                 	db	255
  3750                           
  3751                           ;Config register CONFIG1H @ 0x300001
  3752                           ;	Oscillator Selection bits
  3753                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3754                           ;	Fail-Safe Clock Monitor Enable bit
  3755                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3756                           ;	Internal/External Oscillator Switchover bit
  3757                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3758  300001                     	org	3145729
  3759  300001  06                 	db	6
  3760                           
  3761                           ;Config register CONFIG2L @ 0x300002
  3762                           ;	Power-up Timer Enable bit
  3763                           ;	PWRT = OFF, PWRT disabled
  3764                           ;	Brown-out Reset Enable bits
  3765                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3766                           ;	Brown Out Reset Voltage bits
  3767                           ;	BORV = 3, Minimum setting
  3768  300002                     	org	3145730
  3769  300002  1F                 	db	31
  3770                           
  3771                           ;Config register CONFIG2H @ 0x300003
  3772                           ;	Watchdog Timer Enable bit
  3773                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3774                           ;	Watchdog Timer Postscale Select bits
  3775                           ;	WDTPS = 32768, 1:32768
  3776  300003                     	org	3145731
  3777  300003  1E                 	db	30
  3778                           
  3779                           ; Padding undefined space
  3780  300004                     	org	3145732
  3781  300004  FF                 	db	255
  3782                           
  3783                           ;Config register CONFIG3H @ 0x300005
  3784                           ;	CCP2 MUX bit
  3785                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
  3786                           ;	PORTB A/D Enable bit
  3787                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3788                           ;	Low-Power Timer1 Oscillator Enable bit
  3789                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3790                           ;	MCLR Pin Enable bit
  3791                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3792  300005                     	org	3145733
  3793  300005  80                 	db	128
  3794                           
  3795                           ;Config register CONFIG4L @ 0x300006
  3796                           ;	Stack Full/Underflow Reset Enable bit
  3797                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3798                           ;	Single-Supply ICSP Enable bit
  3799                           ;	LVP = OFF, Single-Supply ICSP disabled
  3800                           ;	Extended Instruction Set Enable bit
  3801                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3802                           ;	Background Debugger Enable bit
  3803                           ;	DEBUG = 0x1, unprogrammed default
  3804  300006                     	org	3145734
  3805  300006  81                 	db	129
  3806                           
  3807                           ; Padding undefined space
  3808  300007                     	org	3145735
  3809  300007  FF                 	db	255
  3810                           
  3811                           ;Config register CONFIG5L @ 0x300008
  3812                           ;	Code Protection bit
  3813                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3814                           ;	Code Protection bit
  3815                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3816                           ;	Code Protection bit
  3817                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3818                           ;	Code Protection bit
  3819                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3820  300008                     	org	3145736
  3821  300008  0F                 	db	15
  3822                           
  3823                           ;Config register CONFIG5H @ 0x300009
  3824                           ;	Boot Block Code Protection bit
  3825                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3826                           ;	Data EEPROM Code Protection bit
  3827                           ;	CPD = OFF, Data EEPROM not code-protected
  3828  300009                     	org	3145737
  3829  300009  C0                 	db	192
  3830                           
  3831                           ;Config register CONFIG6L @ 0x30000A
  3832                           ;	Write Protection bit
  3833                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3834                           ;	Write Protection bit
  3835                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3836                           ;	Write Protection bit
  3837                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3838                           ;	Write Protection bit
  3839                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3840  30000A                     	org	3145738
  3841  30000A  0F                 	db	15
  3842                           
  3843                           ;Config register CONFIG6H @ 0x30000B
  3844                           ;	Configuration Register Write Protection bit
  3845                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3846                           ;	Boot Block Write Protection bit
  3847                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3848                           ;	Data EEPROM Write Protection bit
  3849                           ;	WRTD = OFF, Data EEPROM not write-protected
  3850  30000B                     	org	3145739
  3851  30000B  E0                 	db	224
  3852                           
  3853                           ;Config register CONFIG7L @ 0x30000C
  3854                           ;	Table Read Protection bit
  3855                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3856                           ;	Table Read Protection bit
  3857                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3858                           ;	Table Read Protection bit
  3859                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3860                           ;	Table Read Protection bit
  3861                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3862  30000C                     	org	3145740
  3863  30000C  0F                 	db	15
  3864                           
  3865                           ;Config register CONFIG7H @ 0x30000D
  3866                           ;	Boot Block Table Read Protection bit
  3867                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3868  30000D                     	org	3145741
  3869  30000D  40                 	db	64
  3870                           tosu	equ	0xFFF
  3871                           tosh	equ	0xFFE
  3872                           tosl	equ	0xFFD
  3873                           stkptr	equ	0xFFC
  3874                           pclatu	equ	0xFFB
  3875                           pclath	equ	0xFFA
  3876                           pcl	equ	0xFF9
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           indf0	equ	0xFEF
  3884                           postinc0	equ	0xFEE
  3885                           postdec0	equ	0xFED
  3886                           preinc0	equ	0xFEC
  3887                           plusw0	equ	0xFEB
  3888                           fsr0h	equ	0xFEA
  3889                           fsr0l	equ	0xFE9
  3890                           wreg	equ	0xFE8
  3891                           indf1	equ	0xFE7
  3892                           postinc1	equ	0xFE6
  3893                           postdec1	equ	0xFE5
  3894                           preinc1	equ	0xFE4
  3895                           plusw1	equ	0xFE3
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           bsr	equ	0xFE0
  3899                           indf2	equ	0xFDF
  3900                           postinc2	equ	0xFDE
  3901                           postdec2	equ	0xFDD
  3902                           preinc2	equ	0xFDC
  3903                           plusw2	equ	0xFDB
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         126
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39     126
    BANK0           128      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    SPI_Transfer_Byte_without_CS@rx	PTR unsigned char  size(1) Largest target is 13
		 -> mcp2515_eflg_buf(COMRAM[1]), mcp2515_txb2ctrl_buf(COMRAM[1]), mcp2515_txb1ctrl_buf(COMRAM[1]), mcp2515_txb0ctrl_buf(COMRAM[1]), 
		 -> mcp2515_canctrl_buf(COMRAM[1]), mcp2515_intf_buf(COMRAM[1]), can_receive@rx_buf(COMRAM[13]), receive_byte(COMRAM[1]), 
		 -> mcp2515_current_opmode@opmode(COMRAM[1]), 

    SPI_Transfer_Byte@rx	PTR unsigned char  size(1) Largest target is 1
		 -> receive_byte(COMRAM[1]), 

    can_receive@msg_buf1	PTR struct . size(1) Largest target is 17
		 -> node1_rxbf1_msg(BANK0[17]), 

    can_receive@msg_buf0	PTR struct . size(1) Largest target is 17
		 -> node1_rxbf0_msg(COMRAM[17]), 

    can_send@msg	PTR struct . size(1) Largest target is 17
		 -> node1_state_msg(COMRAM[17]), 

    can_parse_msg_ext@mcp2515_rx_buf	PTR unsigned char  size(1) Largest target is 13
		 -> can_receive@rx_buf(COMRAM[13]), 

    can_parse_msg_ext@msg	PTR struct . size(1) Largest target is 17
		 -> node1_rxbf1_msg(BANK0[17]), node1_rxbf0_msg(COMRAM[17]), 

    can_compose_msg_ext@msg	PTR struct . size(1) Largest target is 17
		 -> node1_state_msg(COMRAM[17]), 

    can_compose_msg_ext@mcp2515_tx_buf	PTR unsigned char  size(1) Largest target is 13
		 -> can_send@tx_msg_buf(COMRAM[13]), 

    mcp2515_cmd_load_tx_buf@tx_buf	PTR unsigned char  size(1) Largest target is 13
		 -> can_send@tx_msg_buf(COMRAM[13]), 

    mcp2515_cmd_read_rx_buf@rx_buf	PTR unsigned char  size(1) Largest target is 13
		 -> can_receive@rx_buf(COMRAM[13]), 

    mcp2515_cmd_read@buf	PTR unsigned char  size(1) Largest target is 1
		 -> mcp2515_eflg_buf(COMRAM[1]), mcp2515_txb2ctrl_buf(COMRAM[1]), mcp2515_txb1ctrl_buf(COMRAM[1]), mcp2515_txb0ctrl_buf(COMRAM[1]), 
		 -> mcp2515_canctrl_buf(COMRAM[1]), mcp2515_intf_buf(COMRAM[1]), mcp2515_current_opmode@opmode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_can_receive
    _can_send->_can_compose_msg_ext
    _mcp2515_cmd_rts->_SPI_Transfer_Byte
    _mcp2515_cmd_load_tx_buf->_SPI_Transfer_Byte_without_CS
    _can_receive->_can_parse_msg_ext
    _mcp2515_cmd_read_rx_buf->_SPI_Transfer_Byte_without_CS
    _can_init_default->_mcp2515_current_opmode
    _mcp2515_normal_mode->_mcp2515_cmd_write_bit
    _mcp2515_cmd_write_bit->_SPI_Transfer_Byte_without_CS
    _mcp2515_current_opmode->_mcp2515_cmd_read
    _mcp2515_cmd_read->_SPI_Transfer_Byte_without_CS
    _mcp2515_cmd_write->_SPI_Transfer_Byte_without_CS
    _mcp2515_cmd_reset->_SPI_Transfer_Byte

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40104
                                             37 COMRAM     2     2      0
          _CCP1_Compare_Init_Default
          _CCP2_Compare_Init_Default
                _Timer1_Init_Default
                _Timer3_Init_Default
                   _adc_init_default
                   _can_init_default
                        _can_receive
                           _can_send
                   _mcp2515_cmd_read
              _mcp2515_cmd_write_bit
 ---------------------------------------------------------------------------------
 (1) _can_send                                            15    14      1    4054
                                              9 COMRAM    15    14      1
                _can_compose_msg_ext
            _mcp2515_cmd_load_tx_buf
                    _mcp2515_cmd_rts
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_rts                                      1     1      0     623
                                              2 COMRAM     1     1      0
                  _SPI_Transfer_Byte
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_load_tx_buf                              6     5      1    2033
                                              2 COMRAM     6     5      1
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _can_compose_msg_ext                                  9     7      2     790
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _can_receive                                         16    14      2    9796
                                             21 COMRAM    16    14      2
                  _can_parse_msg_ext
            _mcp2515_cmd_read_rx_buf
              _mcp2515_cmd_write_bit
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_read_rx_buf                              4     3      1    2120
                                              2 COMRAM     4     3      1
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _can_parse_msg_ext                                   21    19      2     942
                                              0 COMRAM    21    19      2
 ---------------------------------------------------------------------------------
 (1) _can_init_default                                     2     2      0   17509
                                              6 COMRAM     2     2      0
            _SPI_Init_Master_Default
           _external_interrupts_init
                  _mcp2515_cmd_reset
                  _mcp2515_cmd_write
              _mcp2515_cmd_write_bit
             _mcp2515_current_opmode
                _mcp2515_normal_mode
 ---------------------------------------------------------------------------------
 (2) _mcp2515_normal_mode                                  0     0      0    6115
              _mcp2515_cmd_write_bit
 ---------------------------------------------------------------------------------
 (1) _mcp2515_cmd_write_bit                                3     1      2    6115
                                              2 COMRAM     3     1      2
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _mcp2515_current_opmode                               2     2      0    2539
                                              4 COMRAM     2     2      0
                   _mcp2515_cmd_read
 ---------------------------------------------------------------------------------
 (1) _mcp2515_cmd_read                                     2     1      1    2434
                                              2 COMRAM     2     1      1
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_write                                    2     1      1    1984
                                              2 COMRAM     2     1      1
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _SPI_Transfer_Byte_without_CS                         2     1      1    1742
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_reset                                    0     0      0     592
                  _SPI_Transfer_Byte
 ---------------------------------------------------------------------------------
 (3) _SPI_Transfer_Byte                                    2     1      1     592
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _external_interrupts_init                             4     3      1     164
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _SPI_Init_Master_Default                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init_default                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer3_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP2_Compare_Init_Default                            2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CCP1_Compare_Init_Default                            2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Compare_Init_Default
   _CCP2_Compare_Init_Default
   _Timer1_Init_Default
   _Timer3_Init_Default
   _adc_init_default
   _can_init_default
     _SPI_Init_Master_Default
     _external_interrupts_init
     _mcp2515_cmd_reset
       _SPI_Transfer_Byte
     _mcp2515_cmd_write
       _SPI_Transfer_Byte_without_CS
     _mcp2515_cmd_write_bit
       _SPI_Transfer_Byte_without_CS
     _mcp2515_current_opmode
       _mcp2515_cmd_read
         _SPI_Transfer_Byte_without_CS
     _mcp2515_normal_mode
       _mcp2515_cmd_write_bit
         _SPI_Transfer_Byte_without_CS
   _can_receive
     _can_parse_msg_ext
     _mcp2515_cmd_read_rx_buf
       _SPI_Transfer_Byte_without_CS
     _mcp2515_cmd_write_bit
       _SPI_Transfer_Byte_without_CS
   _can_send
     _can_compose_msg_ext
     _mcp2515_cmd_load_tx_buf
       _SPI_Transfer_Byte_without_CS
     _mcp2515_cmd_rts
       _SPI_Transfer_Byte
   _mcp2515_cmd_read
     _SPI_Transfer_Byte_without_CS
   _mcp2515_cmd_write_bit
     _SPI_Transfer_Byte_without_CS

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      2C       5       34.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      34        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 17 11:19:41 2021

              _mcp2515_cmd_load_tx_buf 08B0     __size_of_CCP1_Compare_Init_Default 0016  
           ?_CCP1_Compare_Init_Default 0054                   ?_Timer3_Init_Default 0054  
            mcp2515_cmd_write_bit@mask 0056                _mcp2515_cmd_read_rx_buf 0A06  
    __size_of_external_interrupts_init 006A                                    l321 08E4  
                                  l601 013C                                    l380 0860  
                                  l381 0876                                    l378 084A  
            ?_external_interrupts_init 0054                                    l595 0114  
                                  l598 0128                                    u705 087E  
                                  u706 0880      can_compose_msg_ext@mcp2515_tx_buf 0055  
                                  u740 052A                                    u745 0520  
                                  u755 055E                                    u685 0852  
                                  u765 05E6                                    u686 0854  
                                  u695 0868                                    u775 02DE  
                                  u696 086A                                    u785 03E4  
       ??_SPI_Transfer_Byte_without_CS 0055                                    _isr 0008  
                                  wreg 000FE8                     _current_entry_mode 007C  
                  mcp2515_cmd_read@buf 0056                      can_receive@rx_buf 006B  
            __size_of_mcp2515_cmd_read 0026              _CCP2_Compare_Init_Default 0B96  
                      _node1_rxbf0_msg 003C                        _node1_rxbf1_msg 009A  
                                 l2017 088C                                   l2507 0A58  
                                 l2481 0AEE                                   l2801 0166  
                                 l2547 0A14                                   l2557 0A2A  
                                 l2565 08B4                                   l2573 08C2  
                                 l2661 095A                                   l2813 0192  
                                 l2583 08F6                                   l2567 08B8  
                                 l2831 01D2                                   l2807 017C  
                                 l2735 006A                                   l2569 08BC  
                                 l2657 094C                                   l2659 0956  
                                 l2843 01FC                                   l2819 01A8  
                                 l2685 0806                                   l2845 0200  
                                 l2757 00B8                                   l2599 06BC  
                                 l2855 0230                                   l2873 0282  
                                 l2857 0236                                   l2865 0256  
                                 l2793 014A                                   l2875 0288  
                                 l2883 02A8                                   ?_isr 0054  
                                 u1320 007A                                   u1241 091A  
                                 u1330 0086                                   u1328 007C  
                                 u1281 07C2                                   u1338 0088  
                                 u1607 06CA                                   u1617 07AA  
                                 _main 0012                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 007F  
                      _node1_state_msg 002B                                   start 000E  
                         ___param_bank 000000       __size_of_SPI_Init_Master_Default 0028  
                    _node1_ready_to_tx 0018      __end_of_CCP1_Compare_Init_Default 0BC2  
                ??_Timer3_Init_Default 0054                                  ??_isr 0054  
                 __size_of_can_receive 008E               ??_mcp2515_current_opmode 0058  
                                ?_main 0054                                  _ADRES 000FC3  
                                _CCPR1 000FBE                                  _CCPR2 000FBB  
                                _T1CON 000FCD                                  _T3CON 000FB1  
         LCD_write_uint32_number@F2549 0001                                  i2l583 09AC  
                                i2l585 09BC                                  _TRISB 000F93  
                                _TRISC 000F94                      ?_adc_init_default 0054  
                   ??_adc_init_default 0054                          can_send@F2767 008D  
                                tablat 000FF5             __size_of_can_parse_msg_ext 0220  
                                ttemp5 0080                                  ttemp6 0083  
                                ttemp7 0087                    can_receive@msg_buf0 0069  
                  can_receive@msg_buf1 006A                                  status 000FD8  
                                wtemp8 0080            __end_of_Timer1_Init_Default 0C02  
            ??_mcp2515_cmd_load_tx_buf 0057               mcp2515_cmd_load_tx_buf@i 005B  
                      __initialization 09C0                   mcp2515_cmd_write@val 0056  
                         __end_of_main 02AE              ??_mcp2515_cmd_read_rx_buf 0057  
      can_parse_msg_ext@mcp2515_rx_buf 0055                                 ??_main 0079  
                  _mcp2515_normal_mode 0BD2                          __activetblptr 000002  
            __size_of_can_init_default 0102   external_interrupts_init@trigger_edge 0054  
                               i2l1701 099A                                 i2l1705 09A4  
                               i2l1691 0986                                 i2l1683 097A  
                     __end_of_can_send 096C                   ?_mcp2515_normal_mode 0054  
                               _SSPBUF 000FC9               mcp2515_cmd_read_rx_buf@i 0059  
             mcp2515_cmd_write_bit@val 0057                                 clear_0 09E6  
                               clear_1 09F2        __size_of_mcp2515_current_opmode 0018  
      __end_of_mcp2515_cmd_load_tx_buf 0914               __size_of_mcp2515_cmd_rts 0010  
       __size_of_mcp2515_cmd_write_bit 0030          __end_of_mcp2515_cmd_write_bit 0ADE  
                         __pdataCOMRAM 007B         _mcp2515_txb2_reattempt_counter 0014  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                       _mcp2515_cmd_read 0B32  
                     _mcp2515_eflg_buf 0051                         _tmr_100ms_next 0019  
      __end_of_mcp2515_cmd_read_rx_buf 0A42                  ??_mcp2515_normal_mode 0059  
                           __accesstop 0080                __end_of__initialization 09F8  
                     _mcp2515_intf_buf 0052                          ___rparam_used 000001  
              _SPI_Init_Master_Default 0B0A                         __pcstackCOMRAM 0054  
          ??_CCP1_Compare_Init_Default 0056                   _mcp2515_txb0ctrl_buf 0050  
              _mcp2515_interrupt_event 001A                   _mcp2515_txb1ctrl_buf 004F  
           mcp2515_cmd_load_tx_buf@txb 0059                   _mcp2515_txb2ctrl_buf 004E  
                        _init_complete 0028                             __pbssBANK0 0080  
          __end_of_can_compose_msg_ext 06B6                 _mcp2515_current_opmode 0B7E  
                 can_parse_msg_ext@msg 0054                                _CCP1CON 000FBD  
                              _CCP2CON 000FBA                       _can_init_default 06B6  
                            ?_can_send 005D              _CCP1_Compare_Init_Default 0BAC  
                              _SSPCON1 000FC6                      ??_mcp2515_cmd_rts 0056  
                              _SSPSTAT 000FC7              ??_SPI_Init_Master_Default 0054  
        mcp2515_cmd_load_tx_buf@tx_buf 0056            __end_of_Timer3_Init_Default 0BF8  
 __end_of_SPI_Transfer_Byte_without_CS 0B0A  __size_of_SPI_Transfer_Byte_without_CS 002C  
         _SPI_Transfer_Byte_without_CS 0ADE                                __Hparam 0000  
            __size_of_adc_init_default 0034                                __Lparam 0000  
                _mcp2515_one_shot_mode 0017                          ??_can_receive 006B  
             _external_interrupts_init 0846                                __pcinit 09C0  
                              __ramtop 1000                                __ptext0 0012  
                              __ptext1 0914                                __ptext2 0BC2  
                              __ptext3 08B0                                __ptext4 04CE  
                              __ptext5 07B8                                __ptext6 0A06  
                              __ptext7 02AE                                __ptext8 06B6  
                              __ptext9 0BD2          mcp2515_cmd_read_rx_buf@rx_buf 0056  
                           ??_can_send 005E                           __size_of_isr 09B8  
                  SPI_Transfer_Byte@rx 0054                    SPI_Transfer_Byte@tx 0055  
                       __pintcode_body 096C                   end_of_initialization 09F8  
                        __Lmediumconst 0000                                int_func 096C  
       SPI_Transfer_Byte_without_CS@rx 0054         SPI_Transfer_Byte_without_CS@tx 0055  
                           _shift_mode 0027               __end_of_mcp2515_cmd_read 0B58  
                    _mcp2515_cmd_reset 0BE2                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc1 000FE6                                postinc2 000FDE  
                    _mcp2515_cmd_write 0B58                             _rxbf0_full 001F  
                           _rxbf1_full 001E           __size_of_Timer1_Init_Default 000A  
                   can_send@tx_msg_buf 005E                     ?_mcp2515_cmd_reset 0054  
                  _eng_spd_pot_reading 000F                     ?_mcp2515_cmd_write 0056  
                            _PORTEbits 000F84                    __end_of_can_receive 0846  
                           _txbf0_full 0025                             _txbf1_full 0024  
                           _txbf0_sent 0022                             _txbf2_full 0023  
                           _txbf1_sent 0021                             _txbf2_sent 0020  
                  ??_mcp2515_cmd_reset 0056                    ??_mcp2515_cmd_write 0057  
                      _address_counter 0026                           _CURRENT_DISP 002A  
                            _TRISAbits 000F92                              _TRISDbits 000F95  
                            _TRISEbits 000F96                       _current_func_set 007B  
             ?_mcp2515_cmd_load_tx_buf 0056                  can_receive@return_val 0078  
                           _tx_counter 000D                            _CCP2CONbits 000FBA  
                   mcp2515_cmd_rts@txb 0056               ?_mcp2515_cmd_read_rx_buf 0056  
            __end_of_mcp2515_cmd_reset 0BEE              __end_of_mcp2515_cmd_write 0B7E  
                        __pidataCOMRAM 0C02             mcp2515_cmd_read_rx_buf@rxb 0057  
                  start_initialization 09C0         _mcp2515_txb0_reattempt_counter 0016  
         mcp2515_current_opmode@opmode 0059                  _mcp2515_cmd_write_bit 0AAE  
          __end_of_mcp2515_normal_mode 0BE2                            __end_of_isr 09C0  
              ?_mcp2515_current_opmode 0054                            _ack_counter 000B  
             __end_of_can_init_default 07B8                       _adc_init_default 0A7A  
                       _rxbf0_received 0012                            _can_receive 07B8  
                       _rxbf1_received 0011                        _mcp2515_cmd_rts 0BC2  
     mcp2515_cmd_write_bit@reg_address 0058                            __pbssCOMRAM 0001  
       __end_of_mcp2515_current_opmode 0B96                      __size_of_can_send 0058  
         mcp2515_cmd_write@reg_address 0057             ??_external_interrupts_init 0055  
                            __pnvBANK0 00AB             __size_of_mcp2515_cmd_reset 000C  
           __size_of_mcp2515_cmd_write 0026           __size_of_can_compose_msg_ext 01E8  
   __size_of_CCP2_Compare_Init_Default 0016                              __pintcode 0008  
                            _disp_16x2 007D             ?_CCP2_Compare_Init_Default 0054  
               can_compose_msg_ext@msg 0054                 ?_mcp2515_cmd_write_bit 0056  
                  _Timer1_Init_Default 0BF8                           _receive_byte 0053  
                             _LATDbits 000F8C                               _PIE1bits 000F9D  
                             _PIE2bits 000FA0                          _DISP_BIT_MODE 0029  
                             _PIR1bits 000F9E                               _PIR2bits 000FA1  
              __end_of_mcp2515_cmd_rts 0BD2                      ?_mcp2515_cmd_read 0056  
           _spi_transfer_complete_flag 001B                   ?_Timer1_Init_Default 0054  
                            _spi_actor 001C      __end_of_CCP2_Compare_Init_Default 0BAC  
                   ??_mcp2515_cmd_read 0057           __size_of_Timer3_Init_Default 000A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0      external_interrupts_init@which_pin 0057  
                    _SPI_Transfer_Byte 0A42                            _INTCON2bits 000FF1  
                          _INTCON3bits 000FF0                              copy_data0 09D4  
 mcp2515_current_opmode@current_opmode 0058                     ?_SPI_Transfer_Byte 0054  
             ?_SPI_Init_Master_Default 0054                            can_send@msg 005D  
                  ??_SPI_Transfer_Byte 0055                               __Hrparam 0000  
    CCP2_Compare_Init_Default@comp_val 0054                           _msg_received 0013  
                             __Lrparam 0000                  ??_Timer1_Init_Default 0054  
     __size_of_mcp2515_cmd_load_tx_buf 0064            _mcp2515_cmd_read_rx_buf$614 0058  
                       _mcp2515_status 001D       __size_of_mcp2515_cmd_read_rx_buf 003C  
                             _can_send 0914              __end_of_SPI_Transfer_Byte 0A7A  
             __end_of_adc_init_default 0AAE                    _mcp2515_canctrl_buf 004D  
                             __ptext10 0AAE                               __ptext11 0B7E  
                             __ptext20 0BEE                               __ptext12 0B32  
                             __ptext21 0BF8                               __ptext13 0B58  
                             __ptext22 0B96                               __ptext14 0ADE  
                             __ptext23 0BAC                               __ptext15 0BE2  
                             __ptext16 0A42                               __ptext17 0846  
                             __ptext18 0B0A                               __ptext19 0A7A  
     __end_of_external_interrupts_init 08B0                          __size_of_main 029C  
                    ?_can_init_default 0054                     ??_can_init_default 005A  
                     ?_mcp2515_cmd_rts 0054                           ?_can_receive 0069  
                             int$flags 007F          ?_SPI_Transfer_Byte_without_CS 0054  
                           _INTCONbits 000FF2         _mcp2515_txb1_reattempt_counter 0015  
      __end_of_SPI_Init_Master_Default 0B32                    _can_compose_msg_ext 04CE  
          mcp2515_cmd_read@reg_address 0057                               intlevel2 0000  
         __size_of_mcp2515_normal_mode 0010                      _can_parse_msg_ext 02AE  
                   ?_can_parse_msg_ext 0054                   ?_can_compose_msg_ext 0054  
          ??_CCP2_Compare_Init_Default 0056                    can_send@txbf_to_use 006B  
    CCP1_Compare_Init_Default@comp_val 0054                    ??_can_parse_msg_ext 0056  
              ??_mcp2515_cmd_write_bit 0058    mcp2515_cmd_load_tx_buf@selected_txb 005A  
                      _manual_transfer 00AB             __size_of_SPI_Transfer_Byte 0038  
                          _SSPCON1bits 000FC6                    _Timer3_Init_Default 0BEE  
            __end_of_can_parse_msg_ext 04CE                       can_receive@F2774 0080  
                    _current_disp_ctrl 007E                  ??_can_compose_msg_ext 0056  
