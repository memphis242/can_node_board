

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Nov 15 23:34:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000366                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _current_func_set
    73  000366  30                 	db	48
    74                           
    75                           ;initializer for _current_entry_mode
    76  000367  06                 	db	6
    77                           
    78                           ;initializer for _disp_16x2
    79  000368  01                 	db	1
    80                           
    81                           ;initializer for _current_disp_ctrl
    82  000369  08                 	db	8
    83                           
    84                           	psect	nvCOMRAM
    85  000066                     __pnvCOMRAM:
    86                           	callstack 0
    87  000066                     _manual_transfer:
    88                           	callstack 0
    89  000066                     	ds	1
    90  0000                     _CCPR1	set	4030
    91  0000                     _PIR1bits	set	3998
    92  0000                     _SSPBUF	set	4041
    93  0000                     _TRISDbits	set	3989
    94  0000                     _SSPSTAT	set	4039
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _INTCON3bits	set	4080
    98  0000                     _INTCON2bits	set	4081
    99  0000                     _TRISB	set	3987
   100  0000                     _ADCON1bits	set	4033
   101  0000                     _T1CON	set	4045
   102  0000                     _TRISC	set	3988
   103  0000                     _LATDbits	set	3980
   104  0000                     _INTCONbits	set	4082
   105  0000                     _PIE1bits	set	3997
   106  0000                     _T3CON	set	4017
   107  0000                     _CCP1CON	set	4029
   108                           
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112  00017E                     __pcinit:
   113                           	callstack 0
   114  00017E                     start_initialization:
   115                           	callstack 0
   116  00017E                     __initialization:
   117                           	callstack 0
   118                           
   119                           ; Initialize objects allocated to COMRAM (4 bytes)
   120                           ; load TBLPTR registers with __pidataCOMRAM
   121  00017E  0E66               	movlw	low __pidataCOMRAM
   122  000180  6EF6               	movwf	tblptrl,c
   123  000182  0E03               	movlw	high __pidataCOMRAM
   124  000184  6EF7               	movwf	tblptrh,c
   125  000186  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   126  000188  6EF8               	movwf	tblptru,c
   127  00018A  EE00  F062         	lfsr	0,__pdataCOMRAM
   128  00018E  EE10 F004          	lfsr	1,4
   129  000192                     copy_data0:
   130  000192  0009               	tblrd		*+
   131  000194  CFF5 FFEE          	movff	tablat,postinc0
   132  000198  50E5               	movf	postdec1,w,c
   133  00019A  50E1               	movf	fsr1l,w,c
   134  00019C  E1FA               	bnz	copy_data0
   135                           
   136                           ; Clear objects allocated to COMRAM (89 bytes)
   137  00019E  EE00  F001         	lfsr	0,__pbssCOMRAM
   138  0001A2  0E59               	movlw	89
   139  0001A4                     clear_0:
   140  0001A4  6AEE               	clrf	postinc0,c
   141  0001A6  06E8               	decf	wreg,f,c
   142  0001A8  E1FD               	bnz	clear_0
   143  0001AA                     end_of_initialization:
   144                           	callstack 0
   145  0001AA                     __end_of__initialization:
   146                           	callstack 0
   147  0001AA  9067               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   148  0001AC  9267               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   149  0001AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  0001B0  6EF8               	movwf	tblptru,c
   151  0001B2  0100               	movlb	0
   152  0001B4  EF4E  F001         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMRAM
   155  000001                     __pbssCOMRAM:
   156                           	callstack 0
   157  000001                     	ds	17
   158  000012                     	ds	17
   159  000023                     	ds	13
   160  000030                     	ds	13
   161  00003D                     	ds	10
   162  000047                     _node1_ready_to_tx:
   163                           	callstack 0
   164  000047                     	ds	1
   165  000048                     _tmr_100ms_next:
   166                           	callstack 0
   167  000048                     	ds	1
   168  000049                     _spi_transfer_complete_flag:
   169                           	callstack 0
   170  000049                     	ds	1
   171  00004A                     _spi_actor:
   172                           	callstack 0
   173  00004A                     	ds	1
   174  00004B                     	ds	1
   175  00004C                     _rxbf1_full:
   176                           	callstack 0
   177  00004C                     	ds	1
   178  00004D                     _rxbf0_full:
   179                           	callstack 0
   180  00004D                     	ds	1
   181  00004E                     _txbf2_sent:
   182                           	callstack 0
   183  00004E                     	ds	1
   184  00004F                     _txbf1_sent:
   185                           	callstack 0
   186  00004F                     	ds	1
   187  000050                     _txbf0_sent:
   188                           	callstack 0
   189  000050                     	ds	1
   190  000051                     _txbf2_full:
   191                           	callstack 0
   192  000051                     	ds	1
   193  000052                     _txbf1_full:
   194                           	callstack 0
   195  000052                     	ds	1
   196  000053                     _txbf0_full:
   197                           	callstack 0
   198  000053                     	ds	1
   199  000054                     	ds	1
   200  000055                     	ds	1
   201  000056                     	ds	1
   202  000057                     	ds	1
   203  000058                     	ds	1
   204  000059                     _receive_byte:
   205                           	callstack 0
   206  000059                     	ds	1
   207                           
   208                           	psect	dataCOMRAM
   209  000062                     __pdataCOMRAM:
   210                           	callstack 0
   211  000062                     	ds	1
   212  000063                     	ds	1
   213  000064                     	ds	1
   214  000065                     	ds	1
   215                           
   216                           	psect	cstackCOMRAM
   217  00005A                     __pcstackCOMRAM:
   218                           	callstack 0
   219  00005A                     external_interrupts_init@trigger_edge:
   220                           	callstack 0
   221  00005A                     SPI_Transfer_Byte@rx:
   222                           	callstack 0
   223  00005A                     SPI_Transfer_Byte_without_CS@rx:
   224                           	callstack 0
   225  00005A                     CCP1_Compare_Init_Default@comp_val:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  00005A                     	ds	1
   230  00005B                     ??_external_interrupts_init:
   231  00005B                     SPI_Transfer_Byte@tx:
   232                           	callstack 0
   233  00005B                     SPI_Transfer_Byte_without_CS@tx:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x1
   237  00005B                     	ds	1
   238  00005C                     mcp2515_cmd_read@buf:
   239                           	callstack 0
   240  00005C                     mcp2515_cmd_write@val:
   241                           	callstack 0
   242  00005C                     mcp2515_cmd_write_bit@mask:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x2
   246  00005C                     	ds	1
   247  00005D                     mcp2515_cmd_read@reg_address:
   248                           	callstack 0
   249  00005D                     mcp2515_cmd_write@reg_address:
   250                           	callstack 0
   251  00005D                     mcp2515_cmd_write_bit@val:
   252                           	callstack 0
   253  00005D                     external_interrupts_init@which_pin:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x3
   257  00005D                     	ds	1
   258  00005E                     mcp2515_current_opmode@current_opmode:
   259                           	callstack 0
   260  00005E                     mcp2515_cmd_write_bit@reg_address:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x4
   264  00005E                     	ds	1
   265  00005F                     mcp2515_current_opmode@opmode:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x5
   269  00005F                     	ds	1
   270  000060                     ??_can_init_default:
   271                           
   272                           ; 1 bytes @ 0x6
   273  000060                     	ds	2
   274  000062                     
   275                           ; 1 bytes @ 0x8
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 202 in file "mcp2515_test.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called:    5
   301 ;; This function calls:
   302 ;;		_CCP1_Compare_Init_Default
   303 ;;		_Timer1_Init_Default
   304 ;;		_can_init_default
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311  00029C                     __ptext0:
   312                           	callstack 0
   313  00029C                     _main:
   314                           	callstack 26
   315                           
   316                           ;mcp2515_test.c: 205:     can_init_default();
   317                           
   318                           ;incstack = 0
   319  00029C  EC09  F000         	call	_can_init_default	;wreg free
   320                           
   321                           ;mcp2515_test.c: 226:     Timer1_Init_Default();
   322  0002A0  ECA6  F001         	call	_Timer1_Init_Default	;wreg free
   323                           
   324                           ;mcp2515_test.c: 227:     CCP1_Compare_Init_Default(62500u);
   325  0002A4  0EF4               	movlw	244
   326  0002A6  6E5B               	movwf	(CCP1_Compare_Init_Default@comp_val+1)^0,c
   327  0002A8  0E24               	movlw	36
   328  0002AA  6E5A               	movwf	CCP1_Compare_Init_Default@comp_val^0,c
   329  0002AC  EC93  F001         	call	_CCP1_Compare_Init_Default	;wreg free
   330                           
   331                           ;mcp2515_test.c: 231:     T1CON |= 0x01;
   332  0002B0  80CD               	bsf	205,0,c	;volatile
   333                           
   334                           ;mcp2515_test.c: 232:     (INTCONbits.PEIE = 1u);
   335  0002B2  8CF2               	bsf	242,6,c	;volatile
   336                           
   337                           ;mcp2515_test.c: 233:     (INTCONbits.GIE = 1);
   338  0002B4  8EF2               	bsf	242,7,c	;volatile
   339  0002B6                     l1749:
   340                           
   341                           ;mcp2515_test.c: 238:         if(node1_ready_to_tx){
   342  0002B6  5047               	movf	_node1_ready_to_tx^0,w,c	;volatile
   343  0002B8  B4D8               	btfsc	status,2,c
   344  0002BA  D7FD               	goto	l1749
   345                           
   346                           ;mcp2515_test.c: 244:             node1_ready_to_tx = 0x00;
   347  0002BC  0E00               	movlw	0
   348  0002BE  6E47               	movwf	_node1_ready_to_tx^0,c	;volatile
   349  0002C0  D7FA               	goto	l1749
   350  0002C2                     __end_of_main:
   351                           	callstack 0
   352                           
   353 ;; *************** function _can_init_default *****************
   354 ;; Defined at:
   355 ;;		line 66 in file "src/mcp2515.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;Total ram usage:        2 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    4
   376 ;; This function calls:
   377 ;;		_SPI_Init_Master_Default
   378 ;;		_external_interrupts_init
   379 ;;		_mcp2515_cmd_reset
   380 ;;		_mcp2515_cmd_write
   381 ;;		_mcp2515_cmd_write_bit
   382 ;;		_mcp2515_current_opmode
   383 ;;		_mcp2515_normal_mode
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text1
   390  000012                     __ptext1:
   391                           	callstack 0
   392  000012                     _can_init_default:
   393                           	callstack 26
   394                           
   395                           ;src/mcp2515.c: 69:     SPI_Init_Master_Default();
   396                           
   397                           ;incstack = 0
   398  000012  EC3A  F001         	call	_SPI_Init_Master_Default	;wreg free
   399                           
   400                           ;src/mcp2515.c: 70:     (INTCONbits.GIE = 1);
   401  000016  8EF2               	bsf	242,7,c	;volatile
   402  000018                     l1697:
   403                           
   404                           ;src/mcp2515.c: 75:         mcp2515_cmd_reset();
   405  000018  ECAD  F001         	call	_mcp2515_cmd_reset	;wreg free
   406                           
   407                           ;src/mcp2515.c: 76:         _delay((unsigned long)((100u)*(40000000u/4000.0)));
   408  00001C  0E06               	movlw	6
   409  00001E  6E61               	movwf	(??_can_init_default+1)^0,c
   410  000020  0E13               	movlw	19
   411  000022  6E60               	movwf	??_can_init_default^0,c
   412  000024  0EAE               	movlw	174
   413  000026                     u307:
   414  000026  2EE8               	decfsz	wreg,f,c
   415  000028  D7FE               	bra	u307
   416  00002A  2E60               	decfsz	??_can_init_default^0,f,c
   417  00002C  D7FC               	bra	u307
   418  00002E  2E61               	decfsz	(??_can_init_default+1)^0,f,c
   419  000030  D7FA               	bra	u307
   420                           
   421                           ;src/mcp2515.c: 77:     } while( mcp2515_current_opmode() != MCP2515_OPMODE_CONFIG);
   422  000032  EC87  F001         	call	_mcp2515_current_opmode	;wreg free
   423  000036  0A04               	xorlw	4
   424  000038  A4D8               	btfss	status,2,c
   425  00003A  D7EE               	goto	l1697
   426                           
   427                           ;src/mcp2515.c: 80:     (INTCONbits.GIE = 0);
   428  00003C  9EF2               	bcf	242,7,c	;volatile
   429                           
   430                           ;src/mcp2515.c: 82:     external_interrupts_init(EXT_INT_INT0, FALLING_EDGE);
   431  00003E  0E00               	movlw	0
   432  000040  6E5A               	movwf	external_interrupts_init@trigger_edge^0,c
   433  000042  0E01               	movlw	1
   434  000044  EC8A  F000         	call	_external_interrupts_init
   435                           
   436                           ;src/mcp2515.c: 83:     (INTCONbits.GIE = 1);
   437  000048  8EF2               	bsf	242,7,c	;volatile
   438                           
   439                           ;src/mcp2515.c: 87:     mcp2515_cmd_write_bit(0x0F, 0x04, 0x00u);
   440  00004A  0E04               	movlw	4
   441  00004C  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   442  00004E  0E00               	movlw	0
   443  000050  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   444  000052  0E0F               	movlw	15
   445  000054  ECF6  F000         	call	_mcp2515_cmd_write_bit
   446                           
   447                           ;src/mcp2515.c: 94:     mcp2515_cmd_write_bit(0x2A, 0xC0, 0xC0);
   448  000058  0EC0               	movlw	192
   449  00005A  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   450  00005C  0EC0               	movlw	192
   451  00005E  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   452  000060  0E2A               	movlw	42
   453  000062  ECF6  F000         	call	_mcp2515_cmd_write_bit
   454                           
   455                           ;src/mcp2515.c: 95:     mcp2515_cmd_write_bit(0x2A, 0x3F, 0x03u);
   456  000066  0E3F               	movlw	63
   457  000068  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   458  00006A  0E03               	movlw	3
   459  00006C  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   460  00006E  0E2A               	movlw	42
   461  000070  ECF6  F000         	call	_mcp2515_cmd_write_bit
   462                           
   463                           ;src/mcp2515.c: 96:     mcp2515_cmd_write_bit(0x29, 0x80, 0x80u);
   464  000074  0E80               	movlw	128
   465  000076  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   466  000078  0E80               	movlw	128
   467  00007A  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   468  00007C  0E29               	movlw	41
   469  00007E  ECF6  F000         	call	_mcp2515_cmd_write_bit
   470                           
   471                           ;src/mcp2515.c: 97:     mcp2515_cmd_write_bit(0x29, 0x40, 0x00u);
   472  000082  0E40               	movlw	64
   473  000084  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   474  000086  0E00               	movlw	0
   475  000088  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   476  00008A  0E29               	movlw	41
   477  00008C  ECF6  F000         	call	_mcp2515_cmd_write_bit
   478                           
   479                           ;src/mcp2515.c: 98:     mcp2515_cmd_write_bit(0x29, 0x38, (7u << 3u));
   480  000090  0E38               	movlw	56
   481  000092  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   482  000094  0E38               	movlw	56
   483  000096  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   484  000098  0E29               	movlw	41
   485  00009A  ECF6  F000         	call	_mcp2515_cmd_write_bit
   486                           
   487                           ;src/mcp2515.c: 99:     mcp2515_cmd_write_bit(0x29, 0x07, (4u));
   488  00009E  0E07               	movlw	7
   489  0000A0  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   490  0000A2  0E04               	movlw	4
   491  0000A4  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   492  0000A6  0E29               	movlw	41
   493  0000A8  ECF6  F000         	call	_mcp2515_cmd_write_bit
   494                           
   495                           ;src/mcp2515.c: 100:     mcp2515_cmd_write_bit(0x28, 0x07, (5u));
   496  0000AC  0E07               	movlw	7
   497  0000AE  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   498  0000B0  0E05               	movlw	5
   499  0000B2  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   500  0000B4  0E28               	movlw	40
   501  0000B6  ECF6  F000         	call	_mcp2515_cmd_write_bit
   502                           
   503                           ;src/mcp2515.c: 126:     mcp2515_cmd_write_bit(0x60, 0x60, 0x00);
   504  0000BA  0E60               	movlw	96
   505  0000BC  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   506  0000BE  0E00               	movlw	0
   507  0000C0  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   508  0000C2  0E60               	movlw	96
   509  0000C4  ECF6  F000         	call	_mcp2515_cmd_write_bit
   510                           
   511                           ;src/mcp2515.c: 127:     mcp2515_cmd_write_bit(0x70, 0x60, 0x00);
   512  0000C8  0E60               	movlw	96
   513  0000CA  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   514  0000CC  0E00               	movlw	0
   515  0000CE  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   516  0000D0  0E70               	movlw	112
   517  0000D2  ECF6  F000         	call	_mcp2515_cmd_write_bit
   518                           
   519                           ;src/mcp2515.c: 129:     mcp2515_cmd_write_bit(0x60, 0x04, 0x04);
   520  0000D6  0E04               	movlw	4
   521  0000D8  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   522  0000DA  0E04               	movlw	4
   523  0000DC  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   524  0000DE  0E60               	movlw	96
   525  0000E0  ECF6  F000         	call	_mcp2515_cmd_write_bit
   526                           
   527                           ;src/mcp2515.c: 137:     mcp2515_cmd_write(0x2B, (0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x0
      +                          1));
   528  0000E4  0E3F               	movlw	63
   529  0000E6  6E5C               	movwf	mcp2515_cmd_write@val^0,c
   530  0000E8  0E2B               	movlw	43
   531  0000EA  EC74  F001         	call	_mcp2515_cmd_write
   532                           
   533                           ;src/mcp2515.c: 138:     mcp2515_cmd_write(0x2C, 0x00u);
   534  0000EE  0E00               	movlw	0
   535  0000F0  6E5C               	movwf	mcp2515_cmd_write@val^0,c
   536  0000F2  0E2C               	movlw	44
   537  0000F4  EC74  F001         	call	_mcp2515_cmd_write
   538                           
   539                           ;src/mcp2515.c: 145:     mcp2515_normal_mode();
   540  0000F8  EC9E  F001         	call	_mcp2515_normal_mode	;wreg free
   541                           
   542                           ;src/mcp2515.c: 148:     _delay((unsigned long)((100u)*(40000000u/4000.0)));
   543  0000FC  0E06               	movlw	6
   544  0000FE  6E61               	movwf	(??_can_init_default+1)^0,c
   545  000100  0E13               	movlw	19
   546  000102  6E60               	movwf	??_can_init_default^0,c
   547  000104  0EAE               	movlw	174
   548  000106                     u317:
   549  000106  2EE8               	decfsz	wreg,f,c
   550  000108  D7FE               	bra	u317
   551  00010A  2E60               	decfsz	??_can_init_default^0,f,c
   552  00010C  D7FC               	bra	u317
   553  00010E  2E61               	decfsz	(??_can_init_default+1)^0,f,c
   554  000110  D7FA               	bra	u317
   555  000112  0012               	return		;funcret
   556  000114                     __end_of_can_init_default:
   557                           	callstack 0
   558                           
   559 ;; *************** function _mcp2515_normal_mode *****************
   560 ;; Defined at:
   561 ;;		line 200 in file "src/mcp2515.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    3
   582 ;; This function calls:
   583 ;;		_mcp2515_cmd_write_bit
   584 ;; This function is called by:
   585 ;;		_can_init_default
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text2
   590  00033C                     __ptext2:
   591                           	callstack 0
   592  00033C                     _mcp2515_normal_mode:
   593                           	callstack 26
   594                           
   595                           ;src/mcp2515.c: 201:     mcp2515_cmd_write_bit(0x0F, 0xE0, MCP2515_OPMODE_NORMAL);
   596                           
   597                           ;incstack = 0
   598  00033C  0EE0               	movlw	224
   599  00033E  6E5C               	movwf	mcp2515_cmd_write_bit@mask^0,c
   600  000340  0E00               	movlw	0
   601  000342  6E5D               	movwf	mcp2515_cmd_write_bit@val^0,c
   602  000344  0E0F               	movlw	15
   603  000346  ECF6  F000         	call	_mcp2515_cmd_write_bit
   604  00034A  0012               	return		;funcret
   605  00034C                     __end_of_mcp2515_normal_mode:
   606                           	callstack 0
   607                           
   608 ;; *************** function _mcp2515_cmd_write_bit *****************
   609 ;; Defined at:
   610 ;;		line 369 in file "src/mcp2515.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  reg_address     1    wreg     unsigned char 
   613 ;;  mask            1    2[COMRAM] unsigned char 
   614 ;;  val             1    3[COMRAM] unsigned char 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  reg_address     1    4[COMRAM] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:        3 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    2
   633 ;; This function calls:
   634 ;;		_SPI_Transfer_Byte_without_CS
   635 ;; This function is called by:
   636 ;;		_can_init_default
   637 ;;		_mcp2515_normal_mode
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text3
   642  0001EC                     __ptext3:
   643                           	callstack 0
   644  0001EC                     _mcp2515_cmd_write_bit:
   645                           	callstack 26
   646                           
   647                           ;incstack = 0
   648                           ;mcp2515_cmd_write_bit@reg_address stored from wreg
   649  0001EC  6E5E               	movwf	mcp2515_cmd_write_bit@reg_address^0,c
   650                           
   651                           ;src/mcp2515.c: 371:     LATDbits.LATD2 = 0;
   652  0001EE  948C               	bcf	140,2,c	;volatile
   653                           
   654                           ;src/mcp2515.c: 374:     SPI_Transfer_Byte_without_CS(0x05, &receive_byte);
   655  0001F0  0E59               	movlw	low _receive_byte
   656  0001F2  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   657  0001F4  0E05               	movlw	5
   658  0001F6  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   659                           
   660                           ;src/mcp2515.c: 376:     SPI_Transfer_Byte_without_CS(reg_address, &receive_byte);
   661  0001FA  0E59               	movlw	low _receive_byte
   662  0001FC  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   663  0001FE  505E               	movf	mcp2515_cmd_write_bit@reg_address^0,w,c
   664  000200  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   665                           
   666                           ;src/mcp2515.c: 378:     SPI_Transfer_Byte_without_CS(mask, &receive_byte);
   667  000204  0E59               	movlw	low _receive_byte
   668  000206  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   669  000208  505C               	movf	mcp2515_cmd_write_bit@mask^0,w,c
   670  00020A  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   671                           
   672                           ;src/mcp2515.c: 380:     SPI_Transfer_Byte_without_CS(val, &receive_byte);
   673  00020E  0E59               	movlw	low _receive_byte
   674  000210  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   675  000212  505D               	movf	mcp2515_cmd_write_bit@val^0,w,c
   676  000214  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   677                           
   678                           ;src/mcp2515.c: 382:     LATDbits.LATD2 = 1;
   679  000218  848C               	bsf	140,2,c	;volatile
   680  00021A  0012               	return		;funcret
   681  00021C                     __end_of_mcp2515_cmd_write_bit:
   682                           	callstack 0
   683                           
   684 ;; *************** function _mcp2515_current_opmode *****************
   685 ;; Defined at:
   686 ;;		line 170 in file "src/mcp2515.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  opmode          1    5[COMRAM] unsigned char 
   691 ;;  current_opmo    1    4[COMRAM] enum E2464
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      enum E2464
   694 ;; Registers used:
   695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    3
   708 ;; This function calls:
   709 ;;		_mcp2515_cmd_read
   710 ;; This function is called by:
   711 ;;		_can_init_default
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text4
   716  00030E                     __ptext4:
   717                           	callstack 0
   718  00030E                     _mcp2515_current_opmode:
   719                           	callstack 26
   720                           
   721                           ;src/mcp2515.c: 171:     uint8_t opmode = 0x00;
   722                           
   723                           ;incstack = 0
   724  00030E  0E00               	movlw	0
   725  000310  6E5F               	movwf	mcp2515_current_opmode@opmode^0,c
   726                           
   727                           ;src/mcp2515.c: 172:     mcp2515_cmd_read(0x0E, &opmode);
   728  000312  0E5F               	movlw	low mcp2515_current_opmode@opmode
   729  000314  6E5C               	movwf	mcp2515_cmd_read@buf^0,c
   730  000316  0E0E               	movlw	14
   731  000318  EC61  F001         	call	_mcp2515_cmd_read
   732                           
   733                           ;src/mcp2515.c: 173:     opmode_t current_opmode = (opmode_t) (opmode & 0xE0);
   734  00031C  505F               	movf	mcp2515_current_opmode@opmode^0,w,c
   735  00031E  0BE0               	andlw	224
   736  000320  6E5E               	movwf	mcp2515_current_opmode@current_opmode^0,c
   737                           
   738                           ;src/mcp2515.c: 175:     return current_opmode;
   739  000322  505E               	movf	mcp2515_current_opmode@current_opmode^0,w,c
   740  000324  0012               	return		;funcret
   741  000326                     __end_of_mcp2515_current_opmode:
   742                           	callstack 0
   743                           
   744 ;; *************** function _mcp2515_cmd_read *****************
   745 ;; Defined at:
   746 ;;		line 256 in file "src/mcp2515.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  reg_address     1    wreg     unsigned char 
   749 ;;  buf             1    2[COMRAM] PTR unsigned char 
   750 ;;		 -> mcp2515_current_opmode@opmode(1), 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  reg_address     1    3[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        2 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    2
   769 ;; This function calls:
   770 ;;		_SPI_Transfer_Byte_without_CS
   771 ;; This function is called by:
   772 ;;		_mcp2515_current_opmode
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text5
   777  0002C2                     __ptext5:
   778                           	callstack 0
   779  0002C2                     _mcp2515_cmd_read:
   780                           	callstack 26
   781                           
   782                           ;incstack = 0
   783                           ;mcp2515_cmd_read@reg_address stored from wreg
   784  0002C2  6E5D               	movwf	mcp2515_cmd_read@reg_address^0,c
   785                           
   786                           ;src/mcp2515.c: 258:     LATDbits.LATD2 = 0;
   787  0002C4  948C               	bcf	140,2,c	;volatile
   788                           
   789                           ;src/mcp2515.c: 261:     SPI_Transfer_Byte_without_CS(0x03, &receive_byte);
   790  0002C6  0E59               	movlw	low _receive_byte
   791  0002C8  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   792  0002CA  0E03               	movlw	3
   793  0002CC  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   794                           
   795                           ;src/mcp2515.c: 263:     SPI_Transfer_Byte_without_CS(reg_address, &receive_byte);
   796  0002D0  0E59               	movlw	low _receive_byte
   797  0002D2  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   798  0002D4  505D               	movf	mcp2515_cmd_read@reg_address^0,w,c
   799  0002D6  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   800                           
   801                           ;src/mcp2515.c: 265:     SPI_Transfer_Byte_without_CS(0x00u, buf);
   802  0002DA  C05C  F05A         	movff	mcp2515_cmd_read@buf,SPI_Transfer_Byte_without_CS@rx
   803  0002DE  0E00               	movlw	0
   804  0002E0  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   805                           
   806                           ;src/mcp2515.c: 267:     LATDbits.LATD2 = 1;
   807  0002E4  848C               	bsf	140,2,c	;volatile
   808  0002E6  0012               	return		;funcret
   809  0002E8                     __end_of_mcp2515_cmd_read:
   810                           	callstack 0
   811                           
   812 ;; *************** function _mcp2515_cmd_write *****************
   813 ;; Defined at:
   814 ;;		line 309 in file "src/mcp2515.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  reg_address     1    wreg     unsigned char 
   817 ;;  val             1    2[COMRAM] unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  reg_address     1    3[COMRAM] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    2
   836 ;; This function calls:
   837 ;;		_SPI_Transfer_Byte_without_CS
   838 ;; This function is called by:
   839 ;;		_can_init_default
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text6
   844  0002E8                     __ptext6:
   845                           	callstack 0
   846  0002E8                     _mcp2515_cmd_write:
   847                           	callstack 27
   848                           
   849                           ;incstack = 0
   850                           ;mcp2515_cmd_write@reg_address stored from wreg
   851  0002E8  6E5D               	movwf	mcp2515_cmd_write@reg_address^0,c
   852                           
   853                           ;src/mcp2515.c: 311:     LATDbits.LATD2 = 0;
   854  0002EA  948C               	bcf	140,2,c	;volatile
   855                           
   856                           ;src/mcp2515.c: 314:     SPI_Transfer_Byte_without_CS(0x02, &receive_byte);
   857  0002EC  0E59               	movlw	low _receive_byte
   858  0002EE  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   859  0002F0  0E02               	movlw	2
   860  0002F2  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   861                           
   862                           ;src/mcp2515.c: 316:     SPI_Transfer_Byte_without_CS(reg_address, &receive_byte);
   863  0002F6  0E59               	movlw	low _receive_byte
   864  0002F8  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   865  0002FA  505D               	movf	mcp2515_cmd_write@reg_address^0,w,c
   866  0002FC  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   867                           
   868                           ;src/mcp2515.c: 318:     SPI_Transfer_Byte_without_CS(val, &receive_byte);
   869  000300  0E59               	movlw	low _receive_byte
   870  000302  6E5A               	movwf	SPI_Transfer_Byte_without_CS@rx^0,c
   871  000304  505C               	movf	mcp2515_cmd_write@val^0,w,c
   872  000306  EC26  F001         	call	_SPI_Transfer_Byte_without_CS
   873                           
   874                           ;src/mcp2515.c: 320:     LATDbits.LATD2 = 1;
   875  00030A  848C               	bsf	140,2,c	;volatile
   876  00030C  0012               	return		;funcret
   877  00030E                     __end_of_mcp2515_cmd_write:
   878                           	callstack 0
   879                           
   880 ;; *************** function _SPI_Transfer_Byte_without_CS *****************
   881 ;; Defined at:
   882 ;;		line 335 in file "src/mssp_spi.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  tx              1    wreg     unsigned char 
   885 ;;  rx              1    0[COMRAM] PTR unsigned char 
   886 ;;		 -> can_receive@rx_buf(13), receive_byte(1), mcp2515_current_opmode@opmode(1), 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  tx              1    1[COMRAM] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, fsr2l, fsr2h, status,2
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;Total ram usage:        2 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_mcp2515_cmd_read
   909 ;;		_mcp2515_cmd_write
   910 ;;		_mcp2515_cmd_write_bit
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text7
   915  00024C                     __ptext7:
   916                           	callstack 0
   917  00024C                     _SPI_Transfer_Byte_without_CS:
   918                           	callstack 26
   919                           
   920                           ;incstack = 0
   921                           ;SPI_Transfer_Byte_without_CS@tx stored from wreg
   922  00024C  6E5B               	movwf	SPI_Transfer_Byte_without_CS@tx^0,c
   923                           
   924                           ;src/mssp_spi.c: 337:     manual_transfer = 0x01;
   925  00024E  0E01               	movlw	1
   926  000250  6E66               	movwf	_manual_transfer^0,c
   927                           
   928                           ;src/mssp_spi.c: 338:     spi_transfer_complete_flag = 0x00;
   929  000252  0E00               	movlw	0
   930  000254  6E49               	movwf	_spi_transfer_complete_flag^0,c
   931                           
   932                           ;src/mssp_spi.c: 340:     SSPBUF = tx;
   933  000256  C05B  FFC9         	movff	SPI_Transfer_Byte_without_CS@tx,4041	;volatile
   934  00025A                     l1633:
   935  00025A  5049               	movf	_spi_transfer_complete_flag^0,w,c
   936  00025C  B4D8               	btfsc	status,2,c
   937  00025E  D7FD               	goto	l1633
   938                           
   939                           ;src/mssp_spi.c: 342:     *rx = SSPBUF;
   940  000260  505A               	movf	SPI_Transfer_Byte_without_CS@rx^0,w,c
   941  000262  6ED9               	movwf	fsr2l,c
   942  000264  6ADA               	clrf	fsr2h,c
   943  000266  CFC9 FFDF          	movff	4041,indf2	;volatile
   944                           
   945                           ;src/mssp_spi.c: 344:     manual_transfer = 0x00;
   946  00026A  0E00               	movlw	0
   947  00026C  6E66               	movwf	_manual_transfer^0,c
   948                           
   949                           ;src/mssp_spi.c: 345:     spi_transfer_complete_flag = 0x00;
   950  00026E  0E00               	movlw	0
   951  000270  6E49               	movwf	_spi_transfer_complete_flag^0,c
   952  000272  0012               	return		;funcret
   953  000274                     __end_of_SPI_Transfer_Byte_without_CS:
   954                           	callstack 0
   955                           
   956 ;; *************** function _mcp2515_cmd_reset *****************
   957 ;; Defined at:
   958 ;;		line 213 in file "src/mcp2515.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    2
   979 ;; This function calls:
   980 ;;		_SPI_Transfer_Byte
   981 ;; This function is called by:
   982 ;;		_can_init_default
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text8
   987  00035A                     __ptext8:
   988                           	callstack 0
   989  00035A                     _mcp2515_cmd_reset:
   990                           	callstack 27
   991                           
   992                           ;src/mcp2515.c: 214:     SPI_Transfer_Byte(0xC0, &receive_byte);
   993                           
   994                           ;incstack = 0
   995  00035A  0E59               	movlw	low _receive_byte
   996  00035C  6E5A               	movwf	SPI_Transfer_Byte@rx^0,c
   997  00035E  0EC0               	movlw	192
   998  000360  ECDC  F000         	call	_SPI_Transfer_Byte
   999  000364  0012               	return		;funcret
  1000  000366                     __end_of_mcp2515_cmd_reset:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _SPI_Transfer_Byte *****************
  1004 ;; Defined at:
  1005 ;;		line 207 in file "src/mssp_spi.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  tx              1    wreg     unsigned char 
  1008 ;;  rx              1    0[COMRAM] PTR unsigned char 
  1009 ;;		 -> receive_byte(1), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  tx              1    1[COMRAM] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr2l, fsr2h, status,2
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;Total ram usage:        2 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_mcp2515_cmd_reset
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text9
  1036  0001B8                     __ptext9:
  1037                           	callstack 0
  1038  0001B8                     _SPI_Transfer_Byte:
  1039                           	callstack 27
  1040                           
  1041                           ;incstack = 0
  1042                           ;SPI_Transfer_Byte@tx stored from wreg
  1043  0001B8  6E5B               	movwf	SPI_Transfer_Byte@tx^0,c
  1044                           
  1045                           ;src/mssp_spi.c: 208:     manual_transfer = 0x01;
  1046  0001BA  0E01               	movlw	1
  1047  0001BC  6E66               	movwf	_manual_transfer^0,c
  1048                           
  1049                           ;src/mssp_spi.c: 209:     spi_transfer_complete_flag = 0x00;
  1050  0001BE  0E00               	movlw	0
  1051  0001C0  6E49               	movwf	_spi_transfer_complete_flag^0,c
  1052                           
  1053                           ;src/mssp_spi.c: 211:     if(spi_actor == SPI_MASTER) LATDbits.LATD2 = 0;
  1054  0001C2  504A               	movf	_spi_actor^0,w,c
  1055  0001C4  B4D8               	btfsc	status,2,c
  1056  0001C6  948C               	bcf	140,2,c	;volatile
  1057                           
  1058                           ;src/mssp_spi.c: 212:     SSPBUF = tx;
  1059  0001C8  C05B  FFC9         	movff	SPI_Transfer_Byte@tx,4041	;volatile
  1060  0001CC                     l1659:
  1061  0001CC  5049               	movf	_spi_transfer_complete_flag^0,w,c
  1062  0001CE  B4D8               	btfsc	status,2,c
  1063  0001D0  D7FD               	goto	l1659
  1064                           
  1065                           ;src/mssp_spi.c: 215:     if(spi_actor == SPI_MASTER) LATDbits.LATD2 = 1;
  1066  0001D2  504A               	movf	_spi_actor^0,w,c
  1067  0001D4  B4D8               	btfsc	status,2,c
  1068  0001D6  848C               	bsf	140,2,c	;volatile
  1069                           
  1070                           ;src/mssp_spi.c: 216:     *rx = SSPBUF;
  1071  0001D8  505A               	movf	SPI_Transfer_Byte@rx^0,w,c
  1072  0001DA  6ED9               	movwf	fsr2l,c
  1073  0001DC  6ADA               	clrf	fsr2h,c
  1074  0001DE  CFC9 FFDF          	movff	4041,indf2	;volatile
  1075                           
  1076                           ;src/mssp_spi.c: 218:     manual_transfer = 0x00;
  1077  0001E2  0E00               	movlw	0
  1078  0001E4  6E66               	movwf	_manual_transfer^0,c
  1079                           
  1080                           ;src/mssp_spi.c: 219:     spi_transfer_complete_flag = 0x00;
  1081  0001E6  0E00               	movlw	0
  1082  0001E8  6E49               	movwf	_spi_transfer_complete_flag^0,c
  1083  0001EA  0012               	return		;funcret
  1084  0001EC                     __end_of_SPI_Transfer_Byte:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _external_interrupts_init *****************
  1088 ;; Defined at:
  1089 ;;		line 54 in file "src/external_interrupts.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  which_pin       1    wreg     enum E2464
  1092 ;;  trigger_edge    1    0[COMRAM] enum E2469
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  which_pin       1    3[COMRAM] enum E2464
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;Total ram usage:        4 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_can_init_default
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text10
  1119  000114                     __ptext10:
  1120                           	callstack 0
  1121  000114                     _external_interrupts_init:
  1122                           	callstack 28
  1123                           
  1124                           ;incstack = 0
  1125                           ;external_interrupts_init@which_pin stored from wreg
  1126  000114  6E5D               	movwf	external_interrupts_init@which_pin^0,c
  1127                           
  1128                           ;src/external_interrupts.c: 56:     switch(which_pin){
  1129  000116  D021               	goto	l1541
  1130  000118                     l367:
  1131                           
  1132                           ;src/external_interrupts.c: 58:             INTCON2bits.INTEDG0 = trigger_edge;
  1133  000118  B05A               	btfsc	external_interrupts_init@trigger_edge^0,0,c
  1134  00011A  D002               	bra	u195
  1135  00011C  9CF1               	bcf	241,6,c	;volatile
  1136  00011E  D001               	bra	u196
  1137  000120                     u195:
  1138  000120  8CF1               	bsf	241,6,c	;volatile
  1139  000122                     u196:
  1140                           
  1141                           ;src/external_interrupts.c: 59:             ADCON1bits.PCFG = 0xF; (TRISB |= 0x01);
  1142  000122  0E0F               	movlw	15
  1143  000124  12C1               	iorwf	193,f,c	;volatile
  1144  000126  8093               	bsf	147,0,c	;volatile
  1145                           
  1146                           ;src/external_interrupts.c: 60:             (INTCONbits.INT0IE = 1u);
  1147  000128  88F2               	bsf	242,4,c	;volatile
  1148                           
  1149                           ;src/external_interrupts.c: 61:             (INTCONbits.INT0IF = 0u);
  1150  00012A  92F2               	bcf	242,1,c	;volatile
  1151                           
  1152                           ;src/external_interrupts.c: 62:             break;
  1153  00012C  0012               	return	
  1154  00012E                     l369:
  1155                           
  1156                           ;src/external_interrupts.c: 64:             INTCON2bits.INTEDG1 = trigger_edge;
  1157  00012E  B05A               	btfsc	external_interrupts_init@trigger_edge^0,0,c
  1158  000130  D002               	bra	u205
  1159  000132  9AF1               	bcf	241,5,c	;volatile
  1160  000134  D001               	bra	u206
  1161  000136                     u205:
  1162  000136  8AF1               	bsf	241,5,c	;volatile
  1163  000138                     u206:
  1164                           
  1165                           ;src/external_interrupts.c: 65:             ADCON1bits.PCFG = 0xF; (TRISB |= 0x02);
  1166  000138  0E0F               	movlw	15
  1167  00013A  12C1               	iorwf	193,f,c	;volatile
  1168  00013C  8293               	bsf	147,1,c	;volatile
  1169                           
  1170                           ;src/external_interrupts.c: 66:             (INTCON3bits.INT1IE = 1u);
  1171  00013E  86F0               	bsf	240,3,c	;volatile
  1172                           
  1173                           ;src/external_interrupts.c: 67:             (INTCON3bits.INT1IF = 0u);
  1174  000140  90F0               	bcf	240,0,c	;volatile
  1175                           
  1176                           ;src/external_interrupts.c: 68:             break;
  1177  000142  0012               	return	
  1178  000144                     l370:
  1179                           
  1180                           ;src/external_interrupts.c: 70:             INTCON2bits.INTEDG2 = trigger_edge;
  1181  000144  B05A               	btfsc	external_interrupts_init@trigger_edge^0,0,c
  1182  000146  D002               	bra	u215
  1183  000148  98F1               	bcf	241,4,c	;volatile
  1184  00014A  D001               	bra	u216
  1185  00014C                     u215:
  1186  00014C  88F1               	bsf	241,4,c	;volatile
  1187  00014E                     u216:
  1188                           
  1189                           ;src/external_interrupts.c: 71:             ADCON1bits.PCFG = 0xF; (TRISB |= 0x04);
  1190  00014E  0E0F               	movlw	15
  1191  000150  12C1               	iorwf	193,f,c	;volatile
  1192  000152  8493               	bsf	147,2,c	;volatile
  1193                           
  1194                           ;src/external_interrupts.c: 72:             (INTCON3bits.INT2IE = 1u);
  1195  000154  88F0               	bsf	240,4,c	;volatile
  1196                           
  1197                           ;src/external_interrupts.c: 73:             (INTCON3bits.INT2IF = 0u);
  1198  000156  92F0               	bcf	240,1,c	;volatile
  1199                           
  1200                           ;src/external_interrupts.c: 74:             break;
  1201  000158  0012               	return	
  1202  00015A                     l1541:
  1203  00015A  505D               	movf	external_interrupts_init@which_pin^0,w,c
  1204  00015C  6E5B               	movwf	??_external_interrupts_init^0,c
  1205  00015E  6A5C               	clrf	(??_external_interrupts_init+1)^0,c
  1206                           
  1207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1208                           ; Switch size 1, requested type "simple"
  1209                           ; Number of cases is 1, Range of values is 0 to 0
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte            4     3 (average)
  1213                           ;	Chosen strategy is simple_byte
  1214  000160  505C               	movf	(??_external_interrupts_init+1)^0,w,c
  1215  000162  0A00               	xorlw	0	; case 0
  1216  000164  A4D8               	btfss	status,2,c
  1217  000166  0012               	return	
  1218                           
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 3, Range of values is 1 to 4
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           10     6 (average)
  1224                           ;	Chosen strategy is simple_byte
  1225  000168  505B               	movf	??_external_interrupts_init^0,w,c
  1226  00016A  0A01               	xorlw	1	; case 1
  1227  00016C  B4D8               	btfsc	status,2,c
  1228  00016E  D7D4               	goto	l367
  1229  000170  0A03               	xorlw	3	; case 2
  1230  000172  B4D8               	btfsc	status,2,c
  1231  000174  D7DC               	goto	l369
  1232  000176  0A06               	xorlw	6	; case 4
  1233  000178  A4D8               	btfss	status,2,c
  1234  00017A  0012               	return	
  1235  00017C  D7E3               	goto	l370
  1236  00017E                     __end_of_external_interrupts_init:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _SPI_Init_Master_Default *****************
  1240 ;; Defined at:
  1241 ;;		line 31 in file "src/mssp_spi.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_can_init_default
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text11
  1270  000274                     __ptext11:
  1271                           	callstack 0
  1272  000274                     _SPI_Init_Master_Default:
  1273                           	callstack 28
  1274                           
  1275                           ;src/mssp_spi.c: 33:     SSPCON1bits.SSPEN = 0;
  1276                           
  1277                           ;incstack = 0
  1278  000274  9AC6               	bcf	198,5,c	;volatile
  1279                           
  1280                           ;src/mssp_spi.c: 36:     SSPCON1 = 0x01 | 0x00;
  1281  000276  0E01               	movlw	1
  1282  000278  6EC6               	movwf	198,c	;volatile
  1283                           
  1284                           ;src/mssp_spi.c: 37:     SSPSTAT = 0x40 | 0x00;
  1285  00027A  0E40               	movlw	64
  1286  00027C  6EC7               	movwf	199,c	;volatile
  1287                           
  1288                           ;src/mssp_spi.c: 40:     TRISC |= 0x10; TRISC &= ~(0x28); TRISDbits.RD2 = 0;;
  1289  00027E  8894               	bsf	148,4,c	;volatile
  1290  000280  0ED7               	movlw	215
  1291  000282  1694               	andwf	148,f,c	;volatile
  1292  000284  9495               	bcf	149,2,c	;volatile
  1293                           
  1294                           ;src/mssp_spi.c: 43:     SSPCON1bits.SSPEN = 1;
  1295  000286  8AC6               	bsf	198,5,c	;volatile
  1296                           
  1297                           ;src/mssp_spi.c: 44:     SSPCON1bits.WCOL = 0;
  1298  000288  9EC6               	bcf	198,7,c	;volatile
  1299                           
  1300                           ;src/mssp_spi.c: 45:     SSPCON1bits.SSPOV = 0;
  1301  00028A  9CC6               	bcf	198,6,c	;volatile
  1302                           
  1303                           ;src/mssp_spi.c: 46:     SSPBUF;
  1304  00028C  50C9               	movf	201,w,c	;volatile
  1305                           
  1306                           ;src/mssp_spi.c: 47:     PIR1bits.SSPIF = 0;
  1307  00028E  969E               	bcf	158,3,c	;volatile
  1308                           
  1309                           ;src/mssp_spi.c: 50:     LATDbits.LATD2 = 1;
  1310  000290  848C               	bsf	140,2,c	;volatile
  1311                           
  1312                           ;src/mssp_spi.c: 52:     spi_actor = SPI_MASTER;
  1313  000292  0E00               	movlw	0
  1314  000294  6E4A               	movwf	_spi_actor^0,c
  1315                           
  1316                           ;src/mssp_spi.c: 55:     PIE1bits.SSPIE = 1;
  1317  000296  869D               	bsf	157,3,c	;volatile
  1318                           
  1319                           ;src/mssp_spi.c: 56:     (INTCONbits.PEIE = 1u);
  1320  000298  8CF2               	bsf	242,6,c	;volatile
  1321  00029A  0012               	return		;funcret
  1322  00029C                     __end_of_SPI_Init_Master_Default:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _Timer1_Init_Default *****************
  1326 ;; Defined at:
  1327 ;;		line 31 in file "src/timer.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text12
  1356  00034C                     __ptext12:
  1357                           	callstack 0
  1358  00034C                     _Timer1_Init_Default:
  1359                           	callstack 29
  1360                           
  1361                           ;src/timer.c: 32:     T1CON = 0x80;
  1362                           
  1363                           ;incstack = 0
  1364  00034C  0E80               	movlw	128
  1365  00034E  6ECD               	movwf	205,c	;volatile
  1366                           
  1367                           ;src/timer.c: 33:     T1CON |= 0x30;
  1368  000350  0E30               	movlw	48
  1369  000352  12CD               	iorwf	205,f,c	;volatile
  1370                           
  1371                           ;src/timer.c: 34:     (PIE1bits.TMR1IE = 1u);
  1372  000354  809D               	bsf	157,0,c	;volatile
  1373                           
  1374                           ;src/timer.c: 35:     (INTCONbits.PEIE = 1u);
  1375  000356  8CF2               	bsf	242,6,c	;volatile
  1376  000358  0012               	return		;funcret
  1377  00035A                     __end_of_Timer1_Init_Default:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _CCP1_Compare_Init_Default *****************
  1381 ;; Defined at:
  1382 ;;		line 42 in file "src/ccp.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  comp_val        2    0[COMRAM] unsigned short 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        2 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text13
  1411  000326                     __ptext13:
  1412                           	callstack 0
  1413  000326                     _CCP1_Compare_Init_Default:
  1414                           	callstack 29
  1415                           
  1416                           ;src/ccp.c: 43:     (CCP1CON = 0xB);
  1417                           
  1418                           ;incstack = 0
  1419  000326  0E0B               	movlw	11
  1420  000328  6EBD               	movwf	189,c	;volatile
  1421                           
  1422                           ;src/ccp.c: 44:     (T3CON &= ~0x48);
  1423  00032A  0EB7               	movlw	183
  1424  00032C  16B1               	andwf	177,f,c	;volatile
  1425                           
  1426                           ;src/ccp.c: 45:     (CCPR1 = comp_val);
  1427  00032E  C05A  FFBE         	movff	CCP1_Compare_Init_Default@comp_val,4030	;volatile
  1428  000332  C05B  FFBF         	movff	CCP1_Compare_Init_Default@comp_val+1,4031	;volatile
  1429                           
  1430                           ;src/ccp.c: 46:     (PIE1bits.CCP1IE = 1u);
  1431  000336  849D               	bsf	157,2,c	;volatile
  1432                           
  1433                           ;src/ccp.c: 47:     (INTCONbits.PEIE = 1u);
  1434  000338  8CF2               	bsf	242,6,c	;volatile
  1435  00033A  0012               	return		;funcret
  1436  00033C                     __end_of_CCP1_Compare_Init_Default:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _isr *****************
  1440 ;; Defined at:
  1441 ;;		line 155 in file "mcp2515_test.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		Interrupt level 2
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	intcode
  1469  000008                     __pintcode:
  1470                           	callstack 0
  1471  000008                     _isr:
  1472                           	callstack 26
  1473                           
  1474                           ;incstack = 0
  1475  000008  8267               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1476  00000A  ED0E  F001         	call	int_func,f	;refresh shadow registers
  1477                           
  1478                           	psect	intcode_body
  1479  00021C                     __pintcode_body:
  1480                           	callstack 26
  1481  00021C                     int_func:
  1482                           	callstack 26
  1483  00021C  0006               	pop		; remove dummy address from shadow register refresh
  1484                           
  1485                           ;mcp2515_test.c: 161:     if(PIR1bits.SSPIF && PIE1bits.SSPIE) {
  1486  00021E  B69E               	btfsc	158,3,c	;volatile
  1487  000220  A69D               	btfss	157,3,c	;volatile
  1488  000222  D003               	goto	i2l1421
  1489                           
  1490                           ;mcp2515_test.c: 163:         spi_transfer_complete_flag = 0x01;
  1491  000224  0E01               	movlw	1
  1492  000226  6E49               	movwf	_spi_transfer_complete_flag^0,c
  1493                           
  1494                           ;mcp2515_test.c: 165:         PIR1bits.SSPIF = 0;
  1495  000228  969E               	bcf	158,3,c	;volatile
  1496  00022A                     i2l1421:
  1497                           
  1498                           ;mcp2515_test.c: 173:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  1499  00022A  B49E               	btfsc	158,2,c	;volatile
  1500  00022C  A49D               	btfss	157,2,c	;volatile
  1501  00022E  D00C               	goto	i2l503
  1502                           
  1503                           ;mcp2515_test.c: 176:         if(tmr_100ms_next){
  1504  000230  5048               	movf	_tmr_100ms_next^0,w,c	;volatile
  1505  000232  B4D8               	btfsc	status,2,c
  1506  000234  D004               	goto	i2l1431
  1507                           
  1508                           ;mcp2515_test.c: 178:             tmr_100ms_next = 0x00;
  1509  000236  0E00               	movlw	0
  1510  000238  6E48               	movwf	_tmr_100ms_next^0,c	;volatile
  1511                           
  1512                           ;mcp2515_test.c: 181:             node1_ready_to_tx = 0x01;
  1513  00023A  0E01               	movlw	1
  1514  00023C  D003               	goto	L1
  1515  00023E                     i2l1431:
  1516                           
  1517                           ;mcp2515_test.c: 187:             tmr_100ms_next = 0x01;
  1518  00023E  0E01               	movlw	1
  1519  000240  6E48               	movwf	_tmr_100ms_next^0,c	;volatile
  1520                           
  1521                           ;mcp2515_test.c: 188:             node1_ready_to_tx = 0x00;
  1522  000242  0E00               	movlw	0
  1523  000244                     L1:
  1524  000244  6E47               	movwf	_node1_ready_to_tx^0,c	;volatile
  1525                           
  1526                           ;mcp2515_test.c: 190:             (PIR1bits.CCP1IF = 0u);
  1527  000246  949E               	bcf	158,2,c	;volatile
  1528  000248                     i2l503:
  1529  000248  9267               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1530  00024A  0011               	retfie		f
  1531  00024C                     __end_of_isr:
  1532                           	callstack 0
  1533  0000                     
  1534                           	psect	rparam
  1535  0000                     
  1536                           	psect	temp
  1537  000067                     btemp:
  1538                           	callstack 0
  1539  000067                     	ds	1
  1540  0000                     int$flags	set	btemp
  1541  0000                     wtemp8	set	btemp+1
  1542  0000                     ttemp5	set	btemp+1
  1543  0000                     ttemp6	set	btemp+4
  1544  0000                     ttemp7	set	btemp+8
  1545                           
  1546                           	psect	idloc
  1547                           
  1548                           ;Config register IDLOC0 @ 0x200000
  1549                           ;	unspecified, using default values
  1550  200000                     	org	2097152
  1551  200000  FF                 	db	255
  1552                           
  1553                           ;Config register IDLOC1 @ 0x200001
  1554                           ;	unspecified, using default values
  1555  200001                     	org	2097153
  1556  200001  FF                 	db	255
  1557                           
  1558                           ;Config register IDLOC2 @ 0x200002
  1559                           ;	unspecified, using default values
  1560  200002                     	org	2097154
  1561  200002  FF                 	db	255
  1562                           
  1563                           ;Config register IDLOC3 @ 0x200003
  1564                           ;	unspecified, using default values
  1565  200003                     	org	2097155
  1566  200003  FF                 	db	255
  1567                           
  1568                           ;Config register IDLOC4 @ 0x200004
  1569                           ;	unspecified, using default values
  1570  200004                     	org	2097156
  1571  200004  FF                 	db	255
  1572                           
  1573                           ;Config register IDLOC5 @ 0x200005
  1574                           ;	unspecified, using default values
  1575  200005                     	org	2097157
  1576  200005  FF                 	db	255
  1577                           
  1578                           ;Config register IDLOC6 @ 0x200006
  1579                           ;	unspecified, using default values
  1580  200006                     	org	2097158
  1581  200006  FF                 	db	255
  1582                           
  1583                           ;Config register IDLOC7 @ 0x200007
  1584                           ;	unspecified, using default values
  1585  200007                     	org	2097159
  1586  200007  FF                 	db	255
  1587                           
  1588                           	psect	config
  1589                           
  1590                           ; Padding undefined space
  1591  300000                     	org	3145728
  1592  300000  FF                 	db	255
  1593                           
  1594                           ;Config register CONFIG1H @ 0x300001
  1595                           ;	Oscillator Selection bits
  1596                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1597                           ;	Fail-Safe Clock Monitor Enable bit
  1598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1599                           ;	Internal/External Oscillator Switchover bit
  1600                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1601  300001                     	org	3145729
  1602  300001  06                 	db	6
  1603                           
  1604                           ;Config register CONFIG2L @ 0x300002
  1605                           ;	Power-up Timer Enable bit
  1606                           ;	PWRT = OFF, PWRT disabled
  1607                           ;	Brown-out Reset Enable bits
  1608                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1609                           ;	Brown Out Reset Voltage bits
  1610                           ;	BORV = 3, Minimum setting
  1611  300002                     	org	3145730
  1612  300002  1F                 	db	31
  1613                           
  1614                           ;Config register CONFIG2H @ 0x300003
  1615                           ;	Watchdog Timer Enable bit
  1616                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1617                           ;	Watchdog Timer Postscale Select bits
  1618                           ;	WDTPS = 32768, 1:32768
  1619  300003                     	org	3145731
  1620  300003  1E                 	db	30
  1621                           
  1622                           ; Padding undefined space
  1623  300004                     	org	3145732
  1624  300004  FF                 	db	255
  1625                           
  1626                           ;Config register CONFIG3H @ 0x300005
  1627                           ;	CCP2 MUX bit
  1628                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
  1629                           ;	PORTB A/D Enable bit
  1630                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1631                           ;	Low-Power Timer1 Oscillator Enable bit
  1632                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1633                           ;	MCLR Pin Enable bit
  1634                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1635  300005                     	org	3145733
  1636  300005  80                 	db	128
  1637                           
  1638                           ;Config register CONFIG4L @ 0x300006
  1639                           ;	Stack Full/Underflow Reset Enable bit
  1640                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1641                           ;	Single-Supply ICSP Enable bit
  1642                           ;	LVP = OFF, Single-Supply ICSP disabled
  1643                           ;	Extended Instruction Set Enable bit
  1644                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1645                           ;	Background Debugger Enable bit
  1646                           ;	DEBUG = 0x1, unprogrammed default
  1647  300006                     	org	3145734
  1648  300006  81                 	db	129
  1649                           
  1650                           ; Padding undefined space
  1651  300007                     	org	3145735
  1652  300007  FF                 	db	255
  1653                           
  1654                           ;Config register CONFIG5L @ 0x300008
  1655                           ;	Code Protection bit
  1656                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1657                           ;	Code Protection bit
  1658                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1659                           ;	Code Protection bit
  1660                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1661                           ;	Code Protection bit
  1662                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1663  300008                     	org	3145736
  1664  300008  0F                 	db	15
  1665                           
  1666                           ;Config register CONFIG5H @ 0x300009
  1667                           ;	Boot Block Code Protection bit
  1668                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1669                           ;	Data EEPROM Code Protection bit
  1670                           ;	CPD = OFF, Data EEPROM not code-protected
  1671  300009                     	org	3145737
  1672  300009  C0                 	db	192
  1673                           
  1674                           ;Config register CONFIG6L @ 0x30000A
  1675                           ;	Write Protection bit
  1676                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1677                           ;	Write Protection bit
  1678                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1679                           ;	Write Protection bit
  1680                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1681                           ;	Write Protection bit
  1682                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1683  30000A                     	org	3145738
  1684  30000A  0F                 	db	15
  1685                           
  1686                           ;Config register CONFIG6H @ 0x30000B
  1687                           ;	Configuration Register Write Protection bit
  1688                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1689                           ;	Boot Block Write Protection bit
  1690                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1691                           ;	Data EEPROM Write Protection bit
  1692                           ;	WRTD = OFF, Data EEPROM not write-protected
  1693  30000B                     	org	3145739
  1694  30000B  E0                 	db	224
  1695                           
  1696                           ;Config register CONFIG7L @ 0x30000C
  1697                           ;	Table Read Protection bit
  1698                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1699                           ;	Table Read Protection bit
  1700                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1701                           ;	Table Read Protection bit
  1702                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1703                           ;	Table Read Protection bit
  1704                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1705  30000C                     	org	3145740
  1706  30000C  0F                 	db	15
  1707                           
  1708                           ;Config register CONFIG7H @ 0x30000D
  1709                           ;	Boot Block Table Read Protection bit
  1710                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1711  30000D                     	org	3145741
  1712  30000D  40                 	db	64
  1713                           tosu	equ	0xFFF
  1714                           tosh	equ	0xFFE
  1715                           tosl	equ	0xFFD
  1716                           stkptr	equ	0xFFC
  1717                           pclatu	equ	0xFFB
  1718                           pclath	equ	0xFFA
  1719                           pcl	equ	0xFF9
  1720                           tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           prodh	equ	0xFF4
  1725                           prodl	equ	0xFF3
  1726                           indf0	equ	0xFEF
  1727                           postinc0	equ	0xFEE
  1728                           postdec0	equ	0xFED
  1729                           preinc0	equ	0xFEC
  1730                           plusw0	equ	0xFEB
  1731                           fsr0h	equ	0xFEA
  1732                           fsr0l	equ	0xFE9
  1733                           wreg	equ	0xFE8
  1734                           indf1	equ	0xFE7
  1735                           postinc1	equ	0xFE6
  1736                           postdec1	equ	0xFE5
  1737                           preinc1	equ	0xFE4
  1738                           plusw1	equ	0xFE3
  1739                           fsr1h	equ	0xFE2
  1740                           fsr1l	equ	0xFE1
  1741                           bsr	equ	0xFE0
  1742                           indf2	equ	0xFDF
  1743                           postinc2	equ	0xFDE
  1744                           postdec2	equ	0xFDD
  1745                           preinc2	equ	0xFDC
  1746                           plusw2	equ	0xFDB
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         89
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      8     102
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    SPI_Transfer_Byte_without_CS@rx	PTR unsigned char  size(1) Largest target is 13
		 -> can_receive@rx_buf(COMRAM[13]), receive_byte(COMRAM[1]), mcp2515_current_opmode@opmode(COMRAM[1]), 

    SPI_Transfer_Byte@rx	PTR unsigned char  size(1) Largest target is 1
		 -> receive_byte(COMRAM[1]), 

    mcp2515_cmd_read@buf	PTR unsigned char  size(1) Largest target is 1
		 -> mcp2515_current_opmode@opmode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_can_init_default
    _can_init_default->_mcp2515_current_opmode
    _mcp2515_normal_mode->_mcp2515_cmd_write_bit
    _mcp2515_cmd_write_bit->_SPI_Transfer_Byte_without_CS
    _mcp2515_current_opmode->_mcp2515_cmd_read
    _mcp2515_cmd_read->_SPI_Transfer_Byte_without_CS
    _mcp2515_cmd_write->_SPI_Transfer_Byte_without_CS
    _mcp2515_cmd_reset->_SPI_Transfer_Byte

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13887
          _CCP1_Compare_Init_Default
                _Timer1_Init_Default
                   _can_init_default
 ---------------------------------------------------------------------------------
 (1) _can_init_default                                     2     2      0   13789
                                              6 COMRAM     2     2      0
            _SPI_Init_Master_Default
           _external_interrupts_init
                  _mcp2515_cmd_reset
                  _mcp2515_cmd_write
              _mcp2515_cmd_write_bit
             _mcp2515_current_opmode
                _mcp2515_normal_mode
 ---------------------------------------------------------------------------------
 (2) _mcp2515_normal_mode                                  0     0      0    4615
              _mcp2515_cmd_write_bit
 ---------------------------------------------------------------------------------
 (3) _mcp2515_cmd_write_bit                                3     1      2    4615
                                              2 COMRAM     3     1      2
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _mcp2515_current_opmode                               2     2      0    1919
                                              4 COMRAM     2     2      0
                   _mcp2515_cmd_read
 ---------------------------------------------------------------------------------
 (3) _mcp2515_cmd_read                                     2     1      1    1814
                                              2 COMRAM     2     1      1
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_write                                    2     1      1    1904
                                              2 COMRAM     2     1      1
       _SPI_Transfer_Byte_without_CS
 ---------------------------------------------------------------------------------
 (4) _SPI_Transfer_Byte_without_CS                         2     1      1    1662
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _mcp2515_cmd_reset                                    0     0      0     572
                  _SPI_Transfer_Byte
 ---------------------------------------------------------------------------------
 (3) _SPI_Transfer_Byte                                    2     1      1     572
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _external_interrupts_init                             4     3      1     164
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _SPI_Init_Master_Default                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Compare_Init_Default                            2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Compare_Init_Default
   _Timer1_Init_Default
   _can_init_default
     _SPI_Init_Master_Default
     _external_interrupts_init
     _mcp2515_cmd_reset
       _SPI_Transfer_Byte
     _mcp2515_cmd_write
       _SPI_Transfer_Byte_without_CS
     _mcp2515_cmd_write_bit
       _SPI_Transfer_Byte_without_CS
     _mcp2515_current_opmode
       _mcp2515_cmd_read
         _SPI_Transfer_Byte_without_CS
     _mcp2515_normal_mode
       _mcp2515_cmd_write_bit
         _SPI_Transfer_Byte_without_CS

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      8      66       1       81.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      34        0.0%
DATA                 0      0      66       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Nov 15 23:34:53 2021

   __size_of_CCP1_Compare_Init_Default 0016             ?_CCP1_Compare_Init_Default 005A  
            mcp2515_cmd_write_bit@mask 005C      __size_of_external_interrupts_init 006A  
                                  l370 0144                                    l367 0118  
                                  l369 012E              ?_external_interrupts_init 005A  
                                  u205 0136                                    u206 0138  
                                  u215 014C                                    u216 014E  
                                  u307 0026                                    u317 0106  
                                  u195 0120                                    u196 0122  
       ??_SPI_Transfer_Byte_without_CS 005B                                    _isr 0008  
                                  wreg 000FE8                     _current_entry_mode 0063  
                  mcp2515_cmd_read@buf 005C              __size_of_mcp2515_cmd_read 0026  
                                 l1541 015A                                   l1633 025A  
                                 l1659 01CC                                   l1749 02B6  
                                 l1697 0018                                   ?_isr 005A  
                                 _main 029C                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0067  
                                 start 000E                           ___param_bank 000000  
     __size_of_SPI_Init_Master_Default 0028                      _node1_ready_to_tx 0047  
    __end_of_CCP1_Compare_Init_Default 033C                                  ??_isr 005A  
             ??_mcp2515_current_opmode 005E                                  ?_main 005A  
                                _CCPR1 000FBE                                  _T1CON 000FCD  
                                _T3CON 000FB1           LCD_write_uint32_number@F2549 003D  
                                i2l503 0248                                  _TRISB 000F93  
                                _TRISC 000F94                          can_send@F2764 0030  
                                tablat 000FF5                                  ttemp5 0068  
                                ttemp6 006B                                  ttemp7 006F  
                                status 000FD8                                  wtemp8 0068  
          __end_of_Timer1_Init_Default 035A                        __initialization 017E  
                 mcp2515_cmd_write@val 005C                           __end_of_main 02C2  
                               ??_main 0062                    _mcp2515_normal_mode 033C  
                        __activetblptr 000002              __size_of_can_init_default 0102  
 external_interrupts_init@trigger_edge 005A                                 i2l1421 022A  
                               i2l1431 023E                   ?_mcp2515_normal_mode 005A  
                               _SSPBUF 000FC9               mcp2515_cmd_write_bit@val 005D  
                               clear_0 01A4        __size_of_mcp2515_current_opmode 0018  
       __size_of_mcp2515_cmd_write_bit 0030          __end_of_mcp2515_cmd_write_bit 021C  
                         __pdataCOMRAM 0062                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                     _mcp2515_cmd_read 02C2                         _tmr_100ms_next 0048  
                ??_mcp2515_normal_mode 005F                             __accesstop 0080  
              __end_of__initialization 01AA                          ___rparam_used 000001  
              _SPI_Init_Master_Default 0274                         __pcstackCOMRAM 005A  
          ??_CCP1_Compare_Init_Default 005C                          _init_complete 0056  
               _mcp2515_current_opmode 030E                             __pnvCOMRAM 0066  
                              _CCP1CON 000FBD                       _can_init_default 0012  
            _CCP1_Compare_Init_Default 0326                                _SSPCON1 000FC6  
                              _SSPSTAT 000FC7              ??_SPI_Init_Master_Default 005A  
 __end_of_SPI_Transfer_Byte_without_CS 0274  __size_of_SPI_Transfer_Byte_without_CS 0028  
         _SPI_Transfer_Byte_without_CS 024C                                __Hparam 0000  
                              __Lparam 0000               _external_interrupts_init 0114  
                              __pcinit 017E                                __ramtop 1000  
                              __ptext0 029C                                __ptext1 0012  
                              __ptext2 033C                                __ptext3 01EC  
                              __ptext4 030E                                __ptext5 02C2  
                              __ptext6 02E8                                __ptext7 024C  
                              __ptext8 035A                                __ptext9 01B8  
                         __size_of_isr 0244                    SPI_Transfer_Byte@rx 005A  
                  SPI_Transfer_Byte@tx 005B                         __pintcode_body 021C  
                 end_of_initialization 01AA                          __Lmediumconst 0000  
                              int_func 021C         SPI_Transfer_Byte_without_CS@rx 005A  
       SPI_Transfer_Byte_without_CS@tx 005B                             _shift_mode 0055  
             __end_of_mcp2515_cmd_read 02E8                      _mcp2515_cmd_reset 035A  
                              postdec1 000FE5                                postinc0 000FEE  
                    _mcp2515_cmd_write 02E8                             _rxbf0_full 004D  
                           _rxbf1_full 004C           __size_of_Timer1_Init_Default 000E  
                   ?_mcp2515_cmd_reset 005A                     ?_mcp2515_cmd_write 005C  
                           _txbf0_full 0053                             _txbf1_full 0052  
                           _txbf0_sent 0050                             _txbf2_full 0051  
                           _txbf1_sent 004F                             _txbf2_sent 004E  
                  ??_mcp2515_cmd_reset 005C                    ??_mcp2515_cmd_write 005D  
                      _address_counter 0054                           _CURRENT_DISP 0058  
                            _TRISDbits 000F95                       _current_func_set 0062  
            __end_of_mcp2515_cmd_reset 0366              __end_of_mcp2515_cmd_write 030E  
                        __pidataCOMRAM 0366                    start_initialization 017E  
         mcp2515_current_opmode@opmode 005F                  _mcp2515_cmd_write_bit 01EC  
          __end_of_mcp2515_normal_mode 034C                            __end_of_isr 024C  
              ?_mcp2515_current_opmode 005A               __end_of_can_init_default 0114  
     mcp2515_cmd_write_bit@reg_address 005E                            __pbssCOMRAM 0001  
       __end_of_mcp2515_current_opmode 0326                           _node1_rx_msg 0012  
                         _node1_tx_msg 0001           mcp2515_cmd_write@reg_address 005D  
           ??_external_interrupts_init 005B             __size_of_mcp2515_cmd_reset 000C  
           __size_of_mcp2515_cmd_write 0026                              __pintcode 0008  
                            _disp_16x2 0064                 ?_mcp2515_cmd_write_bit 005C  
                  _Timer1_Init_Default 034C                           _receive_byte 0059  
                             _LATDbits 000F8C                               _PIE1bits 000F9D  
                        _DISP_BIT_MODE 0057                               _PIR1bits 000F9E  
                    ?_mcp2515_cmd_read 005C             _spi_transfer_complete_flag 0049  
                 ?_Timer1_Init_Default 005A                              _spi_actor 004A  
                   ??_mcp2515_cmd_read 005D                             _ADCON1bits 000FC1  
    external_interrupts_init@which_pin 005D                      _SPI_Transfer_Byte 01B8  
                          _INTCON2bits 000FF1                            _INTCON3bits 000FF0  
                            copy_data0 0192   mcp2515_current_opmode@current_opmode 005E  
                   ?_SPI_Transfer_Byte 005A               ?_SPI_Init_Master_Default 005A  
                  ??_SPI_Transfer_Byte 005B                               __Hrparam 0000  
                             __Lrparam 0000                  ??_Timer1_Init_Default 005A  
                       _mcp2515_status 004B              __end_of_SPI_Transfer_Byte 01EC  
                             __ptext10 0114                               __ptext11 0274  
                             __ptext12 034C                               __ptext13 0326  
     __end_of_external_interrupts_init 017E                          __size_of_main 0026  
                    ?_can_init_default 005A                     ??_can_init_default 0060  
                             int$flags 0067          ?_SPI_Transfer_Byte_without_CS 005A  
                           _INTCONbits 000FF2        __end_of_SPI_Init_Master_Default 029C  
          mcp2515_cmd_read@reg_address 005D                               intlevel2 0000  
         __size_of_mcp2515_normal_mode 0010      CCP1_Compare_Init_Default@comp_val 005A  
              ??_mcp2515_cmd_write_bit 005E                        _manual_transfer 0066  
           __size_of_SPI_Transfer_Byte 0034                            _SSPCON1bits 000FC6  
                     can_receive@F2771 0023                      _current_disp_ctrl 0065  
